<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="R00.xsl" ?>
<los>Unterprogramm

Zusätzlich zum Sprung an die neue Fortsetzungsadresse muss die normale Fortsetzungsadresse PC+1 in einem Rückkehrstapel zwischengespeichert und bei Rückkehr aus dem Unterprogramm wieder hergestellt werden. 

neue Variablen:
stapR = Array zum Speichern der Rückkehradresse (Rückkehrstapel)
RP    = aktuelle Speicheradresse in stapR 
RPC   = schreibt PC in stapR(RP) hinein, wenn RW='1' ist
RPCC  = liest PC aus stapR(RP) aus 
RW    = "write enable" für stapR

<i>Ausgabe aller ungeraden Zahlen 1, 3, 5, 7..., das Weiterzählen und die Ausgabe sollen in einem extra Unterprogramm erfolgen.</i>

<table border="1"><tr><th>PC</th><th>PD</th><th>FORTH-Notation</th><th>Stapelinhalt</th><th>SP</th></tr>
  <tr><td>0000</td><td>0001</td><td>1</td><td>1</td><td>1</td></tr>
  <tr><td>0001</td><td>4003</td><td>BEGIN 0003 EXECUTE</td><td>1</td><td>1</td></tr>
  <tr><td>0002</td><td>8FFE</td><td>AGAIN</td><td>3</td><td>1</td></tr>
  <tr><td>0003</td><td>0002</td><td>2</td><td>1 2</td><td>2</td></tr>
  <tr><td>0004</td><td>A007</td><td>+</td><td>3</td><td>1</td></tr>
  <tr><td>0005</td><td>B501</td><td>DUP</td><td>3 3</td><td>2</td></tr>
  <tr><td>0006</td><td>2D04</td><td>2D04</td><td>3 3 2D04</td><td>3</td></tr>
  <tr><td>0007</td><td>A009</td><td>!</td><td>3</td><td>1</td></tr>
  <tr><td>0008</td><td>A003</td><td>; ( RETURN )</td><td>3</td><td>1</td></tr>
  </table>Das Unterprogramm geht von PC=0003 bis PC=0008. Es wird in der Programmschleife PC=0001 bis PC=0002 wiederholt aufgerufen. 

<term>your-repo$ git checkout Step_5
your-repo$ git diff Step_4 Step_5</term>
<term>Tcl Console: launch_simulation
Tcl Console: run 1000 ns</term><favicon/> Ergebnis: 
ab Zeitpunkt in ns     Wert von LEDS
     0                  UU
   110                  01
   270                  03
   430                  05
   590                  07
   750                  09
   910                  0B

Weiter mit <a href="R06_Umstapeln.xml">R06 Umstapeln</a>, wenn geht.

</los>
