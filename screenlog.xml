<?xml version="1.0" encoding="utf-8" ?> 
<?xml-stylesheet type="text/xsl" href="INIT.xsl" ?> 
<!DOCTYPE INIT SYSTEM "INIT.DTD"> 
<INIT> 
<AXIOME> 
<sekt inhalt="Axiome (sie enthalten Vorwärtsreferenzen und sind deshalb separat zusammengefasst)"> 
<sekt inhalt="vorab der Ablauf, was tun, wenn diese Axiome geändert werden müssen"> 
( wenn die Axiome so bleiben wie sie sind, ganz normal 1x hintereinanderweg compilieren ) <ok></ok>
( wenn die Axiome verändert werden sollen, dann ) <ok></ok>
  ( zuerst RESET und 1x die ursprünglichen Axiome laden )  <ok></ok>
  ( anschließend die neuen Axiome compilieren, so: ) <ok></ok>
    ( HERE 100 + DPMERK ! 3400 BANF ! ) <ok></ok>
    ( 2x neue Axiome compilieren <REF1/> ) <ok></ok>
    ( 0028 DPMERK ! 3000 BANF ! ) <ok></ok>
    ( 2x neue Axiome compilieren <REF1/> nochmal )  <ok></ok>
    ( danach alles, was nach den AXIOMEN folgt, 1x compilieren ) <ok></ok>
  ( bei verzwickten Veränderungen kann es vorkommen,  <ok></ok>
  ( dass noch weitere Zwischenschritte eingefügt werden müssen. ) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Anfangszustand so herstellen wie zum Recompilieren benötigt"> 
( zuerst alles Notwendige wieder auf Ausgangszustand schalten ) <ok></ok>
2 2 * DUP * BASE ! ( HEX ) <ok></ok>
7 ' NUMBER ' EXPECT 1 + @ OVER 1 + ! ! ( original NUMBER ) <ok></ok>
B501 ' LIT, ! 3FFF ' LIT, 1 + !        ( original LIT, ) <ok></ok>
0010 001E !        ( aktiviert ^F = START ) <ok></ok>
' DUMPZ 4 - LFA !  ( LFA zurueck auf Anfangsvokabular ) <ok></ok>
 <ok></ok>
DPMERK @ DP ! BANF @ BZEIG ! ( DP und BZEIG zurücksetzen ) <ok></ok><fl>125E 3761 </fl><fr>0028 3000 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="so, mit irgendwas muss das Compilieren losgehen"> 
IMMEDIATE: ( 29 WORD 2DROP ; <ok></ok><fl>0028 3000 </fl><fr>0030 3002 </fr>
IMMEDIATE: { 0 STAT ! ; ( war ursprünglich mal [ )   <ok></ok><fl>0030 3002 </fl><fr>0038 3004 </fr>
: } 1 STAT ! ; <ok></ok><fl>0038 3004 </fl><fr>0040 3006 </fr>
IMMEDIATE: COMPILE 20 WORD FIND LCFA DROP COMPILE, ; <ok></ok><fl>0040 3006 </fl><fr>004B 300E </fr>
COMPILE: (LIT,) R> DUP 1+ >R @ ; <ok></ok><fl>004B 300E </fl><fr>0055 3015 </fr>
: LIT, ( a --> ) DUP 3FFF > OVER C000 LT OR IF COMPILE (LIT,) END_IF , ; <ok></ok><fl>0055 3015 </fl><fr>0064 301A </fr>
COMPILE: (CONSTANT:) R> @ STAT @ IF LIT, END_IF ; <ok></ok><fl>0064 301A </fl><fr>006F 3026 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Konstanten"> 
: CONSTANT ( /name/  c --> ) CREATE COMPILE (CONSTANT:) , SMUDGE ; <ok></ok><fl>006F 3026 </fl><fr>0078 302F </fr>
 <ok></ok>
2800 CONSTANT KEYADR <ok></ok><fl>0078 302F </fl><fr>007D 3036 </fr>
2801 CONSTANT SP <ok></ok><fl>007D 3036 </fl><fr>0082 3039 </fr>
2802 CONSTANT RP <ok></ok><fl>0082 3039 </fl><fr>0087 303C </fr>
2803 CONSTANT PC <ok></ok><fl>0087 303C </fl><fr>008C 303F </fr>
 <ok></ok>
2F00 CONSTANT XBIT <ok></ok><fl>008C 303F </fl><fr>0091 3044 </fr>
2F01 CONSTANT SMUDGEBIT <ok></ok><fl>0091 3044 </fl><fr>0096 304E </fr>
2F02 CONSTANT RP0 3000 RP0 ! <ok></ok><fl>0096 304E </fl><fr>009B 3052 </fr>
2F03 CONSTANT IRAMADR <ok></ok><fl>009B 3052 </fl><fr>00A0 305A </fr>
2F04 CONSTANT JRAMADR <ok></ok><fl>00A0 305A </fl><fr>00A5 3062 </fr>
2F05 CONSTANT XOFF <ok></ok><fl>00A5 3062 </fl><fr>00AA 3067 </fr>
2F06 CONSTANT CRBZEIG BZEIG @ CRBZEIG ! <ok></ok><fl>00AA 306F </fl><fr>00AF 306F </fr>
2F07 CONSTANT CRDP DP @ 8 - CRDP ! <ok></ok><fl>00AC 306F </fl><fr>00B4 3074 </fr>
 <ok></ok>
2F08 CONSTANT BASE <ok></ok><fl>00B4 3074 </fl><fr>00B9 3079 </fr>
2F09 CONSTANT TIB <ok></ok><fl>00B9 3079 </fl><fr>00BE 307D </fr>
2F0A CONSTANT IN1 <ok></ok><fl>00BE 307D </fl><fr>00C3 3081 </fr>
2F0B CONSTANT IN2 <ok></ok><fl>00C3 3081 </fl><fr>00C8 3085 </fr>
2F0C CONSTANT IN3 <ok></ok><fl>00C8 3085 </fl><fr>00CD 3089 </fr>
2F0D CONSTANT IN4 <ok></ok><fl>00CD 3089 </fl><fr>00D2 308D </fr>
2F0E CONSTANT ERRORNR 0 ERRORNR ! <ok></ok><fl>00D2 308D </fl><fr>00D7 3095 </fr>
2F0F CONSTANT DP <ok></ok><fl>00D7 3095 </fl><fr>00DC 3098 </fr>
2F10 CONSTANT STAT 0 STAT ! <ok></ok><fl>00DC 3098 </fl><fr>00E1 309D </fr>
2F11 CONSTANT LFA <ok></ok><fl>00E1 309D </fl><fr>00E6 30A1 </fr>
2F12 CONSTANT BANF <ok></ok><fl>00E6 30A1 </fl><fr>00EB 30A6 </fr>
2F13 CONSTANT BZEIG <ok></ok><fl>00EB 30A6 </fl><fr>00F0 30AC </fr>
2F14 CONSTANT DPMERK <ok></ok><fl>00F0 30AC </fl><fr>00F5 30B3 </fr>
2F15 CONSTANT CSP <ok></ok><fl>00F5 30B3 </fl><fr>00FA 30B7 </fr>
2F16 CONSTANT LOCALADDR <ok></ok><fl>00FA 30B7 </fl><fr>00FF 30C1 </fr>
2F17 CONSTANT LOCALADRESSE <ok></ok><fl>00FF 30C1 </fl><fr>0104 30CE </fr>
 <ok></ok>
VERSION 1+ CONSTANT VERSION VERSION . <ok>01B2 </ok><fl>0104 30CE </fl><fr>0109 30D6 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Maschinencode"> 
A003 CONSTANT RETURN <ok></ok><fl>0109 30D6 </fl><fr>010E 30DD </fr>
COMPILE: (MCODE:) R> STAT @ IF @ , ELSE EXECUTE END_IF ; <ok></ok><fl>010E 30DD </fl><fr>011B 30E6 </fr>
: MCODE CREATE COMPILE (MCODE:) , RETURN , SMUDGE ; <ok></ok><fl>011B 30E6 </fl><fr>0127 30EC </fr>
 <ok></ok>
A000 MCODE MINUS <ok></ok><fl>0127 30EC </fl><fr>012D 30F2 </fr>
A001 MCODE U+ <ok></ok><fl>012D 30F2 </fl><fr>0133 30F5 </fr>
A002 MCODE U* <ok></ok><fl>0133 30F5 </fl><fr>0139 30F8 </fr>
A00D MCODE 0= <ok></ok><fl>0139 30F8 </fl><fr>013F 30FB </fr>
A00F MCODE 0LT <ok></ok><fl>013F 30FB </fl><fr>0145 30FF </fr>
A005 MCODE EMITCODE <ok></ok><fl>0145 30FF </fl><fr>014B 3108 </fr>
A00B MCODE NOT <ok></ok><fl>014B 3108 </fl><fr>0151 310C </fr>
A008 MCODE AND <ok></ok><fl>0151 310C </fl><fr>0157 3110 </fr>
A00E MCODE OR <ok></ok><fl>0157 3110 </fl><fr>015D 3113 </fr>
A00C MCODE KEYCODE <ok></ok><fl>015D 3113 </fl><fr>0163 311B </fr>
A007 MCODE + <ok></ok><fl>0163 311B </fl><fr>0169 311D </fr>
A009 MCODE ! <ok></ok><fl>0169 311D </fl><fr>016F 311F </fr>
A00A MCODE @ <ok></ok><fl>016F 311F </fl><fr>0175 3121 </fr>
B412 MCODE SWAP <ok></ok><fl>0175 3121 </fl><fr>017B 3126 </fr>
B502 MCODE OVER <ok></ok><fl>017B 3126 </fl><fr>0181 312B </fr>
B501 MCODE DUP <ok></ok><fl>0181 312B </fl><fr>0187 312F </fr>
B434 MCODE ROT <ok></ok><fl>0187 312F </fl><fr>018D 3133 </fr>
B300 MCODE DROP <ok></ok><fl>018D 3133 </fl><fr>0193 3138 </fr>
B43C MCODE 2SWAP <ok></ok><fl>0193 3138 </fl><fr>0199 313E </fr>
B60C MCODE 2OVER <ok></ok><fl>0199 313E </fl><fr>019F 3144 </fr>
B603 MCODE 2DUP <ok></ok><fl>019F 3144 </fl><fr>01A5 3149 </fr>
B200 MCODE 2DROP <ok></ok><fl>01A5 3149 </fl><fr>01AB 314F </fr>
8000 MCODE NOOP <ok></ok><fl>01AB 314F </fl><fr>01B1 3154 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="ein Abschnitt für die Zeichenketten"> 
: B, ( b --> ) BZEIG @ ! 1 BZEIG +! ; <ok></ok><fl>01B1 3154 </fl><fr>01BC 3157 </fr>
: Z, ( badr n --> ) BZEIG @ LIT, DUP , <ok></ok><fl>01BC 3157 </fl><fr>01C5 315A </fr>
  BEGIN SWAP DUP @ B, 1+ SWAP 1 - DUP 0= UNTIL <ok></ok><fl>01C5 315A </fl><fr>01D0 315A </fr>
  2DROP 20 B, ;  <ok></ok><fl>01D0 315A </fl><fr>01D4 315A </fr>
COMPILE: (WORD:) WORD STAT @ IF Z, R> COMPILE, END_IF ; <ok></ok><fl>01D4 315A </fl><fr>01E0 3162 </fr>
: WORD: CREATE 1 STAT ! , COMPILE (WORD:) -1 CSP +! ; <ok></ok><fl>01E0 3162 </fl><fr>01EE 3168 </fr>
22 WORD: " ; <ok></ok><fl>01EE 3168 </fl><fr>01F4 316A </fr>
22 WORD: ." TYPE ; <ok></ok><fl>01F4 316A </fl><fr>01FB 316D </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="weiter mit Programmstrukturen"> 
: HERE DP @ ; <ok></ok><fl>01FB 316D </fl><fr>0202 3172 </fr>
: JRBIT 8 ; <ok></ok><fl>0202 3172 </fl><fr>0208 3178 </fr>
: JR0BIT 9 ; <ok></ok><fl>0208 3178 </fl><fr>020E 317F </fr>
: XSETBT 1000 * SWAP 0FFF AND OR ; <ok></ok><fl>020E 317F </fl><fr>0219 3186 </fr>
: ALLOT DP +! ; <ok></ok><fl>0219 3186 </fl><fr>0220 318C </fr>
: BRANCH, HERE 1+ - JRBIT XSETBT , ; <ok></ok><fl>0220 318C </fl><fr>022B 3194 </fr>
: 0BRANCH, HERE 1+ - JR0BIT XSETBT , ; <ok></ok><fl>022B 3194 </fl><fr>0236 319D </fr>
IMMEDIATE: BEGIN HERE ; <ok></ok><fl>0236 319D </fl><fr>023C 31A3 </fr>
IMMEDIATE: AGAIN BRANCH, ; <ok></ok><fl>023C 31A3 </fl><fr>0242 31A9 </fr>
IMMEDIATE: UNTIL 0BRANCH, ; <ok></ok><fl>0242 31A9 </fl><fr>0248 31AF </fr>
IMMEDIATE: IF JR0BIT 1 ALLOT HERE ; <ok></ok><fl>0248 31AF </fl><fr>0251 31B2 </fr>
IMMEDIATE: END_IF HERE OVER - ROT XSETBT SWAP 1 - ! ; <ok></ok><fl>0251 31B2 </fl><fr>025F 31B9 </fr>
IMMEDIATE: ELSE 1 ALLOT COMPILE END_IF JRBIT HERE ; <ok></ok><fl>025F 31B9 </fl><fr>0269 31BE </fr>
IMMEDIATE: WHILE COMPILE IF ; <ok></ok><fl>0269 31BE </fl><fr>026F 31C4 </fr>
IMMEDIATE: REPEAT ROT COMPILE AGAIN COMPILE END_IF ; <ok></ok><fl>026F 31C4 </fl><fr>0277 31CB </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="etliche kleinere Funktionen"> 
: C@ @ ; <ok></ok><fl>0277 31CB </fl><fr>027D 31CE </fr>
: C! ! ; <ok></ok><fl>027D 31CE </fl><fr>0283 31D1 </fr>
: 1+ ( a --> a+1 ) 1 + ; <ok></ok><fl>0283 31D1 </fl><fr>028A 31D4 </fr>
: - MINUS + ; <ok></ok><fl>028A 31D4 </fl><fr>0291 31D6 </fr>
: = - 0= ; <ok></ok><fl>0291 31D6 </fl><fr>0298 31D8 </fr>
: LT ( a b --> r ) 8000 + SWAP NOT 8000 + 0 U+ DROP 0= NOT ; <ok></ok><fl>0298 31D8 </fl><fr>02AA 31DB </fr>
: > ( a b --> r ) SWAP LT ; <ok></ok><fl>02AA 31DB </fl><fr>02B1 31DD </fr>
: * ( a b --> a*b ) 0 ROT ROT U* SWAP DROP ; <ok></ok><fl>02B1 31DD </fl><fr>02BC 31DF </fr>
: BYE BEGIN ." BYE " AGAIN ; <ok></ok><fl>02BC 31DF </fl><fr>02C5 31E8 </fr>
: +! ( a adr --> adr+1 ) SWAP OVER @ + SWAP ! ; <ok></ok><fl>02C5 31E8 </fl><fr>02D0 31EB </fr>
: R> RP @ 1+ @ RP @ 1+ RP 2DUP @ @ SWAP ! ! ; <ok></ok><fl>02D0 31EB </fl><fr>02E3 31EE </fr>
: >R RP @ DUP -1 + RP 2DUP @ @ SWAP DUP -1 + RP ! ! ! ! ;  <ok></ok><fl>02E3 31EE </fl><fr>02FA 31F1 </fr>
: R RP @ 1+ @ ; ( bei R> >R nicht unterhalb RP speichern wegen INTXY ) <ok></ok><fl>02FA 31F1 </fl><fr>0303 31F3 </fr>
: , DP @ ! 1 DP +! ; <ok></ok><fl>0303 31F3 </fl><fr>030E 31F5 </fr>
: EXECUTE PC ! ; <ok></ok><fl>030E 31F5 </fl><fr>0315 31FD </fr>
: KEY 12 EXECUTE ; <ok></ok><fl>0315 31FD </fl><fr>031C 3201 </fr>
: EMIT ' EMITCODE EXECUTE ; <ok></ok><fl>031C 3201 </fl><fr>0323 3206 </fr>
: SHL16 ( a --> t a' ) <ok></ok><fl>0323 3206 </fl><fr>0327 320C </fr>
  0 SWAP 10 U* SWAP ; ( t a' = SHL a ) <ok></ok><fl>0327 320C </fl><fr>032D 320C </fr>
: DIG ( n --> c ) <ok></ok><fl>032D 320C </fl><fr>0331 3210 </fr>
  DUP 0A LT IF ELSE 7 + END_IF 30 + ; <ok></ok><fl>0331 3210 </fl><fr>033B 3210 </fr>
: TYPE <ok></ok><fl>033B 3210 </fl><fr>033F 3215 </fr>
  BEGIN DUP WHILE <ok></ok><fl>033F 3215 </fl><fr>0341 3215 </fr>
    SWAP DUP C@ EMIT 1+ <ok></ok><fl>0341 3215 </fl><fr>0346 3215 </fr>
    SWAP 1 - REPEAT <ok></ok><fl>0346 3215 </fl><fr>034A 3215 </fr>
  2DROP ; <ok></ok><fl>034A 3215 </fl><fr>034C 3215 </fr>
: HG. SHL16 DIG EMIT SHL16 DIG EMIT SHL16 DIG EMIT <ok></ok><fl>034C 3215 </fl><fr>0359 3219 </fr>
  SHL16 DIG EMIT DROP ; <ok></ok><fl>0359 3219 </fl><fr>035E 3219 </fr>
: H. HG. 20 EMIT ; <ok></ok><fl>035E 3219 </fl><fr>0366 321C </fr>
: . H. ; <ok></ok><fl>0366 321C </fl><fr>036C 321E </fr>
: ? @ . ; <ok></ok><fl>036C 321E </fl><fr>0373 3220 </fr>
: CR  <ok></ok><fl>0373 3220 </fl><fr>0377 3223 </fr>
  CRDP @ DP @ - STAT @ 0= NOT OR XBIT @ 0= NOT AND IF  <ok></ok><fl>0377 3223 </fl><fr>0387 3223 </fr>
    3C EMIT ." fl>" CRDP @ . CRBZEIG @ . 3C EMIT ." /fl>" <ok></ok><fl>0387 3223 </fl><fr>0397 322C </fr>
    3C EMIT ." fr>" DP @ . BZEIG @ . 3C EMIT ." /fr>" <ok></ok><fl>0397 322C </fl><fr>03A7 3235 </fr>
    DP @ CRDP ! BZEIG @ CRBZEIG !  <ok></ok><fl>03A7 3235 </fl><fr>03AF 3235 </fr>
    END_IF <ok></ok><fl>03AF 3235 </fl><fr>03AF 3235 </fr>
  0A EMIT ; <ok></ok><fl>03AF 3235 </fl><fr>03B2 3235 </fr>
: FEHLERTEXT ( n --> n ) ; <ok></ok><fl>03B2 3235 </fl><fr>03B7 3240 </fr>
: DISABLE  <ok></ok><fl>03B7 3240 </fl><fr>03BB 3248 </fr>
  CR ." weiter nach Taste ESCAPE " <ok></ok><fl>03BB 3248 </fl><fr>03BF 3262 </fr>
  BEGIN 20 EMIT 8 EMIT KEY 1B = UNTIL ;  <ok></ok><fl>03BF 3262 </fl><fr>03C8 3262 </fr>
: ERROR <ok></ok><fl>03C8 3262 </fl><fr>03CC 3268 </fr>
  DUP ERRORNR ! <ok></ok><fl>03CC 3268 </fl><fr>03CF 3268 </fr>
  0 STAT ! <ok></ok><fl>03CF 3268 </fl><fr>03D2 3268 </fr>
  CR IN1 @ IN3 @ IN1 @ - 1 - TYPE ." ???" <ok></ok><fl>03D2 3268 </fl><fr>03E0 326C </fr>
  " FEHLERTEXT" INTERPRET <ok></ok><fl>03E0 326C </fl><fr>03E4 3277 </fr>
  CR ." ERROR - Fehler Nummer " .  <ok></ok><fl>03E4 3277 </fl><fr>03E9 328E </fr>
  DISABLE QUIT ; <ok></ok><fl>03E9 328E </fl><fr>03EC 328E </fr>
: CSP! SP @ CSP ! ; <ok></ok><fl>03EC 328E </fl><fr>03F5 3293 </fr>
: CSP? SP @ CSP @ - IF 9 ERROR END_IF ; <ok></ok><fl>03F5 3293 </fl><fr>0402 3298 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="lokale Variablen"> 
: LOCAL ( n --> ) 1 + LOCALADRESSE @ OVER - DUP LOCALADRESSE ! ! ; <ok></ok><fl>0402 3298 </fl><fr>0411 329E </fr>
: END_LOCAL ( --> ) LOCALADRESSE @ DUP @ + LOCALADRESSE ! ; <ok></ok><fl>0411 329E </fl><fr>041D 32A8 </fr>
: L0 LOCALADRESSE @ 1 + ; <ok></ok><fl>041D 32A8 </fl><fr>0426 32AB </fr>
: L1 LOCALADRESSE @ 2 + ; <ok></ok><fl>0426 32AB </fl><fr>042F 32AE </fr>
: L2 LOCALADRESSE @ 3 + ; <ok></ok><fl>042F 32AE </fl><fr>0438 32B1 </fr>
: L3 LOCALADRESSE @ 4 + ; <ok></ok><fl>0438 32B1 </fl><fr>0441 32B4 </fr>
: L4 LOCALADRESSE @ 5 + ; <ok></ok><fl>0441 32B4 </fl><fr>044A 32B7 </fr>
: L5 LOCALADRESSE @ 6 + ; <ok></ok><fl>044A 32B7 </fl><fr>0453 32BA </fr>
: L6 LOCALADRESSE @ 7 + ; <ok></ok><fl>0453 32BA </fl><fr>045C 32BD </fr>
: L7 LOCALADRESSE @ 8 + ; ( soviele reichen schon ) <ok></ok><fl>045C 32BD </fl><fr>0465 32C0 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="alles zu KEY"> 
IMMEDIATE: ' ( /name/ --> --> pfa )  <ok></ok><fl>0465 32C0 </fl><fr>0469 32C2 </fr>
  20 WORD FIND LCFA DROP 1+ STAT @ IF LIT, END_IF ;  <ok></ok><fl>0469 32C2 </fl><fr>0474 32C2 </fr>
 <ok></ok>
: INCR4 ( adr --> ) <ok></ok><fl>0474 32C2 </fl><fr>0478 32C8 </fr>
  DUP @ 1 + <ok></ok><fl>0478 32C8 </fl><fr>047C 32C8 </fr>
  DUP 3FF AND 000 = IF 400 - END_IF  <ok></ok><fl>047C 32C8 </fl><fr>0484 32C8 </fr>
  SWAP ! <ok></ok><fl>0484 32C8 </fl><fr>0486 32C8 </fr>
  ; <ok></ok><fl>0486 32C8 </fl><fr>0487 32C8 </fr>
 <ok></ok>
: KEY_INT ( --> ) <ok></ok><fl>0487 32C8 </fl><fr>048B 32D0 </fr>
  KEYADR @  <ok></ok><fl>048B 32D0 </fl><fr>048D 32D0 </fr>
  DUP 08 LT IF  <ok></ok><fl>048D 32D0 </fl><fr>0491 32D0 </fr>
    18 + @ DUP IF DUP EXECUTE END_IF <ok></ok><fl>0491 32D0 </fl><fr>0498 32D0 </fr>
    DROP <ok></ok><fl>0498 32D0 </fl><fr>0499 32D0 </fr>
    ELSE <ok></ok><fl>0499 32D0 </fl><fr>049A 32D0 </fr>
      IRAMADR @ !  <ok></ok><fl>049A 32D0 </fl><fr>049D 32D0 </fr>
      IRAMADR INCR4 <ok></ok><fl>049D 32D0 </fl><fr>049F 32D0 </fr>
      IRAMADR @ JRAMADR @ - 3FF AND  <ok></ok><fl>049F 32D0 </fl><fr>04A6 32D0 </fr>
      80 > IF XOFF @ 0= IF -1 XOFF ! 13 EMIT END_IF END_IF  <ok></ok><fl>04A6 32D0 </fl><fr>04B2 32D0 </fr>
      END_IF <ok></ok><fl>04B2 32D0 </fl><fr>04B2 32D0 </fr>
  0 KEYADR ! <ok></ok><fl>04B2 32D0 </fl><fr>04B5 32D0 </fr>
  ; <ok></ok><fl>04B5 32D0 </fl><fr>04B6 32D0 </fr>
 <ok></ok>
: KEYCODE2 ( --> c f ) <ok></ok><fl>04B6 32D0 </fl><fr>04BA 32D9 </fr>
  JRAMADR @ IRAMADR @ = IF 0 0  <ok></ok><fl>04BA 32D9 </fl><fr>04C2 32D9 </fr>
    ELSE JRAMADR @ @ -1 <ok></ok><fl>04C2 32D9 </fl><fr>04C7 32D9 </fr>
    JRAMADR INCR4 <ok></ok><fl>04C7 32D9 </fl><fr>04C9 32D9 </fr>
    IRAMADR @ JRAMADR @ - 3FF AND <ok></ok><fl>04C9 32D9 </fl><fr>04D0 32D9 </fr>
    20 LT IF XOFF @ IF 0 XOFF ! 11 EMIT END_IF END_IF <ok></ok><fl>04D0 32D9 </fl><fr>04DB 32D9 </fr>
    END_IF <ok></ok><fl>04DB 32D9 </fl><fr>04DB 32D9 </fr>
  ; <ok></ok><fl>04DB 32D9 </fl><fr>04DC 32D9 </fr>
 <ok></ok>
' KEY_INT 4000 + 26 ! <ok></ok>
' KEYCODE2 4000 + 12 ! <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="es folgt der Interpreter"> 
( ESCAPE durch EXPECT durchlaufen lassen ) <ok></ok>
( und 7F in 08 umwandeln ) <ok></ok>
( und nach n Zeichen kein 0D mehr lesen ) <ok></ok>
: EXPECT ( /text/  adr n --> adr m ) <ok></ok><fl>04DC 32D9 </fl><fr>04E0 32E0 </fr>
  5 LOCAL <ok></ok><fl>04E0 32E0 </fl><fr>04E2 32E0 </fr>
  L2 ! L1 ! L1 @ L4 ! <ok></ok><fl>04E2 32E0 </fl><fr>04EA 32E0 </fr>
  BEGIN <ok></ok><fl>04EA 32E0 </fl><fr>04EA 32E0 </fr>
    KEY <ok></ok><fl>04EA 32E0 </fl><fr>04EB 32E0 </fr>
    DUP 14 ( 20 ) ( =^T, ^R=18 ) = IF  <ok></ok><fl>04EB 32E0 </fl><fr>04EF 32E0 </fr>
      DROP L1 @ C@ END_IF <ok></ok><fl>04EF 32E0 </fl><fr>04F3 32E0 </fr>
    DUP 7F = IF DROP 08 END_IF <ok></ok><fl>04F3 32E0 </fl><fr>04F9 32E0 </fr>
    DUP 08 = IF L4 @ L1 @ LT IF <ok></ok><fl>04F9 32E0 </fl><fr>0503 32E0 </fr>
      -1 L1 +! <ok></ok><fl>0503 32E0 </fl><fr>0506 32E0 </fr>
      1 L2 +! <ok></ok><fl>0506 32E0 </fl><fr>0509 32E0 </fr>
      8 EMIT 20 ( 32 ) EMIT 8 EMIT <ok></ok><fl>0509 32E0 </fl><fr>050F 32E0 </fr>
      END_IF END_IF <ok></ok><fl>050F 32E0 </fl><fr>050F 32E0 </fr>
(    DUP 20 ( 32 ] LT NOT OVER 08 = OR OVER 1B = OR L2 @ 0= NOT AND WHILE <ok></ok><fl>050F 32E0 </fl><fr>050F 32E0 </fr>
      DUP 20 LT IF ( DROP ) ELSE <ok></ok><fl>050F 32E0 </fl><fr>0514 32E0 </fr>
        -1 L2 +! <ok></ok><fl>0514 32E0 </fl><fr>0517 32E0 </fr>
        L2 @ 0LT IF 6 ERROR END_IF <ok></ok><fl>0517 32E0 </fl><fr>051D 32E0 </fr>
        DUP EMIT <ok></ok><fl>051D 32E0 </fl><fr>051F 32E0 </fr>
        DUP L1 @ C! 1 L1 +! <ok></ok><fl>051F 32E0 </fl><fr>0526 32E0 </fr>
        END_IF  <ok></ok><fl>0526 32E0 </fl><fr>0526 32E0 </fr>
    DUP 20 LT OVER 08 = NOT AND SWAP 1B = NOT AND L2 @ 0= OR UNTIL <ok></ok><fl>0526 32E0 </fl><fr>0538 32E0 </fr>
(      REPEAT <ok></ok><fl>0538 32E0 </fl><fr>0538 32E0 </fr>
  20 ( 32 ) EMIT <ok></ok><fl>0538 32E0 </fl><fr>053A 32E0 </fr>
  L4 @ L1 @ L4 @ - <ok></ok><fl>053A 32E0 </fl><fr>0541 32E0 </fr>
  2DUP + 0 SWAP C! <ok></ok><fl>0541 32E0 </fl><fr>0546 32E0 </fr>
  END_LOCAL <ok></ok><fl>0546 32E0 </fl><fr>0547 32E0 </fr>
  ; <ok></ok><fl>0547 32E0 </fl><fr>0548 32E0 </fr>
 <ok></ok>
 <ok></ok>
: DIGIT ( z --> d r ) ( r=-1 wenn gueltig ) <ok></ok><fl>0548 32E0 </fl><fr>054C 32E6 </fr>
  ( vorher r=0 wenn gueltig!!! ) <ok></ok><fl>054C 32E6 </fl><fr>054C 32E6 </fr>
  DUP 30 ( 30 48 ) LT NOT OVER 3A ( 3A 58 ) LT AND <ok></ok><fl>054C 32E6 </fl><fr>0554 32E6 </fr>
  OVER 41 ( 41 65 ) LT NOT OR  <ok></ok><fl>0554 32E6 </fl><fr>0559 32E6 </fr>
  DUP IF ( z -1 wenn gueltig ) <ok></ok><fl>0559 32E6 </fl><fr>055B 32E6 </fr>
    SWAP 30 ( 30 48 ) - <ok></ok><fl>055B 32E6 </fl><fr>055E 32E6 </fr>
    DUP 0A LT NOT IF 7 - END_IF <ok></ok><fl>055E 32E6 </fl><fr>0565 32E6 </fr>
    DUP BASE @ LT NOT IF DROP DROP 0 0 END_IF <ok></ok><fl>0565 32E6 </fl><fr>056F 32E6 </fr>
    SWAP END_IF ; <ok></ok><fl>056F 32E6 </fl><fr>0571 32E6 </fr>
 <ok></ok>
: NUMBER ( badr n --> a r ) <ok></ok><fl>0571 32E6 </fl><fr>0575 32ED </fr>
  7 LOCAL ( L3 L4 nicht verwendet ) <ok></ok><fl>0575 32ED </fl><fr>0577 32ED </fr>
  L1 ! L0 ! <ok></ok><fl>0577 32ED </fl><fr>057B 32ED </fr>
  0 L1 @ IF <ok></ok><fl>057B 32ED </fl><fr>057F 32ED </fr>
    DUP L2 ! 1 L5 ! ( Vorzeichen ) <ok></ok><fl>057F 32ED </fl><fr>0585 32ED </fr>
    BEGIN ( M23 Vorzeichen gucken ) <ok></ok><fl>0585 32ED </fl><fr>0585 32ED </fr>
      -1 L6 !  <ok></ok><fl>0585 32ED </fl><fr>0588 32ED </fr>
      L0 @ L2 @ + C@ <ok></ok><fl>0588 32ED </fl><fr>058E 32ED </fr>
      2B ( 43 2B ) = IF L2 @ 1+ L2 ! 0 L6 ! ELSE <ok></ok><fl>058E 32ED </fl><fr>059A 32ED </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>059A 32ED </fl><fr>05A0 32ED </fr>
        2D ( 45 2D ) = IF L2 @ 1+ L2 ! <ok></ok><fl>05A0 32ED </fl><fr>05A8 32ED </fr>
          0 L6 ! <ok></ok><fl>05A8 32ED </fl><fr>05AB 32ED </fr>
          L5 @ MINUS L5 ! END_IF <ok></ok><fl>05AB 32ED </fl><fr>05B0 32ED </fr>
        END_IF <ok></ok><fl>05B0 32ED </fl><fr>05B0 32ED </fr>
      L6 @ UNTIL <ok></ok><fl>05B0 32ED </fl><fr>05B3 32ED </fr>
    L2 @ L1 @ LT IF <ok></ok><fl>05B3 32ED </fl><fr>05B9 32ED </fr>
      BEGIN <ok></ok><fl>05B9 32ED </fl><fr>05B9 32ED </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>05B9 32ED </fl><fr>05BF 32ED </fr>
        DUP IF ( oo L1 auf Bytes ) <ok></ok><fl>05BF 32ED </fl><fr>05C1 32ED </fr>
          DIGIT NOT IF DROP L1 @ MINUS L1 ! ELSE <ok></ok><fl>05C1 32ED </fl><fr>05CB 32ED </fr>
            SWAP BASE @ * + <ok></ok><fl>05CB 32ED </fl><fr>05D0 32ED </fr>
            L2 @ 1+ L2 !  <ok></ok><fl>05D0 32ED </fl><fr>05D5 32ED </fr>
            END_IF <ok></ok><fl>05D5 32ED </fl><fr>05D5 32ED </fr>
          ELSE DROP L2 @ L1 ! END_IF <ok></ok><fl>05D5 32ED </fl><fr>05DB 32ED </fr>
        L2 @ L1 @ LT NOT UNTIL <ok></ok><fl>05DB 32ED </fl><fr>05E2 32ED </fr>
      END_IF ( M19 ) <ok></ok><fl>05E2 32ED </fl><fr>05E2 32ED </fr>
    END_IF ( M19 ) <ok></ok><fl>05E2 32ED </fl><fr>05E2 32ED </fr>
  L5 @ 0LT IF MINUS END_IF <ok></ok><fl>05E2 32ED </fl><fr>05E7 32ED </fr>
  L2 @ L1 @ - ( oo noch kein fadr ) <ok></ok><fl>05E7 32ED </fl><fr>05EC 32ED </fr>
  END_LOCAL <ok></ok><fl>05EC 32ED </fl><fr>05ED 32ED </fr>
  ; <ok></ok><fl>05ED 32ED </fl><fr>05EE 32ED </fr>
 <ok></ok>
: WORD ( b --> adr n ) <ok></ok><fl>05EE 32ED </fl><fr>05F2 32F2 </fr>
  >R <ok></ok><fl>05F2 32F2 </fl><fr>05F3 32F2 </fr>
  IN3 @ IN2 ! <ok></ok><fl>05F3 32F2 </fl><fr>05F7 32F2 </fr>
  BEGIN  <ok></ok><fl>05F7 32F2 </fl><fr>05F7 32F2 </fr>
    IN3 @ C@ R = IN3 @ IN4 @ LT AND WHILE <ok></ok><fl>05F7 32F2 </fl><fr>0603 32F2 </fr>
      1 IN3 +! REPEAT <ok></ok><fl>0603 32F2 </fl><fr>0607 32F2 </fr>
  IN3 @ IN2 ! <ok></ok><fl>0607 32F2 </fl><fr>060B 32F2 </fr>
  BEGIN  <ok></ok><fl>060B 32F2 </fl><fr>060B 32F2 </fr>
    IN3 @ C@ 3C = IF IN3 @ IN4 ! END_IF ( alles nach 3C ist Kommentar ) <ok></ok><fl>060B 32F2 </fl><fr>0615 32F2 </fr>
    IN3 @ C@ R = NOT IN3 @ IN4 @ LT AND WHILE <ok></ok><fl>0615 32F2 </fl><fr>0622 32F2 </fr>
      1 IN3 +! REPEAT <ok></ok><fl>0622 32F2 </fl><fr>0626 32F2 </fr>
  IN2 @ IN3 @ OVER - <ok></ok><fl>0626 32F2 </fl><fr>062C 32F2 </fr>
  DUP IF 1 IN3 +! END_IF <ok></ok><fl>062C 32F2 </fl><fr>0631 32F2 </fr>
  R> DROP <ok></ok><fl>0631 32F2 </fl><fr>0633 32F2 </fr>
  ; <ok></ok><fl>0633 32F2 </fl><fr>0634 32F2 </fr>
 <ok></ok>
: Z= ( adr1 n1 adr2 n2 --> r ) <ok></ok><fl>0634 32F2 </fl><fr>0638 32F5 </fr>
  >R OVER R - IF R> DROP DROP DROP DROP 0 ELSE <ok></ok><fl>0638 32F5 </fl><fr>0644 32F5 </fr>
    R> DROP SWAP 0 BEGIN 2DUP - WHILE >R >R <ok></ok><fl>0644 32F5 </fl><fr>064D 32F5 </fr>
      OVER C@ OVER C@ - IF DROP DROP 0 0 END_IF <ok></ok><fl>064D 32F5 </fl><fr>0657 32F5 </fr>
      DUP IF 1+ SWAP 1+ SWAP END_IF <ok></ok><fl>0657 32F5 </fl><fr>065D 32F5 </fr>
      R> R> 1+ REPEAT 2DROP ( neu bei 16 BIT ohne DO LOOP ) <ok></ok><fl>065D 32F5 </fl><fr>0662 32F5 </fr>
    DROP IF -1 ELSE 0 END_IF <ok></ok><fl>0662 32F5 </fl><fr>0667 32F5 </fr>
    END_IF ; <ok></ok><fl>0667 32F5 </fl><fr>0668 32F5 </fr>
( : Z= DROP SWAP DROP SWAP @ SWAP @ = ; <ok></ok>
 <ok></ok>
: FIND ( adr n --> lfa r ) <ok></ok><fl>0668 32F5 </fl><fr>066C 32FA </fr>
  >R >R 0 ( heisst noch nicht gefunden ) <ok></ok><fl>066C 32FA </fl><fr>066F 32FA </fr>
  LFA @  <ok></ok><fl>066F 32FA </fl><fr>0671 32FA </fr>
  SMUDGEBIT @ IF DUP @ + END_IF <ok></ok><fl>0671 32FA </fl><fr>0677 32FA </fr>
  BEGIN <ok></ok><fl>0677 32FA </fl><fr>0677 32FA </fr>
    DUP 1+ DUP @ ( lfa nfa adr ) <ok></ok><fl>0677 32FA </fl><fr>067B 32FA </fr>
    SWAP 1+ @ ( lfa adr n1 ) <ok></ok><fl>067B 32FA </fl><fr>067E 32FA </fr>
    ( 2DUP CR B. 2DUP TYPE <ok></ok><fl>067E 32FA </fl><fr>067E 32FA </fr>
    ( BEGIN 2DUP + 1 - C@ 0= WHILE 1 - REPEAT ( ??? momentan nicht ) <ok></ok><fl>067E 32FA </fl><fr>067E 32FA </fr>
    R> R> 2DUP >R >R ( 0 lfa adr1 n1 adr2 n2 ) <ok></ok><fl>067E 32FA </fl><fr>0683 32FA </fr>
    Z= IF SWAP 0= SWAP END_IF ( heisst gefunden ) <ok></ok><fl>0683 32FA </fl><fr>0688 32FA </fr>
    OVER 0= OVER @ 0= NOT AND  <ok></ok><fl>0688 32FA </fl><fr>068F 32FA </fr>
    OVER DUP @ + LFA @ = NOT AND WHILE ( wegen 2xladen ) <ok></ok><fl>068F 32FA </fl><fr>0699 32FA </fr>
      DUP @ + REPEAT <ok></ok><fl>0699 32FA </fl><fr>069D 32FA </fr>
  R> DROP R> <ok></ok><fl>069D 32FA </fl><fr>06A0 32FA </fr>
  ROT 0= IF DROP DROP 0 0 END_IF <ok></ok><fl>06A0 32FA </fl><fr>06A7 32FA </fr>
  ( OVER LFA @ SWAP LT IF ." *" OVER . LFA @ . END_IF ( vref wenn gebraucht ) <ok></ok><fl>06A7 32FA </fl><fr>06A7 32FA </fr>
  ; <ok></ok><fl>06A7 32FA </fl><fr>06A8 32FA </fr>
 <ok></ok>
: LCFA ( lfa r --> cfa r ) SWAP 3 + SWAP ; <ok></ok><fl>06A8 32FA </fl><fr>06B1 32FF </fr>
 <ok></ok>
: COMPILE, ( adr --> ) 4000 + , ; <ok></ok><fl>06B1 32FF </fl><fr>06BA 3308 </fr>
 <ok></ok>
: CREATE ( /name/  --> ) <ok></ok><fl>06BA 3308 </fl><fr>06BE 330F </fr>
  CSP! ( Stapelbalance prüfen in ; ) <ok></ok><fl>06BE 330F </fl><fr>06BF 330F </fr>
  DP @ LFA @ OVER - , LFA ! <ok></ok><fl>06BF 330F </fl><fr>06C8 330F </fr>
  20 WORD Z, <ok></ok><fl>06C8 330F </fl><fr>06CB 330F </fr>
  1 SMUDGEBIT ! ( HERE 2 - DUP @ MINUS SWAP ! ( UNSMUDGE ) <ok></ok><fl>06CB 330F </fl><fr>06CE 330F </fr>
  ; <ok></ok><fl>06CE 330F </fl><fr>06CF 330F </fr>
 <ok></ok>
: INTERPRET ( adr n --> ... ) <ok></ok><fl>06CF 330F </fl><fr>06D3 3319 </fr>
  IN1 @ >R IN2 @ >R IN3 @ >R IN4 @ >R <ok></ok><fl>06D3 3319 </fl><fr>06DF 3319 </fr>
  OVER + IN4 ! <ok></ok><fl>06DF 3319 </fl><fr>06E3 3319 </fr>
  DUP IN1 ! DUP IN2 ! IN3 ! <ok></ok><fl>06E3 3319 </fl><fr>06EB 3319 </fr>
  BEGIN <ok></ok><fl>06EB 3319 </fl><fr>06EB 3319 </fr>
  ( ... qstack? Stapelpruefen ) <ok></ok><fl>06EB 3319 </fl><fr>06EB 3319 </fr>
  20 WORD <ok></ok><fl>06EB 3319 </fl><fr>06ED 3319 </fr>
  DUP WHILE <ok></ok><fl>06ED 3319 </fl><fr>06EF 3319 </fr>
    2DUP FIND  <ok></ok><fl>06EF 3319 </fl><fr>06F1 3319 </fr>
    DUP IF ( gefunden ) <ok></ok><fl>06F1 3319 </fl><fr>06F3 3319 </fr>
      >R >R 2DROP R> R> LCFA DROP EXECUTE <ok></ok><fl>06F3 3319 </fl><fr>06FB 3319 </fr>
      ELSE ( nicht gefunden ) <ok></ok><fl>06FB 3319 </fl><fr>06FC 3319 </fr>
        2DROP <ok></ok><fl>06FC 3319 </fl><fr>06FD 3319 </fr>
        2DUP NUMBER IF ( keine Zahl ) <ok></ok><fl>06FD 3319 </fl><fr>0700 3319 </fr>
          2DROP DROP <ok></ok><fl>0700 3319 </fl><fr>0702 3319 </fr>
          3 ERROR <ok></ok><fl>0702 3319 </fl><fr>0704 3319 </fr>
         ( DROP BNUMBER <ok></ok><fl>0704 3319 </fl><fr>0704 3319 </fr>
         ( DUP IF DUP IN2 ! END_IF <ok></ok><fl>0704 3319 </fl><fr>0704 3319 </fr>
         ( IF 3 ERROR END_IF <ok></ok><fl>0704 3319 </fl><fr>0704 3319 </fr>
         ( STAT @ IF SWAP LIT, LIT, END_IF <ok></ok><fl>0704 3319 </fl><fr>0704 3319 </fr>
          ELSE ( eine Zahl ) <ok></ok><fl>0704 3319 </fl><fr>0705 3319 </fr>
            ROT DROP SWAP DROP <ok></ok><fl>0705 3319 </fl><fr>0709 3319 </fr>
            STAT @ IF LIT, END_IF ( oo LIT, fuer gr ) <ok></ok><fl>0709 3319 </fl><fr>070D 3319 </fr>
            END_IF <ok></ok><fl>070D 3319 </fl><fr>070D 3319 </fr>
        END_IF <ok></ok><fl>070D 3319 </fl><fr>070D 3319 </fr>
    REPEAT 2DROP <ok></ok><fl>070D 3319 </fl><fr>070F 3319 </fr>
  R> IN4 ! R> IN3 ! R> IN2 ! R> IN1 ! <ok></ok><fl>070F 3319 </fl><fr>071B 3319 </fr>
  ; <ok></ok><fl>071B 3319 </fl><fr>071C 3319 </fr>
 <ok></ok>
: QUIT <ok></ok><fl>071C 3319 </fl><fr>0720 331E </fr>
  RP0 @ RP !  <ok></ok><fl>0720 331E </fl><fr>0724 331E </fr>
  XBIT @ IF 3C EMIT ." /ok>" ELSE ." ok" END_IF <ok></ok><fl>0724 331E </fl><fr>0730 3326 </fr>
  BEGIN ( im Prinzip nur BEGIN CR TIB @ 100 EXPECT INTERPRET AGAIN ) <ok></ok><fl>0730 3326 </fl><fr>0730 3326 </fr>
    CR  <ok></ok><fl>0730 3326 </fl><fr>0731 3326 </fr>
    TIB @ 100 EXPECT <ok></ok><fl>0731 3326 </fl><fr>0735 3326 </fr>
    OVER @ 3C = IF 2DROP ELSE ( xml am Zeilenanfang gleich überlesen ) <ok></ok><fl>0735 3326 </fl><fr>073C 3326 </fr>
      XBIT @ IF  <ok></ok><fl>073C 3326 </fl><fr>073F 3326 </fr>
        3C EMIT ." ok>"  <ok></ok><fl>073F 3326 </fl><fr>0744 332A </fr>
        INTERPRET  <ok></ok><fl>0744 332A </fl><fr>0745 332A </fr>
        3C EMIT ." /ok>"  <ok></ok><fl>0745 332A </fl><fr>074A 332F </fr>
        ELSE <ok></ok><fl>074A 332F </fl><fr>074B 332F </fr>
          1B EMIT 5B EMIT 33 EMIT 36 EMIT 6D EMIT <ok></ok><fl>074B 332F </fl><fr>0755 332F </fr>
          INTERPRET  <ok></ok><fl>0755 332F </fl><fr>0756 332F </fr>
          STAT @ 0= IF ." ok" END_IF  <ok></ok><fl>0756 332F </fl><fr>075D 3332 </fr>
          1B EMIT 5B EMIT 33 EMIT 39 EMIT 6D EMIT <ok></ok><fl>075D 3332 </fl><fr>0767 3332 </fr>
          END_IF  <ok></ok><fl>0767 3332 </fl><fr>0767 3332 </fr>
      END_IF <ok></ok><fl>0767 3332 </fl><fr>0767 3332 </fr>
    AGAIN  <ok></ok><fl>0767 3332 </fl><fr>0768 3332 </fr>
  ; <ok></ok><fl>0768 3332 </fl><fr>0769 3332 </fr>
 <ok></ok>
 <ok></ok>
: START ." FORTY-FORTH" CR CR QUIT ; <ok></ok><fl>0769 3332 </fl><fr>0774 3344 </fr>
 <ok></ok>
 <ok></ok>
: SMUDGE 0 SMUDGEBIT ! ( LFA @ 1+ DUP @ DUP 0LT IF MINUS END_IF SWAP ! ) ; <ok></ok><fl>0774 3344 </fl><fr>077C 334B </fr>
 <ok></ok>
: (IMMEDIATE:) R> >R ; <ok></ok><fl>077C 334B </fl><fr>0783 3358 </fr>
:   (COMPILE:) R> COMPILE, ; <ok></ok><fl>0783 3358 </fl><fr>078A 3363 </fr>
:          (:) R> STAT @ IF COMPILE, ELSE >R END_IF ; <ok></ok><fl>078A 3363 </fl><fr>0796 3367 </fr>
 <ok></ok>
: IMMEDIATE: CREATE 1 STAT ! COMPILE (IMMEDIATE:) ; <ok></ok><fl>0796 3367 </fl><fr>07A0 3372 </fr>
:   COMPILE: CREATE 1 STAT ! COMPILE (COMPILE:) ; <ok></ok><fl>07A0 3372 </fl><fr>07AA 337B </fr>
:          : CREATE 1 STAT ! COMPILE (:) ; <ok></ok><fl>07AA 337B </fl><fr>07B4 337D </fr>
 <ok></ok>
( das hier jetzt mit dem neuen CREATE: ) <ok></ok>
IMMEDIATE: ; 0 STAT ! CSP? A003 , SMUDGE { SMUDGE } ;  <ok></ok><fl>07B4 337D </fl><fr>07C1 337F </fr>
( tatsaechlich { SMUDGE } wegen 2x laden!!! )  <ok></ok>
( Ende der Axiome. Hiermit enden die Axiome. ) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="neues Vokabular abkoppeln und Programm neu starten"> 
0 DPMERK @ ! ( abkoppeln ) <ok></ok>
HERE . BZEIG ? <ok>07C1 337F </ok>
 <ok></ok>
START <ok>FORTY-FORTH

</ok>
</sekt> 
</sekt> 
</AXIOME> 
 <ok></ok>
<FFINIT2> 
<sekt inhalt="bis Adresse 0800H passt noch DUMPZ drauf (inzwischen nicht mehr)"> 
( erste Forth Erweiterungen ) <ok></ok>
( - DUMPZ ) <ok></ok>
( RAMB-Inhaltsausgabe erzeugen: ) <ok></ok>
: DUBIT HERE ; <ok></ok><fl>07C1 337F </fl><fr>07C7 3385 </fr>
: LG. ( n --> ) <ok></ok><fl>07C7 3385 </fl><fr>07CB 3389 </fr>
  DUBIT @ IF SHL16 DROP SHL16 DROP  <ok></ok><fl>07CB 3389 </fl><fr>07D2 3389 </fr>
    ELSE SHL16 DIG EMIT SHL16 DIG EMIT END_IF  <ok></ok><fl>07D2 3389 </fl><fr>07D9 3389 </fr>
  SHL16 DIG EMIT SHL16 DIG EMIT DROP ; <ok></ok><fl>07D9 3389 </fl><fr>07E1 3389 </fr>
: NG. ( n --> ) <ok></ok><fl>07E1 3389 </fl><fr>07E5 338D </fr>
  ." x" 22 EMIT LG. 22 EMIT ." ," ;  <ok></ok><fl>07E5 338D </fl><fr>07F1 3391 </fr>
: DUMPZ ( bis+1 von dubit --> ) <ok></ok><fl>07F1 3391 </fl><fr>07F5 3397 </fr>
  DUBIT ! XBIT @ >R 0 XBIT ! <ok></ok><fl>07F5 3397 </fl><fr>07FD 3397 </fr>
  " ' START " INTERPRET 4000 + 10 ! <ok></ok><fl>07FD 3397 </fl><fr>0806 33A0 </fr>
  CR 3C EMIT ." DUMPZ>" <ok></ok><fl>0806 33A0 </fl><fr>080C 33A7 </fr>
  BEGIN <ok></ok><fl>080C 33A7 </fl><fr>080C 33A7 </fr>
    CR ."   " <ok></ok><fl>080C 33A7 </fl><fr>0810 33AA </fr>
    0000 BEGIN  <ok></ok><fl>0810 33AA </fl><fr>0811 33AA </fr>
      2DUP +  <ok></ok><fl>0811 33AA </fl><fr>0813 33AA </fr>
      DUP IRAMADR = IF DROP JRAMADR END_IF <ok></ok><fl>0813 33AA </fl><fr>0819 33AA </fr>
      DUP LOCALADRESSE = IF DROP 2F00 HERE 1 + ! HERE 1 + END_IF <ok></ok><fl>0819 33AA </fl><fr>0826 33AA </fr>
      @ NG. 1+ DUP 10 =  <ok></ok><fl>0826 33AA </fl><fr>082C 33AA </fr>
      UNTIL DROP <ok></ok><fl>082C 33AA </fl><fr>082E 33AA </fr>
    ."  -- " DUP HG. ." -" DUP 0F + .  <ok></ok><fl>082E 33AA </fl><fr>083A 33B1 </fr>
    10 + <ok></ok><fl>083A 33B1 </fl><fr>083C 33B1 </fr>
    2DUP > NOT UNTIL 2DROP <ok></ok><fl>083C 33B1 </fl><fr>0841 33B1 </fr>
  CR 3C EMIT ." /DUMPZ>" <ok></ok><fl>0841 33B1 </fl><fr>0847 33B9 </fr>
  R> XBIT ! <ok></ok><fl>0847 33B9 </fl><fr>084A 33B9 </fr>
  ;  <ok></ok><fl>084A 33B9 </fl><fr>084B 33B9 </fr>
 <ok></ok>
HERE . BZEIG ? <ok>084B 33B9 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="ProgRAM und ByteRAM für Step_9 und Step_10 erstellen"> 
HERE 0 0 DUMPZ          ( generiert ProgRAM für P20_FFP.vhd Step_10 ) <ok>
<DUMPZ>
  x"4010",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 0000-000F 
  x"476D",x"A003",x"44BA",x"9001",x"A003",x"B300",x"8000",x"8FFA",x"0000",x"11A4",x"0000",x"0000",x"0000",x"0000",x"0010",x"118F", -- 0010-001F 
  x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"448B",x"A003",x"0000",x"3000",x"0001",x"4780",x"0029",x"45F2",x"B200",x"A003", -- 0020-002F 
  x"FFF8",x"3002",x"0001",x"4780",x"0000",x"2F10",x"A009",x"A003",x"FFF8",x"3004",x"0001",x"478E",x"0001",x"2F10",x"A009",x"A003", -- 0030-003F 
  x"FFF8",x"3006",x"0007",x"4780",x"0020",x"45F2",x"466C",x"46AC",x"B300",x"46B5",x"A003",x"FFF5",x"300E",x"0006",x"4787",x"42D4", -- 0040-004F 
  x"B501",x"4287",x"42E7",x"A00A",x"A003",x"FFF6",x"3015",x"0004",x"478E",x"B501",x"3FFF",x"42AE",x"B502",x"C000",x"429C",x"A00E", -- 0050-005F 
  x"9001",x"404E",x"4307",x"A003",x"FFF1",x"301A",x"000B",x"4787",x"42D4",x"A00A",x"2F10",x"A00A",x"9001",x"4059",x"A003",x"FFF5", -- 0060-006F 
  x"3026",x"0008",x"478E",x"46BE",x"4067",x"4307",x"4778",x"A003",x"FFF7",x"302F",x"0006",x"4068",x"2800",x"FFFB",x"3036",x"0002", -- 0070-007F 
  x"4068",x"2801",x"FFFB",x"3039",x"0002",x"4068",x"2802",x"FFFB",x"303C",x"0002",x"4068",x"2803",x"FFFB",x"303F",x"0004",x"4068", -- 0080-008F 
  x"2F00",x"FFFB",x"3044",x"0009",x"4068",x"2F01",x"FFFB",x"304E",x"0003",x"4068",x"2F02",x"FFFB",x"3052",x"0007",x"4068",x"2F03", -- 0090-009F 
  x"FFFB",x"305A",x"0007",x"4068",x"2F04",x"FFFB",x"3062",x"0004",x"4068",x"2F05",x"FFFB",x"3067",x"0007",x"4068",x"2F06",x"FFFB", -- 00A0-00AF 
  x"306F",x"0004",x"4068",x"2F07",x"FFFB",x"3074",x"0004",x"4068",x"2F08",x"FFFB",x"3079",x"0003",x"4068",x"2F09",x"FFFB",x"307D", -- 00B0-00BF 
  x"0003",x"4068",x"2F0A",x"FFFB",x"3081",x"0003",x"4068",x"2F0B",x"FFFB",x"3085",x"0003",x"4068",x"2F0C",x"FFFB",x"3089",x"0003", -- 00C0-00CF 
  x"4068",x"2F0D",x"FFFB",x"308D",x"0007",x"4068",x"2F0E",x"FFFB",x"3095",x"0002",x"4068",x"2F0F",x"FFFB",x"3098",x"0004",x"4068", -- 00D0-00DF 
  x"2F10",x"FFFB",x"309D",x"0003",x"4068",x"2F11",x"FFFB",x"30A1",x"0004",x"4068",x"2F12",x"FFFB",x"30A6",x"0005",x"4068",x"2F13", -- 00E0-00EF 
  x"FFFB",x"30AC",x"0006",x"4068",x"2F14",x"FFFB",x"30B3",x"0003",x"4068",x"2F15",x"FFFB",x"30B7",x"0009",x"4068",x"2F16",x"FFFB", -- 00F0-00FF 
  x"30C1",x"000C",x"4068",x"2F17",x"FFFB",x"30CE",x"0007",x"4068",x"01B2",x"FFFB",x"30D6",x"0006",x"4068",x"A003",x"FFFB",x"30DD", -- 0100-010F 
  x"0008",x"4787",x"42D4",x"2F10",x"A00A",x"9003",x"A00A",x"4307",x"8001",x"4312",x"A003",x"FFF3",x"30E6",x"0005",x"478E",x"46BE", -- 0110-011F 
  x"4111",x"4307",x"404F",x"A003",x"4307",x"4778",x"A003",x"FFF4",x"30EC",x"0005",x"4112",x"A000",x"A003",x"FFFA",x"30F2",x"0002", -- 0120-012F 
  x"4112",x"A001",x"A003",x"FFFA",x"30F5",x"0002",x"4112",x"A002",x"A003",x"FFFA",x"30F8",x"0002",x"4112",x"A00D",x"A003",x"FFFA", -- 0130-013F 
  x"30FB",x"0003",x"4112",x"A00F",x"A003",x"FFFA",x"30FF",x"0008",x"4112",x"A005",x"A003",x"FFFA",x"3108",x"0003",x"4112",x"A00B", -- 0140-014F 
  x"A003",x"FFFA",x"310C",x"0003",x"4112",x"A008",x"A003",x"FFFA",x"3110",x"0002",x"4112",x"A00E",x"A003",x"FFFA",x"3113",x"0007", -- 0150-015F 
  x"4112",x"A00C",x"A003",x"FFFA",x"311B",x"0001",x"4112",x"A007",x"A003",x"FFFA",x"311D",x"0001",x"4112",x"A009",x"A003",x"FFFA", -- 0160-016F 
  x"311F",x"0001",x"4112",x"A00A",x"A003",x"FFFA",x"3121",x"0004",x"4112",x"B412",x"A003",x"FFFA",x"3126",x"0004",x"4112",x"B502", -- 0170-017F 
  x"A003",x"FFFA",x"312B",x"0003",x"4112",x"B501",x"A003",x"FFFA",x"312F",x"0003",x"4112",x"B434",x"A003",x"FFFA",x"3133",x"0004", -- 0180-018F 
  x"4112",x"B300",x"A003",x"FFFA",x"3138",x"0005",x"4112",x"B43C",x"A003",x"FFFA",x"313E",x"0005",x"4112",x"B60C",x"A003",x"FFFA", -- 0190-019F 
  x"3144",x"0004",x"4112",x"B603",x"A003",x"FFFA",x"3149",x"0005",x"4112",x"B200",x"A003",x"FFFA",x"314F",x"0004",x"4112",x"8000", -- 01A0-01AF 
  x"A003",x"FFFA",x"3154",x"0002",x"478E",x"2F13",x"A00A",x"A009",x"0001",x"2F13",x"42C9",x"A003",x"FFF5",x"3157",x"0002",x"478E", -- 01B0-01BF 
  x"2F13",x"A00A",x"4059",x"B501",x"4307",x"B412",x"B501",x"A00A",x"41B5",x"4287",x"B412",x"0001",x"428E",x"B501",x"A00D",x"9FF5", -- 01C0-01CF 
  x"B200",x"0020",x"41B5",x"A003",x"FFE8",x"315A",x"0007",x"4787",x"45F2",x"2F10",x"A00A",x"9003",x"41C0",x"42D4",x"46B5",x"A003", -- 01D0-01DF 
  x"FFF4",x"3162",x"0005",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"4307",x"41D7",x"FFFF",x"2F15",x"42C9",x"A003",x"FFF2",x"3168", -- 01E0-01EF 
  x"0001",x"0022",x"41D8",x"A003",x"FFFA",x"316A",x"0002",x"0022",x"41D8",x"433F",x"A003",x"FFF9",x"316D",x"0004",x"478E",x"2F0F", -- 01F0-01FF 
  x"A00A",x"A003",x"FFF9",x"3172",x"0005",x"478E",x"0008",x"A003",x"FFFA",x"3178",x"0006",x"478E",x"0009",x"A003",x"FFFA",x"317F", -- 0200-020F 
  x"0006",x"478E",x"1000",x"42B5",x"B412",x"0FFF",x"A008",x"A00E",x"A003",x"FFF5",x"3186",x"0005",x"478E",x"2F0F",x"42C9",x"A003", -- 0210-021F 
  x"FFF9",x"318C",x"0007",x"478E",x"41FF",x"4287",x"428E",x"4206",x"4212",x"4307",x"A003",x"FFF5",x"3194",x"0008",x"478E",x"41FF", -- 0220-022F 
  x"4287",x"428E",x"420C",x"4212",x"4307",x"A003",x"FFF5",x"319D",x"0005",x"4780",x"41FF",x"A003",x"FFFA",x"31A3",x"0005",x"4780", -- 0230-023F 
  x"4224",x"A003",x"FFFA",x"31A9",x"0005",x"4780",x"422F",x"A003",x"FFFA",x"31AF",x"0002",x"4780",x"420C",x"0001",x"421D",x"41FF", -- 0240-024F 
  x"A003",x"FFF7",x"31B2",x"0006",x"4780",x"41FF",x"B502",x"428E",x"B434",x"4212",x"B412",x"0001",x"428E",x"A009",x"A003",x"FFF2", -- 0250-025F 
  x"31B9",x"0004",x"4780",x"0001",x"421D",x"4254",x"4206",x"41FF",x"A003",x"FFF6",x"31BE",x"0005",x"4780",x"424B",x"A003",x"FFFA", -- 0260-026F 
  x"31C4",x"0006",x"4780",x"B434",x"423F",x"4254",x"A003",x"FFF8",x"31CB",x"0002",x"478E",x"A00A",x"A003",x"FFFA",x"31CE",x"0002", -- 0270-027F 
  x"478E",x"A009",x"A003",x"FFFA",x"31D1",x"0002",x"478E",x"0001",x"A007",x"A003",x"FFF9",x"31D4",x"0001",x"478E",x"A000",x"A007", -- 0280-028F 
  x"A003",x"FFF9",x"31D6",x"0001",x"478E",x"428E",x"A00D",x"A003",x"FFF9",x"31D8",x"0002",x"478E",x"404F",x"8000",x"A007",x"B412", -- 0290-029F 
  x"A00B",x"404F",x"8000",x"A007",x"0000",x"A001",x"B300",x"A00D",x"A00B",x"A003",x"FFEE",x"31DB",x"0001",x"478E",x"B412",x"429C", -- 02A0-02AF 
  x"A003",x"FFF9",x"31DD",x"0001",x"478E",x"0000",x"B434",x"B434",x"A002",x"B412",x"B300",x"A003",x"FFF5",x"31DF",x"0003",x"478E", -- 02B0-02BF 
  x"31E3",x"0004",x"41F9",x"8FFC",x"A003",x"FFF7",x"31E8",x"0002",x"478E",x"B412",x"B502",x"A00A",x"A007",x"B412",x"A009",x"A003", -- 02C0-02CF 
  x"FFF5",x"31EB",x"0002",x"478E",x"2802",x"A00A",x"4287",x"A00A",x"2802",x"A00A",x"4287",x"2802",x"B603",x"A00A",x"A00A",x"B412", -- 02D0-02DF 
  x"A009",x"A009",x"A003",x"FFED",x"31EE",x"0002",x"478E",x"2802",x"A00A",x"B501",x"FFFF",x"A007",x"2802",x"B603",x"A00A",x"A00A", -- 02E0-02EF 
  x"B412",x"B501",x"FFFF",x"A007",x"2802",x"A009",x"A009",x"A009",x"A009",x"A003",x"FFE9",x"31F1",x"0001",x"478E",x"2802",x"A00A", -- 02F0-02FF 
  x"4287",x"A00A",x"A003",x"FFF7",x"31F3",x"0001",x"478E",x"2F0F",x"A00A",x"A009",x"0001",x"2F0F",x"42C9",x"A003",x"FFF5",x"31F5", -- 0300-030F 
  x"0007",x"478E",x"2803",x"A009",x"A003",x"FFF9",x"31FD",x"0003",x"478E",x"0012",x"4312",x"A003",x"FFF9",x"3201",x"0004",x"478E", -- 0310-031F 
  x"0149",x"4312",x"A003",x"FFF9",x"3206",x"0005",x"478E",x"0000",x"B412",x"0010",x"A002",x"B412",x"A003",x"FFF6",x"320C",x"0003", -- 0320-032F 
  x"478E",x"B501",x"000A",x"429C",x"9001",x"8002",x"0007",x"A007",x"0030",x"A007",x"A003",x"FFF2",x"3210",x"0004",x"478E",x"B501", -- 0330-033F 
  x"9009",x"B412",x"B501",x"427B",x"4320",x"4287",x"B412",x"0001",x"428E",x"8FF5",x"B200",x"A003",x"FFEF",x"3215",x"0003",x"478E", -- 0340-034F 
  x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"B300",x"A003",x"FFEE",x"3219", -- 0350-035F 
  x"0002",x"478E",x"4350",x"0020",x"4320",x"A003",x"FFF8",x"321C",x"0001",x"478E",x"4362",x"A003",x"FFFA",x"321E",x"0001",x"478E", -- 0360-036F 
  x"A00A",x"436A",x"A003",x"FFF9",x"3220",x"0002",x"478E",x"2F07",x"A00A",x"2F0F",x"A00A",x"428E",x"2F10",x"A00A",x"A00D",x"A00B", -- 0370-037F 
  x"A00E",x"2F00",x"A00A",x"A00D",x"A00B",x"A008",x"9028",x"003C",x"4320",x"3223",x"0003",x"41F9",x"2F07",x"A00A",x"436A",x"2F06", -- 0380-038F 
  x"A00A",x"436A",x"003C",x"4320",x"3227",x"0004",x"41F9",x"003C",x"4320",x"322C",x"0003",x"41F9",x"2F0F",x"A00A",x"436A",x"2F13", -- 0390-039F 
  x"A00A",x"436A",x"003C",x"4320",x"3230",x"0004",x"41F9",x"2F0F",x"A00A",x"2F07",x"A009",x"2F13",x"A00A",x"2F06",x"A009",x"000A", -- 03A0-03AF 
  x"4320",x"A003",x"FFC1",x"3235",x"000A",x"478E",x"A003",x"FFFB",x"3240",x"0007",x"478E",x"4377",x"3248",x"0019",x"41F9",x"0020", -- 03B0-03BF 
  x"4320",x"0008",x"4320",x"4319",x"001B",x"4295",x"9FF8",x"A003",x"FFEF",x"3262",x"0005",x"478E",x"B501",x"2F0E",x"A009",x"0000", -- 03C0-03CF 
  x"2F10",x"A009",x"4377",x"2F0A",x"A00A",x"2F0C",x"A00A",x"2F0A",x"A00A",x"428E",x"0001",x"428E",x"433F",x"3268",x"0003",x"41F9", -- 03D0-03DF 
  x"326C",x"000A",x"41F3",x"46D3",x"4377",x"3277",x"0016",x"41F9",x"436A",x"43BB",x"4720",x"A003",x"FFDC",x"328E",x"0004",x"478E", -- 03E0-03EF 
  x"2801",x"A00A",x"2F15",x"A009",x"A003",x"FFF7",x"3293",x"0004",x"478E",x"2801",x"A00A",x"2F15",x"A00A",x"428E",x"9002",x"0009", -- 03F0-03FF 
  x"43CC",x"A003",x"FFF3",x"3298",x"0005",x"478E",x"0001",x"A007",x"2F17",x"A00A",x"B502",x"428E",x"B501",x"2F17",x"A009",x"A009", -- 0400-040F 
  x"A003",x"FFF1",x"329E",x"0009",x"478E",x"2F17",x"A00A",x"B501",x"A00A",x"A007",x"2F17",x"A009",x"A003",x"FFF4",x"32A8",x"0002", -- 0410-041F 
  x"478E",x"2F17",x"A00A",x"0001",x"A007",x"A003",x"FFF7",x"32AB",x"0002",x"478E",x"2F17",x"A00A",x"0002",x"A007",x"A003",x"FFF7", -- 0420-042F 
  x"32AE",x"0002",x"478E",x"2F17",x"A00A",x"0003",x"A007",x"A003",x"FFF7",x"32B1",x"0002",x"478E",x"2F17",x"A00A",x"0004",x"A007", -- 0430-043F 
  x"A003",x"FFF7",x"32B4",x"0002",x"478E",x"2F17",x"A00A",x"0005",x"A007",x"A003",x"FFF7",x"32B7",x"0002",x"478E",x"2F17",x"A00A", -- 0440-044F 
  x"0006",x"A007",x"A003",x"FFF7",x"32BA",x"0002",x"478E",x"2F17",x"A00A",x"0007",x"A007",x"A003",x"FFF7",x"32BD",x"0002",x"478E", -- 0450-045F 
  x"2F17",x"A00A",x"0008",x"A007",x"A003",x"FFF7",x"32C0",x"0001",x"4780",x"0020",x"45F2",x"466C",x"46AC",x"B300",x"4287",x"2F10", -- 0460-046F 
  x"A00A",x"9001",x"4059",x"A003",x"FFF1",x"32C2",x"0005",x"478E",x"B501",x"A00A",x"0001",x"A007",x"B501",x"03FF",x"A008",x"0000", -- 0470-047F 
  x"4295",x"9002",x"0400",x"428E",x"B412",x"A009",x"A003",x"FFED",x"32C8",x"0007",x"478E",x"2800",x"A00A",x"B501",x"0008",x"429C", -- 0480-048F 
  x"9009",x"0018",x"A007",x"A00A",x"B501",x"9002",x"B501",x"4312",x"B300",x"8018",x"2F03",x"A00A",x"A009",x"2F03",x"4478",x"2F03", -- 0490-049F 
  x"A00A",x"2F04",x"A00A",x"428E",x"03FF",x"A008",x"0080",x"42AE",x"9009",x"2F05",x"A00A",x"A00D",x"9005",x"FFFF",x"2F05",x"A009", -- 04A0-04AF 
  x"0013",x"4320",x"0000",x"2800",x"A009",x"A003",x"FFD1",x"32D0",x"0008",x"478E",x"2F04",x"A00A",x"2F03",x"A00A",x"4295",x"9003", -- 04B0-04BF 
  x"0000",x"0000",x"8018",x"2F04",x"A00A",x"A00A",x"FFFF",x"2F04",x"4478",x"2F03",x"A00A",x"2F04",x"A00A",x"428E",x"03FF",x"A008", -- 04C0-04CF 
  x"0020",x"429C",x"9008",x"2F05",x"A00A",x"9005",x"0000",x"2F05",x"A009",x"0011",x"4320",x"A003",x"FFDA",x"32D9",x"0006",x"478E", -- 04D0-04DF 
  x"0005",x"4406",x"4433",x"A009",x"442A",x"A009",x"442A",x"A00A",x"4445",x"A009",x"4319",x"B501",x"0014",x"4295",x"9004",x"B300", -- 04E0-04EF 
  x"442A",x"A00A",x"427B",x"B501",x"007F",x"4295",x"9002",x"B300",x"0008",x"B501",x"0008",x"4295",x"9012",x"4445",x"A00A",x"442A", -- 04F0-04FF 
  x"A00A",x"429C",x"900C",x"FFFF",x"442A",x"42C9",x"0001",x"4433",x"42C9",x"0008",x"4320",x"0020",x"4320",x"0008",x"4320",x"B501", -- 0500-050F 
  x"0020",x"429C",x"9001",x"8012",x"FFFF",x"4433",x"42C9",x"4433",x"A00A",x"A00F",x"9002",x"0006",x"43CC",x"B501",x"4320",x"B501", -- 0510-051F 
  x"442A",x"A00A",x"4281",x"0001",x"442A",x"42C9",x"B501",x"0020",x"429C",x"B502",x"0008",x"4295",x"A00B",x"A008",x"B412",x"001B", -- 0520-052F 
  x"4295",x"A00B",x"A008",x"4433",x"A00A",x"A00D",x"A00E",x"9FB2",x"0020",x"4320",x"4445",x"A00A",x"442A",x"A00A",x"4445",x"A00A", -- 0530-053F 
  x"428E",x"B603",x"A007",x"0000",x"B412",x"4281",x"4415",x"A003",x"FF94",x"32E0",x"0005",x"478E",x"B501",x"0030",x"429C",x"A00B", -- 0540-054F 
  x"B502",x"003A",x"429C",x"A008",x"B502",x"0041",x"429C",x"A00B",x"A00E",x"B501",x"9015",x"B412",x"0030",x"428E",x"B501",x"000A", -- 0550-055F 
  x"429C",x"A00B",x"9002",x"0007",x"428E",x"B501",x"2F08",x"A00A",x"429C",x"A00B",x"9004",x"B300",x"B300",x"0000",x"0000",x"B412", -- 0560-056F 
  x"A003",x"FFD7",x"32E6",x"0006",x"478E",x"0007",x"4406",x"442A",x"A009",x"4421",x"A009",x"0000",x"442A",x"A00A",x"9063",x"B501", -- 0570-057F 
  x"4433",x"A009",x"0001",x"444E",x"A009",x"FFFF",x"4457",x"A009",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"002B",x"4295", -- 0580-058F 
  x"9009",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"8016",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B", -- 0590-059F 
  x"002D",x"4295",x"900D",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"444E",x"A00A",x"A000",x"444E",x"A009", -- 05A0-05AF 
  x"4457",x"A00A",x"9FD2",x"4433",x"A00A",x"442A",x"A00A",x"429C",x"9029",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"B501", -- 05B0-05BF 
  x"9015",x"454C",x"A00B",x"9007",x"B300",x"442A",x"A00A",x"A000",x"442A",x"A009",x"800A",x"B412",x"2F08",x"A00A",x"42B5",x"A007", -- 05C0-05CF 
  x"4433",x"A00A",x"4287",x"4433",x"A009",x"8005",x"B300",x"4433",x"A00A",x"442A",x"A009",x"4433",x"A00A",x"442A",x"A00A",x"429C", -- 05D0-05DF 
  x"A00B",x"9FD7",x"444E",x"A00A",x"A00F",x"9001",x"A000",x"4433",x"A00A",x"442A",x"A00A",x"428E",x"4415",x"A003",x"FF83",x"32ED", -- 05E0-05EF 
  x"0004",x"478E",x"42E7",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"427B",x"42FE",x"4295",x"2F0C",x"A00A",x"2F0D",x"A00A", -- 05F0-05FF 
  x"429C",x"A008",x"9004",x"0001",x"2F0C",x"42C9",x"8FF0",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"427B",x"003C",x"4295", -- 0600-060F 
  x"9004",x"2F0C",x"A00A",x"2F0D",x"A009",x"2F0C",x"A00A",x"427B",x"42FE",x"4295",x"A00B",x"2F0C",x"A00A",x"2F0D",x"A00A",x"429C", -- 0610-061F 
  x"A008",x"9004",x"0001",x"2F0C",x"42C9",x"8FE5",x"2F0B",x"A00A",x"2F0C",x"A00A",x"B502",x"428E",x"B501",x"9003",x"0001",x"2F0C", -- 0620-062F 
  x"42C9",x"42D4",x"B300",x"A003",x"FFBA",x"32F2",x"0002",x"478E",x"42E7",x"B502",x"42FE",x"428E",x"9007",x"42D4",x"B300",x"B300", -- 0630-063F 
  x"B300",x"B300",x"0000",x"8023",x"42D4",x"B300",x"B412",x"0000",x"B603",x"428E",x"9016",x"42E7",x"42E7",x"B502",x"427B",x"B502", -- 0640-064F 
  x"427B",x"428E",x"9004",x"B300",x"B300",x"0000",x"0000",x"B501",x"9004",x"4287",x"B412",x"4287",x"B412",x"42D4",x"42D4",x"4287", -- 0650-065F 
  x"8FE7",x"B200",x"B300",x"9002",x"FFFF",x"8001",x"0000",x"A003",x"FFCC",x"32F5",x"0004",x"478E",x"42E7",x"42E7",x"0000",x"2F11", -- 0660-066F 
  x"A00A",x"2F01",x"A00A",x"9003",x"B501",x"A00A",x"A007",x"B501",x"4287",x"B501",x"A00A",x"B412",x"4287",x"A00A",x"42D4",x"42D4", -- 0670-067F 
  x"B603",x"42E7",x"42E7",x"4638",x"9003",x"B412",x"A00D",x"B412",x"B502",x"A00D",x"B502",x"A00A",x"A00D",x"A00B",x"A008",x"B502", -- 0680-068F 
  x"B501",x"A00A",x"A007",x"2F11",x"A00A",x"4295",x"A00B",x"A008",x"9004",x"B501",x"A00A",x"A007",x"8FDA",x"42D4",x"B300",x"42D4", -- 0690-069F 
  x"B434",x"A00D",x"9004",x"B300",x"B300",x"0000",x"0000",x"A003",x"FFC0",x"32FA",x"0004",x"478E",x"B412",x"0003",x"A007",x"B412", -- 06A0-06AF 
  x"A003",x"FFF7",x"32FF",x"0008",x"478E",x"404F",x"4000",x"A007",x"4307",x"A003",x"FFF7",x"3308",x"0006",x"478E",x"43F0",x"2F0F", -- 06B0-06BF 
  x"A00A",x"2F11",x"A00A",x"B502",x"428E",x"4307",x"2F11",x"A009",x"0020",x"45F2",x"41C0",x"0001",x"2F01",x"A009",x"A003",x"FFEB", -- 06C0-06CF 
  x"330F",x"0009",x"478E",x"2F0A",x"A00A",x"42E7",x"2F0B",x"A00A",x"42E7",x"2F0C",x"A00A",x"42E7",x"2F0D",x"A00A",x"42E7",x"B502", -- 06D0-06DF 
  x"A007",x"2F0D",x"A009",x"B501",x"2F0A",x"A009",x"B501",x"2F0B",x"A009",x"2F0C",x"A009",x"0020",x"45F2",x"B501",x"901F",x"B603", -- 06E0-06EF 
  x"466C",x"B501",x"9009",x"42E7",x"42E7",x"B200",x"42D4",x"42D4",x"46AC",x"B300",x"4312",x"8011",x"B200",x"B603",x"4575",x"9005", -- 06F0-06FF 
  x"B200",x"B300",x"0003",x"43CC",x"8008",x"B434",x"B300",x"B412",x"B300",x"2F10",x"A00A",x"9001",x"4059",x"8FDD",x"B200",x"42D4", -- 0700-070F 
  x"2F0D",x"A009",x"42D4",x"2F0C",x"A009",x"42D4",x"2F0B",x"A009",x"42D4",x"2F0A",x"A009",x"A003",x"FFB3",x"3319",x"0004",x"478E", -- 0710-071F 
  x"2F02",x"A00A",x"2802",x"A009",x"2F00",x"A00A",x"9006",x"003C",x"4320",x"331E",x"0004",x"41F9",x"8003",x"3323",x"0002",x"41F9", -- 0720-072F 
  x"4377",x"2F09",x"A00A",x"0100",x"44E0",x"B502",x"A00A",x"003C",x"4295",x"9002",x"B200",x"802B",x"2F00",x"A00A",x"900C",x"003C", -- 0730-073F 
  x"4320",x"3326",x"0003",x"41F9",x"46D3",x"003C",x"4320",x"332A",x"0004",x"41F9",x"801C",x"001B",x"4320",x"005B",x"4320",x"0033", -- 0740-074F 
  x"4320",x"0036",x"4320",x"006D",x"4320",x"46D3",x"2F10",x"A00A",x"A00D",x"9003",x"332F",x"0002",x"41F9",x"001B",x"4320",x"005B", -- 0750-075F 
  x"4320",x"0033",x"4320",x"0039",x"4320",x"006D",x"4320",x"8FC8",x"A003",x"FFB3",x"3332",x"0005",x"478E",x"3338",x"000B",x"41F9", -- 0760-076F 
  x"4377",x"4377",x"4720",x"A003",x"FFF5",x"3344",x"0006",x"478E",x"0000",x"2F01",x"A009",x"A003",x"FFF8",x"334B",x"000C",x"478E", -- 0770-077F 
  x"42D4",x"42E7",x"A003",x"FFF9",x"3358",x"000A",x"478E",x"42D4",x"46B5",x"A003",x"FFF9",x"3363",x"0003",x"478E",x"42D4",x"2F10", -- 0780-078F 
  x"A00A",x"9002",x"46B5",x"8001",x"42E7",x"A003",x"FFF4",x"3367",x"000A",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"477F",x"A003", -- 0790-079F 
  x"FFF6",x"3372",x"0008",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"4786",x"A003",x"FFF6",x"337B",x"0001",x"478E",x"46BE",x"0001", -- 07A0-07AF 
  x"2F10",x"A009",x"478D",x"A003",x"FFF6",x"337D",x"0001",x"4780",x"0000",x"2F10",x"A009",x"43F9",x"404F",x"A003",x"4307",x"4778", -- 07B0-07BF 
  x"A003",x"FFF3",x"337F",x"0005",x"478E",x"41FF",x"A003",x"FFFA",x"3385",x"0003",x"478E",x"47C5",x"A00A",x"9005",x"4327",x"B300", -- 07C0-07CF 
  x"4327",x"B300",x"8006",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"B300", -- 07D0-07DF 
  x"A003",x"FFE6",x"3389",x"0003",x"478E",x"338D",x"0001",x"41F9",x"0022",x"4320",x"47CB",x"0022",x"4320",x"338F",x"0001",x"41F9", -- 07E0-07EF 
  x"A003",x"FFF0",x"3391",x"0005",x"478E",x"47C5",x"A009",x"2F00",x"A00A",x"42E7",x"0000",x"2F00",x"A009",x"3397",x"0008",x"41F3", -- 07F0-07FF 
  x"46D3",x"404F",x"4000",x"A007",x"0010",x"A009",x"4377",x"003C",x"4320",x"33A0",x"0006",x"41F9",x"4377",x"33A7",x"0002",x"41F9", -- 0800-080F 
  x"0000",x"B603",x"A007",x"B501",x"2F03",x"4295",x"9002",x"B300",x"2F04",x"B501",x"2F17",x"4295",x"9009",x"B300",x"2F00",x"41FF", -- 0810-081F 
  x"0001",x"A007",x"A009",x"41FF",x"0001",x"A007",x"A00A",x"47E5",x"4287",x"B501",x"0010",x"4295",x"9FE4",x"B300",x"33AA",x"0004", -- 0820-082F 
  x"41F9",x"B501",x"4350",x"33AF",x"0001",x"41F9",x"B501",x"000F",x"A007",x"436A",x"0010",x"A007",x"B603",x"42AE",x"A00B",x"9FCC", -- 0830-083F 
  x"B200",x"4377",x"003C",x"4320",x"33B1",x"0007",x"41F9",x"42D4",x"2F00",x"A009",x"A003",x"0000",x"33B9",x"0005",x"4068",x"2F18", -- 0840-084F 
</DUMPZ></ok>
BZEIG @ 3000 -1 DUMPZ   ( generiert ByteRAM für P20_FFP.vhd Step_10 ) <ok>
<DUMPZ>
  x"28",x"20",x"7B",x"20",x"7D",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"20",x"28",x"4C", -- 3000-300F 
  x"49",x"54",x"2C",x"29",x"20",x"4C",x"49",x"54",x"2C",x"20",x"28",x"43",x"4F",x"4E",x"53",x"54", -- 3010-301F 
  x"41",x"4E",x"54",x"3A",x"29",x"20",x"43",x"4F",x"4E",x"53",x"54",x"41",x"4E",x"54",x"20",x"4B", -- 3020-302F 
  x"45",x"59",x"41",x"44",x"52",x"20",x"53",x"50",x"20",x"52",x"50",x"20",x"50",x"43",x"20",x"58", -- 3030-303F 
  x"42",x"49",x"54",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"42",x"49",x"54",x"20",x"52",x"50", -- 3040-304F 
  x"30",x"20",x"49",x"52",x"41",x"4D",x"41",x"44",x"52",x"20",x"4A",x"52",x"41",x"4D",x"41",x"44", -- 3050-305F 
  x"52",x"20",x"58",x"4F",x"46",x"46",x"20",x"43",x"52",x"42",x"5A",x"45",x"49",x"47",x"20",x"43", -- 3060-306F 
  x"52",x"44",x"50",x"20",x"42",x"41",x"53",x"45",x"20",x"54",x"49",x"42",x"20",x"49",x"4E",x"31", -- 3070-307F 
  x"20",x"49",x"4E",x"32",x"20",x"49",x"4E",x"33",x"20",x"49",x"4E",x"34",x"20",x"45",x"52",x"52", -- 3080-308F 
  x"4F",x"52",x"4E",x"52",x"20",x"44",x"50",x"20",x"53",x"54",x"41",x"54",x"20",x"4C",x"46",x"41", -- 3090-309F 
  x"20",x"42",x"41",x"4E",x"46",x"20",x"42",x"5A",x"45",x"49",x"47",x"20",x"44",x"50",x"4D",x"45", -- 30A0-30AF 
  x"52",x"4B",x"20",x"43",x"53",x"50",x"20",x"4C",x"4F",x"43",x"41",x"4C",x"41",x"44",x"44",x"52", -- 30B0-30BF 
  x"20",x"4C",x"4F",x"43",x"41",x"4C",x"41",x"44",x"52",x"45",x"53",x"53",x"45",x"20",x"56",x"45", -- 30C0-30CF 
  x"52",x"53",x"49",x"4F",x"4E",x"20",x"52",x"45",x"54",x"55",x"52",x"4E",x"20",x"28",x"4D",x"43", -- 30D0-30DF 
  x"4F",x"44",x"45",x"3A",x"29",x"20",x"4D",x"43",x"4F",x"44",x"45",x"20",x"4D",x"49",x"4E",x"55", -- 30E0-30EF 
  x"53",x"20",x"55",x"2B",x"20",x"55",x"2A",x"20",x"30",x"3D",x"20",x"30",x"4C",x"54",x"20",x"45", -- 30F0-30FF 
  x"4D",x"49",x"54",x"43",x"4F",x"44",x"45",x"20",x"4E",x"4F",x"54",x"20",x"41",x"4E",x"44",x"20", -- 3100-310F 
  x"4F",x"52",x"20",x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"20",x"2B",x"20",x"21",x"20",x"40", -- 3110-311F 
  x"20",x"53",x"57",x"41",x"50",x"20",x"4F",x"56",x"45",x"52",x"20",x"44",x"55",x"50",x"20",x"52", -- 3120-312F 
  x"4F",x"54",x"20",x"44",x"52",x"4F",x"50",x"20",x"32",x"53",x"57",x"41",x"50",x"20",x"32",x"4F", -- 3130-313F 
  x"56",x"45",x"52",x"20",x"32",x"44",x"55",x"50",x"20",x"32",x"44",x"52",x"4F",x"50",x"20",x"4E", -- 3140-314F 
  x"4F",x"4F",x"50",x"20",x"42",x"2C",x"20",x"5A",x"2C",x"20",x"28",x"57",x"4F",x"52",x"44",x"3A", -- 3150-315F 
  x"29",x"20",x"57",x"4F",x"52",x"44",x"3A",x"20",x"22",x"20",x"2E",x"22",x"20",x"48",x"45",x"52", -- 3160-316F 
  x"45",x"20",x"4A",x"52",x"42",x"49",x"54",x"20",x"4A",x"52",x"30",x"42",x"49",x"54",x"20",x"58", -- 3170-317F 
  x"53",x"45",x"54",x"42",x"54",x"20",x"41",x"4C",x"4C",x"4F",x"54",x"20",x"42",x"52",x"41",x"4E", -- 3180-318F 
  x"43",x"48",x"2C",x"20",x"30",x"42",x"52",x"41",x"4E",x"43",x"48",x"2C",x"20",x"42",x"45",x"47", -- 3190-319F 
  x"49",x"4E",x"20",x"41",x"47",x"41",x"49",x"4E",x"20",x"55",x"4E",x"54",x"49",x"4C",x"20",x"49", -- 31A0-31AF 
  x"46",x"20",x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"45",x"4C",x"53",x"45",x"20",x"57",x"48", -- 31B0-31BF 
  x"49",x"4C",x"45",x"20",x"52",x"45",x"50",x"45",x"41",x"54",x"20",x"43",x"40",x"20",x"43",x"21", -- 31C0-31CF 
  x"20",x"31",x"2B",x"20",x"2D",x"20",x"3D",x"20",x"4C",x"54",x"20",x"3E",x"20",x"2A",x"20",x"42", -- 31D0-31DF 
  x"59",x"45",x"20",x"42",x"59",x"45",x"20",x"20",x"2B",x"21",x"20",x"52",x"3E",x"20",x"3E",x"52", -- 31E0-31EF 
  x"20",x"52",x"20",x"2C",x"20",x"45",x"58",x"45",x"43",x"55",x"54",x"45",x"20",x"4B",x"45",x"59", -- 31F0-31FF 
  x"20",x"45",x"4D",x"49",x"54",x"20",x"53",x"48",x"4C",x"31",x"36",x"20",x"44",x"49",x"47",x"20", -- 3200-320F 
  x"54",x"59",x"50",x"45",x"20",x"48",x"47",x"2E",x"20",x"48",x"2E",x"20",x"2E",x"20",x"3F",x"20", -- 3210-321F 
  x"43",x"52",x"20",x"66",x"6C",x"3E",x"20",x"2F",x"66",x"6C",x"3E",x"20",x"66",x"72",x"3E",x"20", -- 3220-322F 
  x"2F",x"66",x"72",x"3E",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20", -- 3230-323F 
  x"44",x"49",x"53",x"41",x"42",x"4C",x"45",x"20",x"77",x"65",x"69",x"74",x"65",x"72",x"20",x"6E", -- 3240-324F 
  x"61",x"63",x"68",x"20",x"54",x"61",x"73",x"74",x"65",x"20",x"45",x"53",x"43",x"41",x"50",x"45", -- 3250-325F 
  x"20",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"3F",x"3F",x"3F",x"20",x"46",x"45",x"48",x"4C", -- 3260-326F 
  x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"2D",x"20",x"46", -- 3270-327F 
  x"65",x"68",x"6C",x"65",x"72",x"20",x"4E",x"75",x"6D",x"6D",x"65",x"72",x"20",x"20",x"43",x"53", -- 3280-328F 
  x"50",x"21",x"20",x"43",x"53",x"50",x"3F",x"20",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"45",x"4E", -- 3290-329F 
  x"44",x"5F",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"4C",x"30",x"20",x"4C",x"31",x"20",x"4C",x"32", -- 32A0-32AF 
  x"20",x"4C",x"33",x"20",x"4C",x"34",x"20",x"4C",x"35",x"20",x"4C",x"36",x"20",x"4C",x"37",x"20", -- 32B0-32BF 
  x"27",x"20",x"49",x"4E",x"43",x"52",x"34",x"20",x"4B",x"45",x"59",x"5F",x"49",x"4E",x"54",x"20", -- 32C0-32CF 
  x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"32",x"20",x"45",x"58",x"50",x"45",x"43",x"54",x"20", -- 32D0-32DF 
  x"44",x"49",x"47",x"49",x"54",x"20",x"4E",x"55",x"4D",x"42",x"45",x"52",x"20",x"57",x"4F",x"52", -- 32E0-32EF 
  x"44",x"20",x"5A",x"3D",x"20",x"46",x"49",x"4E",x"44",x"20",x"4C",x"43",x"46",x"41",x"20",x"43", -- 32F0-32FF 
  x"4F",x"4D",x"50",x"49",x"4C",x"45",x"2C",x"20",x"43",x"52",x"45",x"41",x"54",x"45",x"20",x"49", -- 3300-330F 
  x"4E",x"54",x"45",x"52",x"50",x"52",x"45",x"54",x"20",x"51",x"55",x"49",x"54",x"20",x"2F",x"6F", -- 3310-331F 
  x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"6F",x"6B",x"3E",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"6F", -- 3320-332F 
  x"6B",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"46",x"4F",x"52",x"54",x"59",x"2D",x"46",x"4F", -- 3330-333F 
  x"52",x"54",x"48",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"20",x"28",x"49",x"4D",x"4D",x"45", -- 3340-334F 
  x"44",x"49",x"41",x"54",x"45",x"3A",x"29",x"20",x"28",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45", -- 3350-335F 
  x"3A",x"29",x"20",x"28",x"3A",x"29",x"20",x"49",x"4D",x"4D",x"45",x"44",x"49",x"41",x"54",x"45", -- 3360-336F 
  x"3A",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"3A",x"20",x"3A",x"20",x"3B",x"20",x"44", -- 3370-337F 
  x"55",x"42",x"49",x"54",x"20",x"4C",x"47",x"2E",x"20",x"4E",x"47",x"2E",x"20",x"78",x"20",x"2C", -- 3380-338F 
  x"20",x"44",x"55",x"4D",x"50",x"5A",x"20",x"27",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"20", -- 3390-339F 
  x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"20",x"20",x"20",x"20",x"2D",x"2D",x"20",x"20",x"2D", -- 33A0-33AF 
  x"20",x"2F",x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"52",x"41",x"4D",x"50",x"31",x"20",x"56", -- 33B0-33BF 
</DUMPZ></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Variablen"> 
2F18 CONSTANT RAMP1 RAMP1 1+ RAMP1 ! ( bis 2F17 sind neu BASE TIB ... ) <ok></ok><fl>084B 33B9 </fl><fr>0850 33BF </fr>
: VARIABLE RAMP1 @ DUP CONSTANT DUP 1+ RAMP1 ! ! ; <ok></ok><fl>0850 33BF </fl><fr>085E 33C8 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="noch paar hilfreiche Funktionen"> 
: MOVE ( adr1 adr2 n --> ) <ok></ok><fl>085E 33C8 </fl><fr>0862 33CD </fr>
  BEGIN DUP WHILE >R OVER @ OVER ! SWAP 1+ SWAP 1+ R> 1 - REPEAT DROP 2DROP ; <ok></ok><fl>0862 33CD </fl><fr>0874 33CD </fr>
: FILL ( adr n b --> ) <ok></ok><fl>0874 33CD </fl><fr>0878 33D2 </fr>
  ROT ROT BEGIN DUP WHILE >R 2DUP ! 1 + R> 1 - REPEAT DROP 2DROP ; <ok></ok><fl>0878 33D2 </fl><fr>0888 33D2 </fr>
 <ok></ok>
: DUMP ( addr n --> ) <ok></ok><fl>0888 33D2 </fl><fr>088C 33D7 </fr>
  BEGIN SWAP ( CR DUP . ) DUP @ . 1 + SWAP 1 - DUP 0= UNTIL DROP ; <ok></ok><fl>088C 33D7 </fl><fr>089A 33D7 </fr>
 <ok></ok>
: MAX ( a b --> c ) <ok></ok><fl>089A 33D7 </fl><fr>089E 33DB </fr>
  2DUP LT IF SWAP END_IF DROP ; <ok></ok><fl>089E 33DB </fl><fr>08A4 33DB </fr>
: MIN ( a b --> c ) <ok></ok><fl>08A4 33DB </fl><fr>08A8 33DF </fr>
  2DUP > IF SWAP END_IF DROP ; <ok></ok><fl>08A8 33DF </fl><fr>08AE 33DF </fr>
: ABS DUP 0LT IF MINUS END_IF ; <ok></ok><fl>08AE 33DF </fl><fr>08B7 33E3 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Multiplikation"> 
A017 MCODE MULT_I <ok></ok><fl>08B7 33E3 </fl><fr>08BD 33EA </fr>
A018 MCODE MULT_II <ok></ok><fl>08BD 33EA </fl><fr>08C3 33F2 </fr>
: SUPERMULT ( a u adrc adrb n --> a u' adrc' adrb' ) <ok></ok><fl>08C3 33F2 </fl><fr>08C7 33FC </fr>
  >R <ok></ok><fl>08C7 33FC </fl><fr>08C8 33FC </fr>
  BEGIN MULT_I MULT_II UNTIL <ok></ok><fl>08C8 33FC </fl><fr>08CB 33FC </fr>
  R> DROP ; ( /;> ) <ok></ok><fl>08CB 33FC </fl><fr>08CE 33FC </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
1401 CONSTANT A <ok></ok><fl>08CE 33FC </fl><fr>08D3 33FE </fr>
1601 CONSTANT B <ok></ok><fl>08D3 33FE </fl><fr>08D8 3400 </fr>
1801 CONSTANT C <ok></ok><fl>08D8 3400 </fl><fr>08DD 3402 </fr>
A 1FF 1111 FILL <ok></ok>
B 1FF 1111 FILL <ok></ok>
C 3FF 0000 FILL <ok></ok>
 <ok></ok>
1111 0 C B 4 SUPERMULT . . . . <ok>1605 1805 0123 1111 </ok>
C 8 DUMP <ok>4321 4444 4444 4444 0000 0000 0000 0000 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SMUL ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3) <ok></ok><fl>08DD 3402 </fl><fr>08E1 3407 </fr>
       ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>08E1 3407 </fl><fr>08E1 3407 </fr>
  7 LOCAL <ok></ok><fl>08E1 3407 </fl><fr>08E3 3407 </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>08E3 3407 </fl><fr>08F1 3407 </fr>
  L0 @ L3 @ IF NOT END_IF <ok></ok><fl>08F1 3407 </fl><fr>08F7 3407 </fr>
  L1 @ L4 @ + 1+ <ok></ok><fl>08F7 3407 </fl><fr>08FD 3407 </fr>
  L6 @ OVER 0 FILL <ok></ok><fl>08FD 3407 </fl><fr>0902 3407 </fr>
  L6 @  <ok></ok><fl>0902 3407 </fl><fr>0904 3407 </fr>
  DUP L2 @ L1 @ BEGIN <ok></ok><fl>0904 3407 </fl><fr>0909 3407 </fr>
    0 2OVER @ ROT ROT L5 @ L4 @ ( ... a u  adrc  adrb n ) <ok></ok><fl>0909 3407 </fl><fr>0912 3407 </fr>
    SUPERMULT                   ( ... a u' adrc' adrb' ) <ok></ok><fl>0912 3407 </fl><fr>0913 3407 </fr>
    DROP ! DROP <ok></ok><fl>0913 3407 </fl><fr>0916 3407 </fr>
 <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(    vorher: ) <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(    L4 @ 0  <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(    BEGIN OVER WHILE SWAP -1 + SWAP <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(      0 SWAP  <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(      L6 @ @ L5 @ @ L2 @ @ U* D+  <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(      L6 @ DUP 1 + L6 ! ! <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(      L5 @ 1 + L5 ! <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(      REPEAT <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
(    L6 @ ! DROP <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
 <ok></ok><fl>0916 3407 </fl><fr>0916 3407 </fr>
    ROT 1 + ROT 1 + ROT -1 + ( 1 L2 +! 1 L6 +! <ok></ok><fl>0916 3407 </fl><fr>091F 3407 </fr>
    DUP 0= UNTIL DROP 2DROP <ok></ok><fl>091F 3407 </fl><fr>0924 3407 </fr>
  END_LOCAL <ok></ok><fl>0924 3407 </fl><fr>0925 3407 </fr>
  ; <ok></ok><fl>0925 3407 </fl><fr>0926 3407 </fr>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C SMUL . . . <ok>1801 0005 0000 </ok>
C 8 DUMP <ok>4321 8765 4567 0123 0000 0000 0000 0000 </ok>
 <ok></ok>
C 201 0 FILL <ok></ok>
0 100 A 0 100 B C SMUL . . . <ok>1801 0201 0000 </ok>
C 8 DUMP <ok>4321 8765 CBA9 0FED 5432 9876 DCBA 20FE </ok>
 <ok></ok>
C 101 0 FILL <ok></ok>
0 80 A 0 80 B C SMUL . . . <ok>1801 0101 0000 </ok>
C 8 DUMP <ok>4321 8765 CBA9 0FED 5432 9876 DCBA 20FE </ok>
 <ok></ok>
( C 2001 0 FILL <ok></ok>
( 0 1000 A 0 1000 B C SMUL . . . <ok></ok>
( C 8 DUMP <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Addition">  
: ADDIER ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3 ) <ok></ok><fl>0926 3407 </fl><fr>092A 340E </fr>
         ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>092A 340E </fl><fr>092A 340E </fr>
  7 LOCAL <ok></ok><fl>092A 340E </fl><fr>092C 340E </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>092C 340E </fl><fr>093A 340E </fr>
  L0 @ L1 @ L4 @ MAX 1+ L6 @ <ok></ok><fl>093A 340E </fl><fr>0944 340E </fr>
  L0 @ L3 @ = IF <ok></ok><fl>0944 340E </fl><fr>094A 340E </fr>
    0 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>094A 340E </fl><fr>0952 340E </fr>
                 ( hier ist mal ! @ gewesen!!! ) <ok></ok><fl>0952 340E </fl><fr>0952 340E </fr>
      OVER DUP L1 @ LT IF L2 @ DUP @ SWAP 1+ L2 ! ELSE 0 END_IF <ok></ok><fl>0952 340E </fl><fr>0962 340E </fr>
      SWAP L4 @ LT IF L5 @ DUP @ SWAP 1+ L5 ! ELSE 0 END_IF <ok></ok><fl>0962 340E </fl><fr>0971 340E </fr>
      U+ L6 @ DUP 1+ L6 ! ! <ok></ok><fl>0971 340E </fl><fr>0979 340E </fr>
      ROT ROT 1 + 2DUP - 0= UNTIL 2DROP L6 @ ! <ok></ok><fl>0979 340E </fl><fr>0985 340E </fr>
    ELSE SWAP 1 - SWAP <ok></ok><fl>0985 340E </fl><fr>098A 340E </fr>
      1 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>098A 340E </fl><fr>0992 340E </fr>
        OVER DUP L1 @ LT IF L2 @ DUP @ SWAP 1+ L2 ! ELSE 0 END_IF <ok></ok><fl>0992 340E </fl><fr>09A2 340E </fr>
        SWAP L4 @ LT IF L5 @ DUP @ SWAP 1+ L5 ! NOT ELSE -1 END_IF <ok></ok><fl>09A2 340E </fl><fr>09B2 340E </fr>
        U+ L6 @ DUP 1+ L6 ! ! <ok></ok><fl>09B2 340E </fl><fr>09BA 340E </fr>
        ROT ROT 1 + 2DUP - 0= UNTIL 2DROP ( DUP . <ok></ok><fl>09BA 340E </fl><fr>09C3 340E </fr>
        0= IF DUP L6 ! <ok></ok><fl>09C3 340E </fl><fr>09C8 340E </fr>
          ROT NOT ROT ROT <ok></ok><fl>09C8 340E </fl><fr>09CC 340E </fr>
          1 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>09CC 340E </fl><fr>09D4 340E </fr>
            0 L6 @ @ NOT U+  <ok></ok><fl>09D4 340E </fl><fr>09DA 340E </fr>
            L6 @ DUP 1+ L6 ! ! <ok></ok><fl>09DA 340E </fl><fr>09E1 340E </fr>
            ROT ROT 1 + 2DUP - 0= UNTIL 2DROP DROP <ok></ok><fl>09E1 340E </fl><fr>09EB 340E </fr>
          END_IF <ok></ok><fl>09EB 340E </fl><fr>09EB 340E </fr>
      END_IF  <ok></ok><fl>09EB 340E </fl><fr>09EB 340E </fr>
  END_LOCAL ; <ok></ok><fl>09EB 340E </fl><fr>09ED 340E </fr>
 <ok></ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C ADDIER . . . <ok>1801 0003 0000 </ok>
C 8 DUMP <ok>2222 2222 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 5 A 0 7 B C ADDIER . . . <ok>1801 0008 0000 </ok>
C 8 DUMP <ok>2222 2222 2222 2222 2222 1111 1111 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 7 A 0 3 B C ADDIER . . . <ok>1801 0008 0000 </ok>
C 8 DUMP <ok>2222 2222 2222 1111 1111 1111 1111 0000 </ok>
 <ok></ok>
A 8 FFFF FILL <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C ADDIER . . . <ok>1801 0003 0000 </ok>
C 8 DUMP ( 1110 1111 0001 0000 ) <ok>1110 1111 0001 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
 <ok></ok>
A 8 2222 FILL <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A -1 2 B C ADDIER . . . <ok>1801 0002 0000 </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
-1 2 A 0 2 B C ADDIER . . . <ok>1801 0002 FFFF </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 B -1 2 A C ADDIER . . . <ok>1801 0002 FFFF </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
-1 2 B 0 2 A C ADDIER . . . <ok>1801 0002 0000 </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Division"> 
A014 MCODE DI32  <ok></ok><fl>09ED 340E </fl><fr>09F3 3413 </fr>
: DIV32 ( a b d --> r q ) <ok></ok><fl>09F3 3413 </fl><fr>09F7 3419 </fr>
  10 BEGIN >R DI32 R> 1 - DUP 0= UNTIL 2DROP ; <ok></ok><fl>09F7 3419 </fl><fr>0A02 3419 </fr>
: /MOD ( b d --> r q ) 0 ROT ROT DIV32 ; <ok></ok><fl>0A02 3419 </fl><fr>0A0B 341E </fr>
: /MOD ( a b --> r q ) <ok></ok><fl>0A0B 341E </fl><fr>0A0F 3423 </fr>
  OVER 0LT IF SWAP MINUS SWAP <ok></ok><fl>0A0F 3423 </fl><fr>0A15 3423 </fr>
    DUP 0LT IF MINUS /MOD SWAP MINUS SWAP <ok></ok><fl>0A15 3423 </fl><fr>0A1D 3423 </fr>
      ELSE /MOD MINUS SWAP MINUS SWAP END_IF <ok></ok><fl>0A1D 3423 </fl><fr>0A23 3423 </fr>
    ELSE DUP 0LT IF MINUS /MOD MINUS <ok></ok><fl>0A23 3423 </fl><fr>0A2A 3423 </fr>
      ELSE /MOD END_IF END_IF <ok></ok><fl>0A2A 3423 </fl><fr>0A2C 3423 </fr>
  ; <ok></ok><fl>0A2C 3423 </fl><fr>0A2D 3423 </fr>
: / ( b d --> q ) /MOD SWAP DROP ; <ok></ok><fl>0A2D 3423 </fl><fr>0A35 3425 </fr>
: MOD ( b d --> r ) /MOD DROP ; <ok></ok><fl>0A35 3425 </fl><fr>0A3C 3429 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SDIV ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3 s4 l4 r4 ) <ok></ok><fl>0A3C 3429 </fl><fr>0A40 342E </fr>
       ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>0A40 342E </fl><fr>0A40 342E </fr>
  7 LOCAL <ok></ok><fl>0A40 342E </fl><fr>0A42 342E </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>0A42 342E </fl><fr>0A50 342E </fr>
L1 @ L4 @ LT IF L0 @ L1 @ L2 @ 0 0 0 ELSE <ok></ok><fl>0A50 342E </fl><fr>0A60 342E </fr>
  L1 @ 0 BEGIN <ok></ok><fl>0A60 342E </fl><fr>0A63 342E </fr>
    L2 @ OVER + @ NOT OVER L6 @ + ! <ok></ok><fl>0A63 342E </fl><fr>0A6E 342E </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0A6E 342E </fl><fr>0A75 342E </fr>
  L6 @ L1 @ + L4 @ - L2 ! <ok></ok><fl>0A75 342E </fl><fr>0A7F 342E </fr>
  -1 L6 @ L1 @ + ! 1 L1 +! <ok></ok><fl>0A7F 342E </fl><fr>0A89 342E </fr>
  L1 @ L4 @ - 0 BEGIN <ok></ok><fl>0A89 342E </fl><fr>0A8F 342E </fr>
    L2 @ L4 @ + @ NOT <ok></ok><fl>0A8F 342E </fl><fr>0A96 342E </fr>
    L2 @ L4 @ + 1 - @ NOT <ok></ok><fl>0A96 342E </fl><fr>0A9F 342E </fr>
    L5 @ L4 @ + 1 - @      ( a b c ) <ok></ok><fl>0A9F 342E </fl><fr>0AA7 342E </fr>
    DIV32  <ok></ok><fl>0AA7 342E </fl><fr>0AA8 342E </fr>
    SWAP DROP              ( q ) <ok></ok><fl>0AA8 342E </fl><fr>0AAA 342E </fr>
    DUP L2 @ L4 @ + 1+ ! <ok></ok><fl>0AAA 342E </fl><fr>0AB2 342E </fr>
    0 L2 @ L5 @ L4 @       ( c ü adrc adrb n ) <ok></ok><fl>0AB2 342E </fl><fr>0AB9 342E </fr>
    SUPERMULT <ok></ok><fl>0AB9 342E </fl><fr>0ABA 342E </fr>
    2DROP SWAP DROP <ok></ok><fl>0ABA 342E </fl><fr>0ABD 342E </fr>
    0 L2 @ L4 @ + @ U+ L2 @ L4 @ + ! <ok></ok><fl>0ABD 342E </fl><fr>0ACB 342E </fr>
BEGIN WHILE <ok></ok><fl>0ACB 342E </fl><fr>0ACC 342E </fr>
 1 L4 @ 0 BEGIN ROT <ok></ok><fl>0ACC 342E </fl><fr>0AD1 342E </fr>
   OVER L2 @ OVER + @ <ok></ok><fl>0AD1 342E </fl><fr>0AD7 342E </fr>
   SWAP L5 @ + @ NOT <ok></ok><fl>0AD7 342E </fl><fr>0ADD 342E </fr>
   U+ SWAP >R OVER L2 @ + ! R> <ok></ok><fl>0ADD 342E </fl><fr>0AE6 342E </fr>
   ROT ROT 1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0AE6 342E </fl><fr>0AEF 342E </fr>
(   0 L2 @ L4 @ + @ U+ L2 @ L4 @ + ! <ok></ok><fl>0AEF 342E </fl><fr>0AEF 342E </fr>
(   DUP . 7 EMIT <ok></ok><fl>0AEF 342E </fl><fr>0AEF 342E </fr>
 -1 L2 @ L4 @ + 1+ +! <ok></ok><fl>0AEF 342E </fl><fr>0AF7 342E </fr>
REPEAT <ok></ok><fl>0AF7 342E </fl><fr>0AF8 342E </fr>
    -1 L2 +! <ok></ok><fl>0AF8 342E </fl><fr>0AFB 342E </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0AFB 342E </fl><fr>0B02 342E </fr>
  L4 @ 0 BEGIN <ok></ok><fl>0B02 342E </fl><fr>0B05 342E </fr>
    L6 @ OVER + @ NOT OVER L6 @ + ! <ok></ok><fl>0B05 342E </fl><fr>0B10 342E </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0B10 342E </fl><fr>0B17 342E </fr>
  L4 @ L6 @ 1 - ! <ok></ok><fl>0B17 342E </fl><fr>0B1E 342E </fr>
  L1 @ L4 @ - L6 @ L4 @ + ! <ok></ok><fl>0B1E 342E </fl><fr>0B29 342E </fr>
( CR ." ++" L6 @ L1 @ 1 + DUMP ." ++" <ok></ok><fl>0B29 342E </fl><fr>0B29 342E </fr>
  L0 @ L4 @ L6 @ <ok></ok><fl>0B29 342E </fl><fr>0B2F 342E </fr>
  L0 @ L3 @ IF NOT END_IF <ok></ok><fl>0B2F 342E </fl><fr>0B35 342E </fr>
  L1 @ L4 @ - <ok></ok><fl>0B35 342E </fl><fr>0B3A 342E </fr>
  L6 @ L4 @ + 1 + <ok></ok><fl>0B3A 342E </fl><fr>0B41 342E </fr>
 END_IF <ok></ok><fl>0B41 342E </fl><fr>0B41 342E </fr>
  END_LOCAL <ok></ok><fl>0B41 342E </fl><fr>0B42 342E </fr>
  ; <ok></ok><fl>0B42 342E </fl><fr>0B43 342E </fr>
 <ok></ok>
( 333333 4 N^ 10 N* VARIABLE NA <ok></ok>
( 333333 DUP N* 10 N* VARIABLE NB <ok></ok>
( NA @ 10 DUMP <ok></ok>
( NA @ NB @ 2OPERANDEN->2SLX OVER . DUP . SDIV <ok></ok>
 <ok></ok>
654321 A ! <ok></ok>
234567 A 1+ ! <ok></ok>
000001 A 2 + ! <ok></ok>
432101 B ! <ok></ok>
A98765 B 1+ ! <ok></ok>
 <ok></ok>
0 3 A 0 2 B C SMUL . . . <ok>1801 0006 0000 </ok>
C 8 DUMP <ok>8421 7813 0017 AC1A 0000 0000 0000 0000 </ok>
 <ok></ok>
0 4 C 0 2 B A SDIV . . . . . . <ok>1404 0003 0000 1401 0002 0000 </ok>
A 8 DUMP <ok>0000 0000 0003 4321 4567 0001 2222 2222 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Zahlenspeicher"> 
0 VARIABLE OPERAND1 <ok></ok><fl>0B43 342E </fl><fr>0B48 3437 </fr>
0 VARIABLE OPERAND2 <ok></ok><fl>0B48 3437 </fl><fr>0B4D 3440 </fr>
1400 VARIABLE ERGEBNIS <ok></ok><fl>0B4D 3440 </fl><fr>0B52 3449 </fr>
1400 VARIABLE ZAHLENSPEICHER <ok></ok><fl>0B52 3449 </fl><fr>0B57 3458 </fr>
2000 VARIABLE SPEICHERENDE <ok></ok><fl>0B57 3458 </fl><fr>0B5C 3465 </fr>
0 VARIABLE SCHIEB <ok></ok><fl>0B5C 3465 </fl><fr>0B61 346C </fr>
 <ok></ok>
 <ok></ok>
: SLX->ERGEBNIS ( sz lz az --> z ) <ok></ok><fl>0B61 346C </fl><fr>0B65 347A </fr>
  OVER 0= IF 2DROP DROP 0 ELSE ( 0 bei 1/7 ) <ok></ok><fl>0B65 347A </fl><fr>0B6C 347A </fr>
    2DUP + BEGIN 1 - DUP @ 0= NOT UNTIL  <ok></ok><fl>0B6C 347A </fl><fr>0B75 347A </fr>
    1 + OVER MAX ( sz lz az ez ) <ok></ok><fl>0B75 347A </fl><fr>0B79 347A </fr>
    ( DUP ERGEBNIS ! ( nicht wegen 0 1 OPERAND1 ) <ok></ok><fl>0B79 347A </fl><fr>0B79 347A </fr>
    2DUP = IF 2DROP 2DROP 0 ELSE <ok></ok><fl>0B79 347A </fl><fr>0B80 347A </fr>
      OVER - ( sz lz az lneu ) <ok></ok><fl>0B80 347A </fl><fr>0B82 347A </fr>
      OVER @ C000 AND 0= <ok></ok><fl>0B82 347A </fl><fr>0B87 347A </fr>
      OVER 1 = AND IF <ok></ok><fl>0B87 347A </fl><fr>0B8C 347A </fr>
        DROP @ ELSE ( warum war da -1 ERGEBNIS +! ) <ok></ok><fl>0B8C 347A </fl><fr>0B8F 347A </fr>
          OVER 1 - ! <ok></ok><fl>0B8F 347A </fl><fr>0B93 347A </fr>
          1 - 4000 OR <ok></ok><fl>0B93 347A </fl><fr>0B98 347A </fr>
          END_IF  <ok></ok><fl>0B98 347A </fl><fr>0B98 347A </fr>
      SWAP DROP  <ok></ok><fl>0B98 347A </fl><fr>0B9A 347A </fr>
      SWAP IF MINUS END_IF <ok></ok><fl>0B9A 347A </fl><fr>0B9D 347A </fr>
      END_IF <ok></ok><fl>0B9D 347A </fl><fr>0B9D 347A </fr>
    END_IF <ok></ok><fl>0B9D 347A </fl><fr>0B9D 347A </fr>
  ; <ok></ok><fl>0B9D 347A </fl><fr>0B9E 347A </fr>
0 8 C SLX->ERGEBNIS . <ok>5800 </ok>
 <ok></ok>
: OPERAND->SLX ( op --> sx lx ax ) <ok></ok><fl>0B9E 347A </fl><fr>0BA2 3487 </fr>
  DUP @ ( op x ) <ok></ok><fl>0BA2 3487 </fl><fr>0BA4 3487 </fr>
  DUP 0LT IF MINUS -1 ELSE 0 END_IF <ok></ok><fl>0BA4 3487 </fl><fr>0BAB 3487 </fr>
  ROT ROT ( sx op xabs ) <ok></ok><fl>0BAB 3487 </fl><fr>0BAD 3487 </fr>
  DUP 4000 AND IF <ok></ok><fl>0BAD 3487 </fl><fr>0BB2 3487 </fr>
    SWAP DROP <ok></ok><fl>0BB2 3487 </fl><fr>0BB4 3487 </fr>
    3FFF AND <ok></ok><fl>0BB4 3487 </fl><fr>0BB6 3487 </fr>
    DUP @ SWAP 1+ <ok></ok><fl>0BB6 3487 </fl><fr>0BBA 3487 </fr>
    ELSE <ok></ok><fl>0BBA 3487 </fl><fr>0BBB 3487 </fr>
      OVER ! 1 SWAP  <ok></ok><fl>0BBB 3487 </fl><fr>0BBF 3487 </fr>
      END_IF <ok></ok><fl>0BBF 3487 </fl><fr>0BBF 3487 </fr>
  ; <ok></ok><fl>0BBF 3487 </fl><fr>0BC0 3487 </fr>
 <ok></ok>
77 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>2F19 0001 0000 </ok>
-77 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>2F19 0001 FFFF </ok>
5800 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>1801 0004 0000 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SPEICHERHOL ( l --> addr ) <ok></ok><fl>0BC0 3487 </fl><fr>0BC4 3493 </fr>
  ERGEBNIS @ 2DUP ! <ok></ok><fl>0BC4 3493 </fl><fr>0BC8 3493 </fr>
  1+ 2DUP + ERGEBNIS ! <ok></ok><fl>0BC8 3493 </fl><fr>0BCD 3493 </fr>
  2DUP SWAP 0 FILL <ok></ok><fl>0BCD 3493 </fl><fr>0BD1 3493 </fr>
  SWAP DROP <ok></ok><fl>0BD1 3493 </fl><fr>0BD3 3493 </fr>
ERGEBNIS @ SPEICHERENDE @ LT NOT IF 0369 ERROR END_IF <ok></ok><fl>0BD3 3493 </fl><fr>0BDC 3493 </fr>
  ; <ok></ok><fl>0BDC 3493 </fl><fr>0BDD 3493 </fr>
 <ok></ok>
 <ok></ok>
: 2OPERANDEN->2SLX ( op1 op2 --> sx lx ax sy ly ay az ) <ok></ok><fl>0BDD 3493 </fl><fr>0BE1 34A4 </fr>
  OPERAND2 ! <ok></ok><fl>0BE1 34A4 </fl><fr>0BE3 34A4 </fr>
  OPERAND1 ! <ok></ok><fl>0BE3 34A4 </fl><fr>0BE5 34A4 </fr>
  OPERAND1 OPERAND->SLX <ok></ok><fl>0BE5 34A4 </fl><fr>0BE7 34A4 </fr>
  OVER >R <ok></ok><fl>0BE7 34A4 </fl><fr>0BE9 34A4 </fr>
  OPERAND2 OPERAND->SLX <ok></ok><fl>0BE9 34A4 </fl><fr>0BEB 34A4 </fr>
  OVER R> + 1+ <ok></ok><fl>0BEB 34A4 </fl><fr>0BEF 34A4 </fr>
  SPEICHERHOL <ok></ok><fl>0BEF 34A4 </fl><fr>0BF0 34A4 </fr>
  ; <ok></ok><fl>0BF0 34A4 </fl><fr>0BF1 34A4 </fr>
 <ok></ok>
77 88 2OPERANDEN->2SLX . . . . . . . <ok>1401 2F1A 0001 0000 2F19 0001 0000 </ok>
77 5800 2OPERANDEN->2SLX . . . . . . . <ok>1405 1801 0004 0000 2F19 0001 0000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="N+ N- N* N/MOD N."> 
: N+ ( x y --> z ) <ok></ok><fl>0BF1 34A4 </fl><fr>0BF5 34A7 </fr>
  2OPERANDEN->2SLX ADDIER SLX->ERGEBNIS ; <ok></ok><fl>0BF5 34A7 </fl><fr>0BF9 34A7 </fr>
: N- ( x y --> z ) <ok></ok><fl>0BF9 34A7 </fl><fr>0BFD 34AA </fr>
  MINUS N+ ; <ok></ok><fl>0BFD 34AA </fl><fr>0C00 34AA </fr>
: N* ( x y --> z ) <ok></ok><fl>0C00 34AA </fl><fr>0C04 34AD </fr>
  2OPERANDEN->2SLX SMUL SLX->ERGEBNIS ; <ok></ok><fl>0C04 34AD </fl><fr>0C08 34AD </fr>
 <ok></ok>
 <ok></ok>
IMMEDIATE: RECURSE LFA @ 4 + COMPILE, ; <ok></ok><fl>0C08 34AD </fl><fr>0C12 34B5 </fr>
: N/MOD ( x y --> r q ) <ok></ok><fl>0C12 34B5 </fl><fr>0C16 34BB </fr>
  DUP 0= IF 0 ERROR END_IF <ok></ok><fl>0C16 34BB </fl><fr>0C1B 34BB </fr>
  DUP OPERAND1 ! <ok></ok><fl>0C1B 34BB </fl><fr>0C1E 34BB </fr>
  OPERAND1 OPERAND->SLX  <ok></ok><fl>0C1E 34BB </fl><fr>0C20 34BB </fr>
  ROT DROP OVER + 1 - @ ( ly ty ) <ok></ok><fl>0C20 34BB </fl><fr>0C27 34BB </fr>
  SWAP 1 > IF <ok></ok><fl>0C27 34BB </fl><fr>0C2B 34BB </fr>
    1 BEGIN OVER 0LT NOT WHILE  <ok></ok><fl>0C2B 34BB </fl><fr>0C30 34BB </fr>
      SWAP DUP + SWAP DUP N+ REPEAT <ok></ok><fl>0C30 34BB </fl><fr>0C37 34BB </fr>
    SWAP DROP DUP SCHIEB ! <ok></ok><fl>0C37 34BB </fl><fr>0C3C 34BB </fr>
    ROT OVER N* <ok></ok><fl>0C3C 34BB </fl><fr>0C3F 34BB </fr>
    ROT ROT N* <ok></ok><fl>0C3F 34BB </fl><fr>0C42 34BB </fr>
    ELSE DROP 1 SCHIEB ! END_IF  <ok></ok><fl>0C42 34BB </fl><fr>0C47 34BB </fr>
  2OPERANDEN->2SLX SDIV <ok></ok><fl>0C47 34BB </fl><fr>0C49 34BB </fr>
  SLX->ERGEBNIS >R  <ok></ok><fl>0C49 34BB </fl><fr>0C4B 34BB </fr>
  SLX->ERGEBNIS R> <ok></ok><fl>0C4B 34BB </fl><fr>0C4D 34BB </fr>
  SCHIEB @ 1 - IF  <ok></ok><fl>0C4D 34BB </fl><fr>0C52 34BB </fr>
    SWAP SCHIEB @ RECURSE SWAP DROP <ok></ok><fl>0C52 34BB </fl><fr>0C58 34BB </fr>
    SWAP END_IF <ok></ok><fl>0C58 34BB </fl><fr>0C59 34BB </fr>
  ; <ok></ok><fl>0C59 34BB </fl><fr>0C5A 34BB </fr>
 <ok></ok>
: HG0. ( n -->  /hexstring/ ) <ok></ok><fl>0C5A 34BB </fl><fr>0C5E 34C0 </fr>
  0 >R <ok></ok><fl>0C5E 34C0 </fl><fr>0C60 34C0 </fr>
  SHL16 DUP IF DIG EMIT R> DROP -1 >R ELSE DROP END_IF <ok></ok><fl>0C60 34C0 </fl><fr>0C6B 34C0 </fr>
  SHL16 DUP R OR IF DIG EMIT R> DROP -1 >R ELSE DROP END_IF <ok></ok><fl>0C6B 34C0 </fl><fr>0C78 34C0 </fr>
  SHL16 DUP R OR IF DIG EMIT ELSE DROP END_IF <ok></ok><fl>0C78 34C0 </fl><fr>0C81 34C0 </fr>
  SHL16 DIG EMIT DROP R> DROP ; <ok></ok><fl>0C81 34C0 </fl><fr>0C88 34C0 </fr>
 <ok></ok>
: N. ( n --> ) ( erstmal nur hexadezimale Ausgabe ) <ok></ok><fl>0C88 34C0 </fl><fr>0C8C 34C3 </fr>
  OPERAND1 ! <ok></ok><fl>0C8C 34C3 </fl><fr>0C8E 34C3 </fr>
  OPERAND1 OPERAND->SLX ( sx lx ax ) <ok></ok><fl>0C8E 34C3 </fl><fr>0C90 34C3 </fr>
  ROT IF ." -" END_IF <ok></ok><fl>0C90 34C3 </fl><fr>0C95 34C5 </fr>
  OVER +  <ok></ok><fl>0C95 34C5 </fl><fr>0C97 34C5 </fr>
  1 - DUP @ HG0. SWAP 1 - SWAP <ok></ok><fl>0C97 34C5 </fl><fr>0CA0 34C5 </fr>
  BEGIN OVER WHILE 1 - DUP @ HG. SWAP 1 - SWAP REPEAT DROP <ok></ok><fl>0CA0 34C5 </fl><fr>0CAD 34C5 </fr>
  DROP  <ok></ok><fl>0CAD 34C5 </fl><fr>0CAE 34C5 </fr>
  20 EMIT <ok></ok><fl>0CAE 34C5 </fl><fr>0CB0 34C5 </fr>
  ; <ok></ok><fl>0CB0 34C5 </fl><fr>0CB1 34C5 </fr>
 <ok></ok>
1111 1111 N* N. <ok>1234321 </ok>
 <ok></ok>
: NB. SWAP N. N. ; <ok></ok><fl>0CB1 34C5 </fl><fr>0CB9 34C9 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
7 3 N/MOD N. N.  <ok>2 1 </ok>
3333 DUP N* DUP N* 10 N* DUP N. <ok>68D9E840B77E910 </ok>
3333 DUP N* 10 N* DUP N. <ok>A3D5C290 </ok>
N/MOD NB. <ok>0 A3D5C29 </ok>
3333 DUP N* N. <ok>A3D5C29 </ok>
 <ok></ok>
1111 DUP N* 8 N* DUP N. <ok>91A1908 </ok>
1111 8 N* DUP N. <ok>8888 </ok>
N/MOD NB. <ok>0 1111 </ok>
 <ok></ok>
1111 DUP N* DUP N. <ok>1234321 </ok>
1111 DUP N. <ok>1111 </ok>
N/MOD NB. <ok>0 1111 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Zwischenergebnisse nicht unnötig speichern"> 
ZAHLENSPEICHER @ VARIABLE BLOCKANFANG <ok></ok><fl>0CB9 34C9 </fl><fr>0CBE 34D5 </fr>
ZAHLENSPEICHER @ VARIABLE BLOCKENDE <ok></ok><fl>0CBE 34D5 </fl><fr>0CC3 34DF </fr>
: NEBENRECHNUNG ( --> erg ) ERGEBNIS @ ; <ok></ok><fl>0CC3 34DF </fl><fr>0CCA 34ED </fr>
: HAUPTRECHNUNG ( erg --> ) ERGEBNIS ! ; <ok></ok><fl>0CCA 34ED </fl><fr>0CD1 34FB </fr>
: RECHENBLOCK BLOCKENDE @ BLOCKANFANG ! <ok></ok><fl>0CD1 34FB </fl><fr>0CD9 3507 </fr>
  ERGEBNIS @ BLOCKENDE ! ; <ok></ok><fl>0CD9 3507 </fl><fr>0CDE 3507 </fr>
: INIT ZAHLENSPEICHER @ ERGEBNIS ! RECHENBLOCK RECHENBLOCK ; <ok></ok><fl>0CDE 3507 </fl><fr>0CE9 350C </fr>
INIT <ok></ok>
 <ok></ok>
: A+0 ( a --> a+0 )  <ok></ok><fl>0CE9 350C </fl><fr>0CED 3510 </fr>
  DUP OPERAND1 ! <ok></ok><fl>0CED 3510 </fl><fr>0CF0 3510 </fr>
  OPERAND1 OPERAND->SLX <ok></ok><fl>0CF0 3510 </fl><fr>0CF2 3510 </fr>
  DUP OPERAND1 - DROP 1 IF <ok></ok><fl>0CF2 3510 </fl><fr>0CF8 3510 </fr>
    OVER ERGEBNIS @ 1+ SWAP MOVE ( SPEICHERHOL will hier nicht gehen ) <ok></ok><fl>0CF8 3510 </fl><fr>0CFE 3510 </fr>
    ERGEBNIS @ 1+ OVER 1+ ERGEBNIS +! ( noch nicht ganz ) <ok></ok><fl>0CFE 3510 </fl><fr>0D05 3510 </fr>
    ERGEBNIS @ SPEICHERENDE @ LT NOT IF 0369 ERROR END_IF ( da ist es passiert ) <ok></ok><fl>0D05 3510 </fl><fr>0D0E 3510 </fr>
    SLX->ERGEBNIS SWAP DROP <ok></ok><fl>0D0E 3510 </fl><fr>0D11 3510 </fr>
    ELSE 2DROP DROP END_IF <ok></ok><fl>0D11 3510 </fl><fr>0D14 3510 </fr>
  ; <ok></ok><fl>0D14 3510 </fl><fr>0D15 3510 </fr>
: B+0 ( a b --> a+0 b+0 ) <ok></ok><fl>0D15 3510 </fl><fr>0D19 3514 </fr>
  SWAP A+0 SWAP A+0 ; <ok></ok><fl>0D19 3514 </fl><fr>0D1E 3514 </fr>
</sekt> 
 <ok></ok>
 <ok></ok>
 <ok></ok>
<sekt inhalt="Anwenden in N/ NMOD NGGT NBK..."> 
: N/ ( b d --> q ) <ok></ok><fl>0D1E 3514 </fl><fr>0D22 3517 </fr>
  NEBENRECHNUNG ROT ROT  <ok></ok><fl>0D22 3517 </fl><fr>0D25 3517 </fr>
  N/MOD SWAP DROP <ok></ok><fl>0D25 3517 </fl><fr>0D28 3517 </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0D28 3517 </fl><fr>0D2B 3517 </fr>
  ; <ok></ok><fl>0D2B 3517 </fl><fr>0D2C 3517 </fr>
: NMOD ( b d --> r )  <ok></ok><fl>0D2C 3517 </fl><fr>0D30 351C </fr>
  NEBENRECHNUNG ROT ROT  <ok></ok><fl>0D30 351C </fl><fr>0D33 351C </fr>
  N/MOD DROP  <ok></ok><fl>0D33 351C </fl><fr>0D35 351C </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0D35 351C </fl><fr>0D38 351C </fr>
  ; <ok></ok><fl>0D38 351C </fl><fr>0D39 351C </fr>
 <ok></ok>
: NGGT ( a b --> ggt ) <ok></ok><fl>0D39 351C </fl><fr>0D3D 3521 </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D3D 3521 </fl><fr>0D40 3521 </fr>
  BEGIN DUP WHILE <ok></ok><fl>0D40 3521 </fl><fr>0D42 3521 </fr>
    SWAP OVER NMOD REPEAT DROP  <ok></ok><fl>0D42 3521 </fl><fr>0D47 3521 </fr>
  SWAP HAUPTRECHNUNG A+0 ; <ok></ok><fl>0D47 3521 </fl><fr>0D4B 3521 </fr>
: NBK ( a b --> a/ggt b/ggt )  <ok></ok><fl>0D4B 3521 </fl><fr>0D4F 3525 </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D4F 3525 </fl><fr>0D52 3525 </fr>
  2DUP NGGT ROT OVER N/ ROT ROT N/  <ok></ok><fl>0D52 3525 </fl><fr>0D5A 3525 </fr>
  ROT HAUPTRECHNUNG B+0 ; <ok></ok><fl>0D5A 3525 </fl><fr>0D5E 3525 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
777 99 NBK NB. <ok>27D 33 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( je einmal N* und N+ in NNUMBER ) <ok></ok>
: NNUMBER ( baddr n --> a faddr ) <ok></ok><fl>0D5E 3525 </fl><fr>0D62 352D </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D62 352D </fl><fr>0D65 352D </fr>
  7 LOCAL ( L3 L4 nicht verwendet <ok></ok><fl>0D65 352D </fl><fr>0D67 352D </fr>
  L1 ! L0 ! <ok></ok><fl>0D67 352D </fl><fr>0D6B 352D </fr>
  0 L1 @ IF <ok></ok><fl>0D6B 352D </fl><fr>0D6F 352D </fr>
    DUP L2 ! 1 L5 ! ( Vorzeichen ) <ok></ok><fl>0D6F 352D </fl><fr>0D75 352D </fr>
    BEGIN ( M23 Vorzeichen gucken ) <ok></ok><fl>0D75 352D </fl><fr>0D75 352D </fr>
      -1 L6 !  <ok></ok><fl>0D75 352D </fl><fr>0D78 352D </fr>
      L0 @ L2 @ + C@ <ok></ok><fl>0D78 352D </fl><fr>0D7E 352D </fr>
      2B ( 43 2B ) = IF L2 @ 1+ L2 ! 0 L6 ! ELSE <ok></ok><fl>0D7E 352D </fl><fr>0D8A 352D </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>0D8A 352D </fl><fr>0D90 352D </fr>
        2D ( 45 2D ) = IF L2 @ 1+ L2 ! <ok></ok><fl>0D90 352D </fl><fr>0D98 352D </fr>
          0 L6 ! <ok></ok><fl>0D98 352D </fl><fr>0D9B 352D </fr>
          L5 @ MINUS L5 ! END_IF <ok></ok><fl>0D9B 352D </fl><fr>0DA0 352D </fr>
        END_IF <ok></ok><fl>0DA0 352D </fl><fr>0DA0 352D </fr>
      L6 @ UNTIL <ok></ok><fl>0DA0 352D </fl><fr>0DA3 352D </fr>
    L2 @ L1 @ LT IF <ok></ok><fl>0DA3 352D </fl><fr>0DA9 352D </fr>
      BEGIN <ok></ok><fl>0DA9 352D </fl><fr>0DA9 352D </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>0DA9 352D </fl><fr>0DAF 352D </fr>
        DUP IF ( oo L1 auf Bytes ) <ok></ok><fl>0DAF 352D </fl><fr>0DB1 352D </fr>
          DIGIT NOT IF DROP L1 @ MINUS L1 ! ELSE <ok></ok><fl>0DB1 352D </fl><fr>0DBB 352D </fr>
            SWAP BASE @ N* N+ <ok></ok><fl>0DBB 352D </fl><fr>0DC0 352D </fr>
            L2 @ 1+ L2 !  <ok></ok><fl>0DC0 352D </fl><fr>0DC5 352D </fr>
            END_IF <ok></ok><fl>0DC5 352D </fl><fr>0DC5 352D </fr>
          ELSE DROP L2 @ L1 ! END_IF <ok></ok><fl>0DC5 352D </fl><fr>0DCB 352D </fr>
        L2 @ L1 @ LT NOT UNTIL <ok></ok><fl>0DCB 352D </fl><fr>0DD2 352D </fr>
      END_IF ( M19 ) <ok></ok><fl>0DD2 352D </fl><fr>0DD2 352D </fr>
    END_IF ( M19 ) <ok></ok><fl>0DD2 352D </fl><fr>0DD2 352D </fr>
  L5 @ 0LT IF MINUS END_IF <ok></ok><fl>0DD2 352D </fl><fr>0DD7 352D </fr>
  L2 @ L1 @ - ( oo noch kein fadr !!!!!!!!!!!! siehe NNUMBER ) <ok></ok><fl>0DD7 352D </fl><fr>0DDC 352D </fr>
  DUP IF DROP L0 @ L2 @ + END_IF ( jetzt faddr ) <ok></ok><fl>0DDC 352D </fl><fr>0DE4 352D </fr>
  END_LOCAL <ok></ok><fl>0DE4 352D </fl><fr>0DE5 352D </fr>
  ROT HAUPTRECHNUNG SWAP A+0 SWAP <ok></ok><fl>0DE5 352D </fl><fr>0DEA 352D </fr>
  ; <ok></ok><fl>0DEA 352D </fl><fr>0DEB 352D </fr>
 <ok></ok>
22 WORD: N" ( /number/  --> n ) NNUMBER DROP ; <ok></ok><fl>0DEB 352D </fl><fr>0DF3 3530 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( REPLACE: NUMBER NNUMBER ; <ok></ok>
 <ok></ok>
N" 111111111111111" DUP N* DUP N. DUP . <ok>123456789ABCDEFEDCBA987654321 5409 </ok>
N" 111111111111111" DUP N. DUP . <ok>111111111111111 5413 </ok>
N/MOD OVER . DUP . NB. <ok>0000 544B 0 111111111111111 </ok>
 <ok></ok>
N" 0026D4346A00" DUP N. <ok>26D4346A00 </ok>
N" 00000FC82800" DUP N. <ok>FC82800 </ok>
2DUP N/MOD NB. <ok>D6A2200 275 </ok>
2DUP NBK NB.  <ok>3135 14 </ok>
( richtig wäre D6A2200 275 bei N/MOD ) <ok></ok>
( richtig wäre 3135 14 bei NBK ) <ok></ok>
 <ok></ok>
N" 00A7426290A8C945E959A780" DUP N. <ok>A7426290A8C945E959A780 </ok>
N" 000002330657FDD698" DUP N. <ok>2330657FDD698 </ok>
N/MOD NB.  <ok>158B5843D5ED0 4C0CF598D2 </ok>
( richtig wäre 158B5843D5ED0 4C0CF598D2 ) <ok></ok>
( und nicht   0325AF2C3F8838 4C0CF598D3 ) <ok></ok>
 <ok></ok>
( als vorlaeufigen Abschluss nochmal ) <ok></ok>
" 111111111111111" NNUMBER DROP DUP N* N. <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
N" 000002330657FDD698" N" 4C0CF598D3" N* N. <ok>A7426290A9A396BD1A1F48 </ok>
N" 000002330657FDD698" N" 4C0CF598D2" N* N. <ok>A7426290A77090651C48B0 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: N^ ( a n --> a^n ) <ok></ok><fl>0DF3 3530 </fl><fr>0DF7 3533 </fr>
  NEBENRECHNUNG ROT ROT ( erg a n ) <ok></ok><fl>0DF7 3533 </fl><fr>0DFA 3533 </fr>
  4 LOCAL <ok></ok><fl>0DFA 3533 </fl><fr>0DFC 3533 </fr>
  DUP 0LT IF 12 ERROR END_IF     <ok></ok><fl>0DFC 3533 </fl><fr>0E01 3533 </fr>
  2           ( a n 2 )         <ok></ok><fl>0E01 3533 </fl><fr>0E02 3533 </fr>
  L3 ! L2 ! L1 !    (  R1-3: a  n  2 ) <ok></ok><fl>0E02 3533 </fl><fr>0E08 3533 </fr>
  1           ( p=1          a  n  2 ) <ok></ok><fl>0E08 3533 </fl><fr>0E09 3533 </fr>
  BEGIN       ( p            a  n  2 ) <ok></ok><fl>0E09 3533 </fl><fr>0E09 3533 </fr>
    L2 @ L3 @ ( p n 2        a  n  2 ) <ok></ok><fl>0E09 3533 </fl><fr>0E0D 3533 </fr>
    /MOD      ( p r n/2      a  n  2 ) <ok></ok><fl>0E0D 3533 </fl><fr>0E0E 3533 </fr>
    L2 !      ( p r          a n/2 2 ) <ok></ok><fl>0E0E 3533 </fl><fr>0E10 3533 </fr>
    IF        ( p            a n/2 2 ) <ok></ok><fl>0E10 3533 </fl><fr>0E11 3533 </fr>
      L1 @    ( p a          a n/2 2 ) <ok></ok><fl>0E11 3533 </fl><fr>0E13 3533 </fr>
      N*      ( p*a          a n/2 2 ) <ok></ok><fl>0E13 3533 </fl><fr>0E14 3533 </fr>
      END_IF  ( p*a          a n/2 2 ) <ok></ok><fl>0E14 3533 </fl><fr>0E14 3533 </fr>
    L2 @      ( p*a n/2      a n/2 2 ) <ok></ok><fl>0E14 3533 </fl><fr>0E16 3533 </fr>
    WHILE     ( p*a          a n/2 2 ) <ok></ok><fl>0E16 3533 </fl><fr>0E17 3533 </fr>
      L1 @    ( p*a a        a n/2 2 ) <ok></ok><fl>0E17 3533 </fl><fr>0E19 3533 </fr>
      L1 @    ( p*a a a      a n/2 2 ) <ok></ok><fl>0E19 3533 </fl><fr>0E1B 3533 </fr>
      N*      ( p*a a*a      a n/2 2 ) <ok></ok><fl>0E1B 3533 </fl><fr>0E1C 3533 </fr>
      L1 !    ( p*a        a*a n/2 2 ) <ok></ok><fl>0E1C 3533 </fl><fr>0E1E 3533 </fr>
      REPEAT  ( p*a        a*a n/2 2 ) <ok></ok><fl>0E1E 3533 </fl><fr>0E1F 3533 </fr>
  END_LOCAL   ( a^n ) <ok></ok><fl>0E1F 3533 </fl><fr>0E20 3533 </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0E20 3533 </fl><fr>0E23 3533 </fr>
  ;           ( a^n ) <ok></ok><fl>0E23 3533 </fl><fr>0E24 3533 </fr>
 <ok></ok>
 <ok></ok>
3333 2 N^ 10 N* N. <ok>A3D5C290 </ok>
1111 2 N^ N. <ok>1234321 </ok>
 <ok></ok>
 <ok></ok>
10 20 N^ 10 10 N^ DUP -1 N+ SWAP 1 N+ N* N- N. <ok>1 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="nochmal N. für beliebige Zahlenbasis"> 
: N. ( a -->  /zahl/ ) <ok></ok><fl>0E24 3533 </fl><fr>0E28 3536 </fr>
  BASE @ 10 = IF N. ELSE <ok></ok><fl>0E28 3536 </fl><fr>0E2F 3536 </fr>
    NEBENRECHNUNG SWAP <ok></ok><fl>0E2F 3536 </fl><fr>0E31 3536 </fr>
    DUP 0LT IF MINUS ." -" END_IF <ok></ok><fl>0E31 3536 </fl><fr>0E38 3538 </fr>
    DUP 0= IF ." 0 " DROP ELSE <ok></ok><fl>0E38 3538 </fl><fr>0E40 353B </fr>
      -1 SWAP ( Stapelmarkierung ) <ok></ok><fl>0E40 353B </fl><fr>0E42 353B </fr>
      BEGIN DUP WHILE BASE @ N/MOD REPEAT DROP <ok></ok><fl>0E42 353B </fl><fr>0E49 353B </fr>
      BEGIN DUP 0LT NOT WHILE 30 + DUP 39 > IF 7 + END_IF EMIT REPEAT <ok></ok><fl>0E49 353B </fl><fr>0E57 353B </fr>
      20 EMIT DROP END_IF <ok></ok><fl>0E57 353B </fl><fr>0E5A 353B </fr>
    HAUPTRECHNUNG <ok></ok><fl>0E5A 353B </fl><fr>0E5B 353B </fr>
    END_IF <ok></ok><fl>0E5B 353B </fl><fr>0E5B 353B </fr>
  ; <ok></ok><fl>0E5B 353B </fl><fr>0E5C 353B </fr>
 <ok></ok>
: NB. SWAP N. N. ; <ok></ok><fl>0E5C 353B </fl><fr>0E64 353F </fr>
 <ok></ok>
777 99 NBK NB. <ok>27D 33 </ok>
INIT <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Array-Objekte"> 
: ZERLEG ( a --> adr i ) <ok></ok><fl>0E64 353F </fl><fr>0E68 3546 </fr>
  3FFF AND DUP 1+ SWAP @ ; <ok></ok><fl>0E68 3546 </fl><fr>0E6F 3546 </fr>
 <ok></ok>
N" 111111111111111" DUP N* DUP N. <ok>123456789ABCDEFEDCBA987654321 </ok>
DUP ZERLEG SWAP . . <ok>1406 0008 </ok>
 <ok></ok>
: OBJ? ( a --> flag ) <ok></ok><fl>0E6F 3546 </fl><fr>0E73 354B </fr>
  ABS DUP 4000 LT IF DROP 0 ELSE <ok></ok><fl>0E73 354B </fl><fr>0E7C 354B </fr>
    ZERLEG SWAP DROP 4000 LT IF 0 ELSE -1  <ok></ok><fl>0E7C 354B </fl><fr>0E86 354B </fr>
      END_IF END_IF <ok></ok><fl>0E86 354B </fl><fr>0E86 354B </fr>
  ; <ok></ok><fl>0E86 354B </fl><fr>0E87 354B </fr>
 <ok></ok>
: L ( a i -> b ) OVER OBJ? IF <ok></ok><fl>0E87 354B </fl><fr>0E8E 354D </fr>
    SWAP ZERLEG 3FFF AND ( i adr j ) <ok></ok><fl>0E8E 354D </fl><fr>0E92 354D </fr>
    ROT 2DUP ( adr j i j i ) <ok></ok><fl>0E92 354D </fl><fr>0E94 354D </fr>
    > IF SWAP DROP + @ ELSE 2DROP DROP 0 END_IF <ok></ok><fl>0E94 354D </fl><fr>0E9E 354D </fr>
    ELSE IF DROP 0 END_IF END_IF ; <ok></ok><fl>0E9E 354D </fl><fr>0EA3 354D </fr>
 <ok></ok>
: G ( a i -> a i b ) 2DUP L ; <ok></ok><fl>0EA3 354D </fl><fr>0EAA 354F </fr>
 <ok></ok>
: H ( a i b --> a' ) <ok></ok><fl>0EAA 354F </fl><fr>0EAE 3551 </fr>
  DUP >R <ok></ok><fl>0EAE 3551 </fl><fr>0EB0 3551 </fr>
  ROT ROT ( b a i ) <ok></ok><fl>0EB0 3551 </fl><fr>0EB2 3551 </fr>
  OVER OBJ? 0= OVER 0= AND R> OBJ? 0= AND IF 2DROP ELSE <ok></ok><fl>0EB2 3551 </fl><fr>0EBF 3551 </fr>
    OVER OBJ? 0= IF  <ok></ok><fl>0EBF 3551 </fl><fr>0EC3 3551 </fr>
      DUP 1+ SPEICHERHOL ( b a i addrneu ) <ok></ok><fl>0EC3 3551 </fl><fr>0EC6 3551 </fr>
      ROT OVER ! ( b i addrneu ) <ok></ok><fl>0EC6 3551 </fl><fr>0EC9 3551 </fr>
(      OVER 1+ OVER 1 - ! ( b i addrneu ( aha, macht schon SPEICHERHOL ) <ok></ok><fl>0EC9 3551 </fl><fr>0EC9 3551 </fr>
      4000 OVER 1 - +! ( das ist jetzt neu fuer OBJ? ) <ok></ok><fl>0EC9 3551 </fl><fr>0ECF 3551 </fr>
      DUP >R + ! R> ( addrneu ) <ok></ok><fl>0ECF 3551 </fl><fr>0ED4 3551 </fr>
      1 - 4000 + <ok></ok><fl>0ED4 3551 </fl><fr>0ED9 3551 </fr>
      ELSE <ok></ok><fl>0ED9 3551 </fl><fr>0EDA 3551 </fr>
        OVER                 ( b a i a ) <ok></ok><fl>0EDA 3551 </fl><fr>0EDB 3551 </fr>
        ZERLEG 3FFF AND      ( b a i addr j ) <ok></ok><fl>0EDB 3551 </fl><fr>0EDE 3551 </fr>
        ROT                  ( b a addr j i ) <ok></ok><fl>0EDE 3551 </fl><fr>0EDF 3551 </fr>
        2DUP > IF SWAP DROP ROT >R + ! R> ELSE <ok></ok><fl>0EDF 3551 </fl><fr>0EEA 3551 </fr>
          DUP 1+ SPEICHERHOL ( b a addr j i addrneu ) <ok></ok><fl>0EEA 3551 </fl><fr>0EED 3551 </fr>
          SWAP >R DUP >R     ( b a addr j addrneu      addrneu i ) <ok></ok><fl>0EED 3551 </fl><fr>0EF1 3551 </fr>
          SWAP MOVE DROP R>  ( b addrneu            i ) <ok></ok><fl>0EF1 3551 </fl><fr>0EF5 3551 </fr>
(          R 1+ OVER 1 - !    ( b addrneu                i ) <ok></ok><fl>0EF5 3551 </fl><fr>0EF5 3551 </fr>
          4000 OVER 1 - +!   ( das ist jetzt neu fuer OBJ? ) <ok></ok><fl>0EF5 3551 </fl><fr>0EFB 3551 </fr>
          SWAP OVER R> + !   ( addrneu ) <ok></ok><fl>0EFB 3551 </fl><fr>0F00 3551 </fr>
          1 - 4000 +         ( a' ) <ok></ok><fl>0F00 3551 </fl><fr>0F05 3551 </fr>
          END_IF <ok></ok><fl>0F05 3551 </fl><fr>0F05 3551 </fr>
        ZERLEG 3FFF AND      ( adr l ) <ok></ok><fl>0F05 3551 </fl><fr>0F08 3551 </fr>
        BEGIN 2DUP + 1 - @ 0= OVER 1 > AND WHILE 1 - REPEAT ( adr lneu ) <ok></ok><fl>0F08 3551 </fl><fr>0F16 3551 </fr>
        OVER @ OBJ? 0= OVER 1 = AND IF DROP @ ELSE <ok></ok><fl>0F16 3551 </fl><fr>0F22 3551 </fr>
          SWAP 1 - SWAP      ( addr-1 lneu ) <ok></ok><fl>0F22 3551 </fl><fr>0F26 3551 </fr>
          4000 + OVER ! 4000 + <ok></ok><fl>0F26 3551 </fl><fr>0F2E 3551 </fr>
          END_IF   <ok></ok><fl>0F2E 3551 </fl><fr>0F2E 3551 </fr>
        END_IF <ok></ok><fl>0F2E 3551 </fl><fr>0F2E 3551 </fr>
    END_IF <ok></ok><fl>0F2E 3551 </fl><fr>0F2E 3551 </fr>
  ; <ok></ok><fl>0F2E 3551 </fl><fr>0F2F 3551 </fr>
   <ok></ok>
: O. ( obj --> ) <ok></ok><fl>0F2F 3551 </fl><fr>0F33 3554 </fr>
  DUP OBJ? IF <ok></ok><fl>0F33 3554 </fl><fr>0F36 3554 </fr>
    ." [ " <ok></ok><fl>0F36 3554 </fl><fr>0F39 3557 </fr>
    ZERLEG 3FFF AND OVER + SWAP ( eadr+1 aadr ) <ok></ok><fl>0F39 3557 </fl><fr>0F3F 3557 </fr>
    BEGIN 2DUP > WHILE DUP @ RECURSE 1 + REPEAT 2DROP <ok></ok><fl>0F3F 3557 </fl><fr>0F49 3557 </fr>
     ." ] " <ok></ok><fl>0F49 3557 </fl><fr>0F4C 355A </fr>
    ELSE N. END_IF <ok></ok><fl>0F4C 355A </fl><fr>0F4E 355A </fr>
  ; <ok></ok><fl>0F4E 355A </fl><fr>0F4F 355A </fr>
 <ok></ok>
7 DUP O. <ok>7 </ok>
2 9 H DUP O. <ok>[ 7 0 9 ] </ok>
3 11 H DUP O. <ok>[ 7 0 9 11 ] </ok>
1 4 1 6 H H DUP O. <ok>[ 7 [ 4 6 ] 9 11 ] </ok>
1 G 2 88 H H DUP O.  <ok>[ 7 [ 4 6 88 ] 9 11 ] </ok>
1 G 2 0 H H DUP O. <ok>[ 7 [ 4 6 ] 9 11 ] </ok>
0 G 2 1987 H H DUP O. <ok>[ [ 7 0 1987 ] [ 4 6 ] 9 11 ] </ok>
1 0 H DUP O. <ok>[ [ 7 0 1987 ] 0 9 11 ] </ok>
3 0 H DUP O. <ok>[ [ 7 0 1987 ] 0 9 ] </ok>
2 0 H DUP O. <ok>[ [ 7 0 1987 ] ] </ok>
2 2444 H DUP O. <ok>[ [ 7 0 1987 ] 0 2444 ] </ok>
0 N" 7777777" H DUP O. <ok>[ 7777777 0 2444 ] </ok>
2 0 H DUP O. <ok>7777777 </ok>
 <ok></ok>
 <ok></ok>
0 <ok></ok>
0 0 0 1 H 1 2 H 2 5 H H DUP O. <ok>[ [ 1 2 5 ] ] </ok>
1 0 0 3 H 1 4 H 2 8 H H DUP O. <ok>[ [ 1 2 5 ] [ 3 4 8 ] ] </ok>
2 0 0 9 H 1 2 H 2 1 H H CR DUP O. <ok>
[ [ 1 2 5 ] [ 3 4 8 ] [ 9 2 1 ] ] </ok>
 <ok></ok>
0 1 4 H DUP O. <ok>[ 0 4 ] </ok>
0 0 0 1 4 H H O. <ok>[ [ 0 4 ] ] </ok>
 <ok></ok>
0  <ok></ok>
0 0 0 60 H 1 30 H 2 20 H H DUP O. <ok>[ [ 60 30 20 ] ] </ok>
1 0 0 30 H 1 20 H 2 15 H H DUP O. <ok>[ [ 60 30 20 ] [ 30 20 15 ] ] </ok>
2 0 0 20 H 1 15 H 2 12 H H CR DUP O. <ok>
[ [ 60 30 20 ] [ 30 20 15 ] [ 20 15 12 ] ] </ok>
 <ok></ok>
0 VARIABLE SPMERK <ok></ok><fl>0F4F 355A </fl><fr>0F54 3561 </fr>
: [ ( ---> spmerk ) <ok></ok><fl>0F54 3561 </fl><fr>0F58 3563 </fr>
  SPMERK @ SP @ SPMERK ! <ok></ok><fl>0F58 3563 </fl><fr>0F5E 3563 </fr>
  ; <ok></ok><fl>0F5E 3563 </fl><fr>0F5F 3563 </fr>
 <ok></ok>
: ] ( spmerk a b c d ... z --> matrix ) <ok></ok><fl>0F5F 3563 </fl><fr>0F63 3565 </fr>
  0 BEGIN SP @ 1 - SPMERK @ - WHILE <ok></ok><fl>0F63 3565 </fl><fr>0F6C 3565 </fr>
    SP @ 2 - SPMERK @ - ROT H REPEAT <ok></ok><fl>0F6C 3565 </fl><fr>0F76 3565 </fr>
  SWAP SPMERK ! <ok></ok><fl>0F76 3565 </fl><fr>0F79 3565 </fr>
  ; <ok></ok><fl>0F79 3565 </fl><fr>0F7A 3565 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Matrix invertieren"> 
: OBJ+0 ( obj --> obj+0 ) <ok></ok><fl>0F7A 3565 </fl><fr>0F7E 356B </fr>
  DUP OBJ? IF DUP >R <ok></ok><fl>0F7E 356B </fl><fr>0F83 356B </fr>
    ZERLEG 3FFF AND          ( adr n ) <ok></ok><fl>0F83 356B </fl><fr>0F86 356B </fr>
    SWAP OVER + -1 + SWAP    ( eadr-1 n ) <ok></ok><fl>0F86 356B </fl><fr>0F8C 356B </fr>
      BEGIN DUP WHILE SWAP   ( n eadr-1 ) <ok></ok><fl>0F8C 356B </fl><fr>0F8F 356B </fr>
        DUP @ RECURSE OVER ! ( n eadr-1 ) <ok></ok><fl>0F8F 356B </fl><fr>0F94 356B </fr>
        -1 + SWAP -1 +       ( eadr-1 n-1 ) <ok></ok><fl>0F94 356B </fl><fr>0F99 356B </fr>
        REPEAT               ( adr-1 0 ) <ok></ok><fl>0F99 356B </fl><fr>0F9A 356B </fr>
    2DROP R>                 ( obj ) <ok></ok><fl>0F9A 356B </fl><fr>0F9C 356B </fr>
    ELSE A+0 END_IF <ok></ok><fl>0F9C 356B </fl><fr>0F9E 356B </fr>
  ; <ok></ok><fl>0F9E 356B </fl><fr>0F9F 356B </fr>
 <ok></ok>
[ 12 18 1B ] OBJ+0 O. <ok>[ 12 18 1B ] </ok>
 <ok></ok>
: OBJDUMP ( obj --> ) <ok></ok><fl>0F9F 356B </fl><fr>0FA3 3573 </fr>
  DUP OBJ? IF <ok></ok><fl>0FA3 3573 </fl><fr>0FA6 3573 </fr>
    ZERLEG 3FFF AND                ( adr n ) <ok></ok><fl>0FA6 3573 </fl><fr>0FA9 3573 </fr>
      BEGIN DUP WHILE SWAP         ( n adr ) <ok></ok><fl>0FA9 3573 </fl><fr>0FAC 3573 </fr>
        CR OVER . DUP . DUP @  <ok></ok><fl>0FAC 3573 </fl><fr>0FB3 3573 </fr>
        DUP . DUP ABS 4000 LT IF -1 . -1 . ELSE DUP ABS ZERLEG . . END_IF <ok></ok><fl>0FB3 3573 </fl><fr>0FC5 3573 </fr>
        DUP O. RECURSE             ( n adr ) <ok></ok><fl>0FC5 3573 </fl><fr>0FC8 3573 </fr>
        1 + SWAP -1 +              ( adr+1 n-1 ) <ok></ok><fl>0FC8 3573 </fl><fr>0FCD 3573 </fr>
        REPEAT                     ( adr+n 0 ) <ok></ok><fl>0FCD 3573 </fl><fr>0FCE 3573 </fr>
    2DROP                          ( ) <ok></ok><fl>0FCE 3573 </fl><fr>0FCF 3573 </fr>
    ELSE DROP END_IF <ok></ok><fl>0FCF 3573 </fl><fr>0FD1 3573 </fr>
  ; <ok></ok><fl>0FD1 3573 </fl><fr>0FD2 3573 </fr>
 <ok></ok>
[ 12 18 1B ] OBJDUMP <ok>
0003 1479 0012 FFFF FFFF 12 
0002 147A 0018 FFFF FFFF 18 
0001 147B 001B FFFF FFFF 1B </ok>
[ [ 12 18 1B ] [ 1E 21 24 ] ] OBJDUMP <ok>
0002 1485 547C 4003 147D [ 12 18 1B ] 
0003 147D 0012 FFFF FFFF 12 
0002 147E 0018 FFFF FFFF 18 
0001 147F 001B FFFF FFFF 1B 
0001 1486 5480 4003 1481 [ 1E 21 24 ] 
0003 1481 001E FFFF FFFF 1E 
0002 1482 0021 FFFF FFFF 21 
0001 1483 0024 FFFF FFFF 24 </ok>
 <ok></ok>
: INVERTIEREN ( matrix dim --> invmat nenner ) <ok></ok><fl>0FD2 3573 </fl><fr>0FD6 357F </fr>
  ( L0=nr L1=N L2=i L3=j L4=k L5=Y L6=Z L7=alternenner ) <ok></ok><fl>0FD6 357F </fl><fr>0FD6 357F </fr>
  8 LOCAL NEBENRECHNUNG L0 ! <ok></ok><fl>0FD6 357F </fl><fr>0FDB 357F </fr>
  L1 ! 1 ( mat nenner ) <ok></ok><fl>0FDB 357F </fl><fr>0FDE 357F </fr>
  L1 @ L2 ! BEGIN -1 L2 +! ( CR L2 ? ERGEBNIS ? <ok></ok><fl>0FDE 357F </fl><fr>0FE5 357F </fr>
    L7 ! ( mat ) 0 L5 ! 0 L6 ! <ok></ok><fl>0FE5 357F </fl><fr>0FED 357F </fr>
    DUP L2 @ L L2 @ L ( mat neuernenner ) <ok></ok><fl>0FED 357F </fl><fr>0FF4 357F </fr>
    L1 @ L3 ! BEGIN -1 L3 +! <ok></ok><fl>0FF4 357F </fl><fr>0FFB 357F </fr>
      OVER L3 @ L L2 @ L L5 @ L3 @ ROT H L5 ! <ok></ok><fl>0FFB 357F </fl><fr>100A 357F </fr>
      OVER L2 @ L L3 @ L L6 @ L3 @ ROT H L6 ! <ok></ok><fl>100A 357F </fl><fr>1019 357F </fr>
      L3 @ 0= UNTIL <ok></ok><fl>1019 357F </fl><fr>101D 357F </fr>
    L5 @ L2 @ L L7 @ N+ L5 @ L2 @ ROT H L5 ! <ok></ok><fl>101D 357F </fl><fr>102D 357F </fr>
    L6 @ L2 @ L L7 @ N- L6 @ L2 @ ROT H L6 ! <ok></ok><fl>102D 357F </fl><fr>103D 357F </fr>
    L1 @ L3 ! BEGIN -1 L3 +! <ok></ok><fl>103D 357F </fl><fr>1044 357F </fr>
      OVER L3 @ L ( mat nenner mat[L3] ) <ok></ok><fl>1044 357F </fl><fr>1048 357F </fr>
      L1 @ L4 ! BEGIN -1 L4 +! ( CR L3 ? L4 ? ERGEBNIS ? <ok></ok><fl>1048 357F </fl><fr>104F 357F </fr>
        NEBENRECHNUNG ROT ROT SWAP ( mat erg mat[L3] nenner ) <ok></ok><fl>104F 357F </fl><fr>1053 357F </fr>
        OVER L4 @ L OVER N* <ok></ok><fl>1053 357F </fl><fr>1059 357F </fr>
        L5 @ L3 @ L L6 @ L4 @ L N* N- <ok></ok><fl>1059 357F </fl><fr>1065 357F </fr>
        L7 @ N/ ( mat erg mat[L3] nenner bijneu ) <ok></ok><fl>1065 357F </fl><fr>1068 357F </fr>
        2SWAP SWAP ( mat nenner bijneu mat[L3] erg ) <ok></ok><fl>1068 357F </fl><fr>106A 357F </fr>
        HAUPTRECHNUNG SWAP A+0 ( mat nenner mat[L3] bijneu+0 ) <ok></ok><fl>106A 357F </fl><fr>106D 357F </fr>
        SWAP L4 @ ROT H ( mat nenner mat[L3]neu ) <ok></ok><fl>106D 357F </fl><fr>1072 357F </fr>
        L4 @ 0= UNTIL <ok></ok><fl>1072 357F </fl><fr>1076 357F </fr>
      ROT L3 @ ROT H SWAP ( matneu nenner ) <ok></ok><fl>1076 357F </fl><fr>107C 357F </fr>
      L3 @ 0= UNTIL <ok></ok><fl>107C 357F </fl><fr>1080 357F </fr>
    A+0 ( verschiebt nenner hinter matneu ) <ok></ok><fl>1080 357F </fl><fr>1081 357F </fr>
    ( RECHENBLOCK ) <ok></ok><fl>1081 357F </fl><fr>1081 357F </fr>
    ( CR ." vor 1. OBJ+0 " ERGEBNIS ? ( OVER OBJDUMP DUP N. DUP ABS . <ok></ok><fl>1081 357F </fl><fr>1081 357F </fr>
    L0 @ HAUPTRECHNUNG SWAP OBJ+0 SWAP A+0 <ok></ok><fl>1081 357F </fl><fr>1088 357F </fr>
    ( ." nach 1. OBJ+0 " ERGEBNIS ? ( OVER OBJDUMP DUP N. DUP ABS . <ok></ok><fl>1088 357F </fl><fr>1088 357F </fr>
    L2 @ 0= UNTIL <ok></ok><fl>1088 357F </fl><fr>108C 357F </fr>
  END_LOCAL <ok></ok><fl>108C 357F </fl><fr>108D 357F </fr>
  ; <ok></ok><fl>108D 357F </fl><fr>108E 357F </fr>
 <ok></ok>
( so und jetzt anwenden ) <ok></ok>
 <ok></ok>
[ [ 3C 1E 14 ] ( dezimal 60 30 20 ) <ok></ok>
  [ 1E 14 0F ] ( dezimal 30 20 15 ) <ok></ok>
  [ 14 0F 0C ] ( dezimal 20 15 12 ) <ok></ok>
  ] 3 <ok></ok>
OVER O. DUP . <ok>[ [ 3C 1E 14 ] [ 1E 14 F ] [ 14 F C ] ] 0003 </ok>
INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ F -3C 32 ] [ -3C 140 -12C ] [ 32 -12C 12C ] ] 64 </ok>
( herauskommen muss dabei ) <ok></ok>
(             [ [ F -3C 32 ] [ -3C 140 -12C ] [ 32 -12C 12C ] ] 0064 ) <ok></ok>
( dezimal        15 -60 ...                                      100 ) <ok></ok>
 <ok></ok>
 <ok></ok>
( paar Vandermonde-Matrizen invertieren: ) <ok></ok>
INIT <ok></ok>
[ [ 1 1 1 1 ] <ok></ok>
  [ 2 1 N^ 2 2 N^ 2 3 N^ 2 4 N^ ] <ok></ok>
  [ 3 1 N^ 3 2 N^ 3 3 N^ 3 4 N^ ] <ok></ok>
  [ 4 1 N^ 4 2 N^ 4 3 N^ 4 4 N^ ] <ok></ok>
  ] <ok></ok>
4 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 </ok>
ERGEBNIS ? <ok>1453 </ok>
( herauskommen soll [ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] ) <ok></ok>
 <ok></ok>
INIT <ok></ok>
[ [ 1 1 1 1 1 ] <ok></ok>
  [ 2 1 N^ 2 2 N^ 2 3 N^ 2 4 N^ 2 5 N^ ] <ok></ok>
  [ 3 1 N^ 3 2 N^ 3 3 N^ 3 4 N^ 3 5 N^ ] <ok></ok>
  [ 4 1 N^ 4 2 N^ 4 3 N^ 4 4 N^ 4 5 N^ ] <ok></ok>
  [ 5 1 N^ 5 2 N^ 5 3 N^ 5 4 N^ 5 5 N^ ] <ok></ok>
  ] <ok></ok>
5 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 </ok>
ERGEBNIS ? <ok>148A </ok>
( herauskommen soll  [ [ 2A300 -2A300 ... ] ] 8700 ) <ok></ok>
 <ok></ok>
: VANDERMONDEMATRIX ( n --> mat ) <ok></ok><fl>108E 357F </fl><fr>1092 3591 </fr>
  3 LOCAL <ok></ok><fl>1092 3591 </fl><fr>1094 3591 </fr>
  L0 ! <ok></ok><fl>1094 3591 </fl><fr>1096 3591 </fr>
  0  <ok></ok><fl>1096 3591 </fl><fr>1097 3591 </fr>
  L0 @ L1 ! BEGIN L1 @ DUP WHILE 1 - L1 ! <ok></ok><fl>1097 3591 </fl><fr>10A3 3591 </fr>
    L1 @ G <ok></ok><fl>10A3 3591 </fl><fr>10A6 3591 </fr>
    L0 @ L2 ! BEGIN L2 @ DUP WHILE 1 - L2 ! <ok></ok><fl>10A6 3591 </fl><fr>10B2 3591 </fr>
      L2 @ L1 @ 1 + L2 @ 1 + N^  <ok></ok><fl>10B2 3591 </fl><fr>10BD 3591 </fr>
      H <ok></ok><fl>10BD 3591 </fl><fr>10BE 3591 </fr>
      REPEAT DROP <ok></ok><fl>10BE 3591 </fl><fr>10C0 3591 </fr>
    H <ok></ok><fl>10C0 3591 </fl><fr>10C1 3591 </fr>
    REPEAT DROP <ok></ok><fl>10C1 3591 </fl><fr>10C3 3591 </fr>
  END_LOCAL <ok></ok><fl>10C3 3591 </fl><fr>10C4 3591 </fr>
  ; <ok></ok><fl>10C4 3591 </fl><fr>10C5 3591 </fr>
 <ok></ok>
( 4 VANDERMONDEMATRIX DUP O. <ok></ok>
 <ok></ok>
INIT <ok></ok>
4 VANDERMONDEMATRIX <ok></ok>
4 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 </ok>
ERGEBNIS ? <ok>145B </ok>
( herauskommen soll [ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 <ok></ok>
( gekürzt [ [ 60 -48 20 -6 ] [ -68 72 -38 B ] [ 24 -30 1C -6 ] [ -4 6 -4 1 ] ] 18 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
5 VANDERMONDEMATRIX <ok></ok>
5 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 </ok>
ERGEBNIS ? <ok>1494 </ok>
( herauskommen soll [ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 <ok></ok>
( gekürzt [ [ 258 -258 190 -96 18 ] [ -302 42E -30C 131 -32 ] ... [ 5 -A A -5 1 ] ] 78 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
6 VANDERMONDEMATRIX <ok></ok>
6 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 8E62000 -B1FA800 9E34000 -58FD400 1C7A000 -3F4800 ] [ -CE74800 15B0EE00 -14EDD000 C3C6C00 -4012800 907E00 ] [ 72B2800 -E3E9500 F537000 -97C6B00 336A800 -76A700 ] [ -1EA6E00 43BB100 -4FC2C00 34E6300 -12C9600 2CD300 ] [ 3F4800 -964B00 BDD800 -867900 32A000 -7E900 ] [ -32A00 7E900 -A8C00 7E900 -32A00 8700 ] ] 17BB000 </ok>
ERGEBNIS ? <ok>14E7 </ok>
( herauskommen soll [ [ 8E62000 -B1FA800 9E34000 ... -32A00 8700 ] ] 17BB000 <ok></ok>
( gekürzt [ [ -10E0 1518 -12C0 A8C -360 78 ] ... [ 6 -F 14 -F 6 -1 ] ] -2D0 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
7 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>14A6 </ok>
7 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ CC65AF0000 -13298868000 154A9790000 -FF7F1AC000 7AA3690000 -2210F28000 42BDF0000 ] [ -1459356C000 281A9456000 -301BBE14000 25697808000 -12574BB4000 52A6ADE000 -A3848C000 ] [ CEFE230000 -1DE0593F000 277092A8000 -2040FF81000 104D98A0000 -4AFC775000 968A48000 ] [ -438629D000 ACC3A94000 -F72EC73000 D621620000 -708A45B000 21414E4000 -4421E5000 ] [ BF6B6B000 -20D97C2000 3215DE7000 -2DD3C02000 192F459000 -7B4986000 1038D5000 ] [ -11850F000 329CD6000 -511C29000 4DDD98000 -2CC5D1000 E467E000 -1F257000 ] [ A61D000 -1F257000 33E91000 -33E91000 1F257000 -A61D000 17BB000 ] ] 1D33190000 </ok>
ERGEBNIS ? <ok>1565 </ok>
( herauskommen soll [ [ CC65AF0000 -13298868000 ... 17BB000 ] ] 1D33190000  <ok></ok>
( gekürzt [ [ -89D0 CEB8 -E5B0 AC44 -52B0 16F8 -2D0 ]  ... [ -7 15 -23 23 -15 7 -1 ] ] -13B0 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
8 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>14DC </ok>
8 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 8FB77F0C000000 -FB811E55000000 14F56D31C000000 -13A6165EA400000 C9341844000000 -53D5B4C7000000 1487ED94000000 -23EDDFC300000 ] [ -F6E288E0800000 22DCCFEB3600000 -31F9FCC1E800000 307D897DAC80000 -1FA9A063D800000 D5E0E67E200000 -34DE03C3800000 5D28C602C0000 ] [ AE2823BBE00000 -1C9EC2EB7F80000 2CBE3A40D600000 -2D711339F600000 1E82356CEA00000 -D1F6139B880000 3498AA68200000 -5D9D9266C0000 ] [ -41ABAB79C00000 BEBC9341DC0000 -140F7ACCE000000 156DB085D760000 -EE217721C00000 68E7E0455C0000 -1ABF4E66800000 3041418090000 ] [ E58C320880000 -2CA977ED100000 4FB7C878A80000 -5952EFDA200000 4065E96AD80000 -1D3145CE700000 79C292BF80000 -DF8F37680000 ] [ -1D247F7380000 5F69773080000 -B272C64880000 D096C4D6C0000 -9C17A72480000 490E580C80000 -138FBB3F80000 24BA45720000 ] [ 1FEFE3580000 -6C9604F80000 D2C8DC780000 -FF7F1AC00000 C60281880000 -5FCFAA080000 1A764EA80000 -33196BC0000 ] [ -E998C80000 33196BC0000 -6632D780000 7FBF8D60000 -6632D780000 33196BC0000 -E998C80000 1D33190000 ] ] 11F6EFE1800000 </ok>
ERGEBNIS ? <ok>160F </ok>
( herauskommen soll [ [ 8FB77F0C000000 -FB811E55000000 ... 1D33190000 ] ] 11F6EFE1800000 <ok></ok>
( gekürzt [ [ 4EC00 -89D00 B7C00 -AC440 6E400 -2DF00 B400 -13B0 ] ... [ -( 1C -38 46 -38 1C -8 1 ] ] 9D80 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
9 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>151A </ok>
9 INVERTIEREN <ok></ok>
OVER O. DUP N. <okok>
ERGEBNIS ? <ok>16F5 </ok>
( herauskommen soll [ [ 37F3F5B381040000000 ... 11F6EFE1800000 ] ] 6378D13F1E40000000 <ok></ok>
( gekürzt [ [ 31D580 -63AB00 9B0A00 -AE6B40 8B8900 -4D8500 1C7A00 -63AB0 9D80 ] ... [ 9 -24 54 -7E 7E -54 24 -9 1 ] ] 58980 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0A VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>1562 </ok>
0A INVERTIEREN <ok></ok>
OVER O. DUP N. <okok>
ERGEBNIS ? <ok>1838 </ok>
( herauskommen soll [ [ D726B3E61B37C18000000000 ... 6378D13F1E40000000 ] ] 1583DECA35EBF9C000000000 <ok></ok>
( gekürzt [ [ -229B600 4DDD980 -8A6D800 B5AFB80 ... -D2 78 -2D A -1 ] ] -375F00 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0B VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>15B7 </ok>
0B INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2331530F3797CA8619C400000000000 -57FB4FA60AFB7A4F406A00000000000 AFF69F4C15F6F49E80D400000000000 -107F1EEF220F26EEDC13E00000000000 1279E534C9FC7D866720800000000000 -F659456A852689AAB45C00000000000 96D363F812D3AD1A254800000000000 -41FC7BBC883C9BBB704F80000000000 138D2E24E5FEFEBC473400000000000 -384EEB4B8C2610D68FA00000000000 4A750CD1E9FB539EE400000000000 ] [ -4715BAF84A661AABC5E780000000000 DDB3FB3FBF7CFFD50EF7C0000000000 -1D8BBBBB6D7F87DC488BD80000000000 2DB186D7BC6B39B3A9D36C0000000000 -3419B9862F0C659F4D99F00000000000 2BEE2814D77C02D6B54F680000000000 -1B1EDC0214EFD4FD2026700000000000 BF05AAD682B47A461557A0000000000 -38DEE638F5C60DB1745980000000000 A469CBB7A85F39D3F11C0000000000 -DA1535E7A4E4B2FDFB80000000000 ] [ 3DF8D857A5CFD1F64BFA60000000000 -DDCA72A7F8C84FAAA538D0000000000 1FBB4F752BE65753E2BD4E0000000000 -32F27357897E787F0DED060000000000 3B6F4EA254B36E4ED377CC0000000000 -32E4046F7FD841B87445960000000000 1FC4112BF8C79C62ADE94C0000000000 -E19A9EDB120E8C671EDC90000000000 4399FF5EF85D490D6EC8E0000000000 -C4732420BC4CC1A1514D0000000000 105AEE47CCB5F69A99660000000000 ] [ -1ED42C6791809466012A50000000000 791B528A0DE4D8116E3F50000000000 -126C4C54B2A702E0E1DC5D0000000000 1EC37D63BF8E11DB80ADF10000000000 -24D55F90B8E652E0B1681A0000000000 201E5C0112E47729A3B4740000000000 -1451C363CB46BBEF32AD120000000000 91CD150B2574EE602CC938000000000 -2C0B747C1F94144E3AFE10000000000 80D61D951278F6D059B30000000000 -AC8CB3AF4B44565D1F10000000000 ] [ 9B92E5EE41DE07CC04758000000000 -28D3B9AB1F19B82E2C7C7C000000000 68812EC73DF2E3BE67F658000000000 -B516334173EC2536A81CA8000000000 DEC5624D8C51FFD4EE0730000000000 -C63730BFAF9E9F19958FB8000000000 7F59C66E7097B516C936F0000000000 -39CF6792B7DA7D5D251BF4000000000 11A2974404F23EAE2C0678000000000 -33FFF4AEA0BE3BEF92F0C000000000 461C28503E2B6A27ADB8000000000 ] [ -209961347C25D9695CE34000000000 8FD0E47DE23BF1940F7A0000000000 -17F81BF871659521366EF4000000000 2AEF3487EC16C8435B9A70000000000 -363C91AF87B1A311704D28000000000 314A2C5495DC980316FEE0000000000 -2035E46BD086CB98C1E6C8000000000 ED34363BB4924B89CC4E8000000000 -49306FEFB61A9BE804424000000000 D9E083ECFBA2A2094A40000000000 -12823CBFF19F79AED2C4000000000 ] [ 49B7A728030D078528C4000000000 -151BB2E285BAAFEA2ED9C000000000 3A325FC090E8E0B74ADDC000000000 -6B4F9D44B42ED90F355A8000000000 8AFA2FAF623922C98D7E8000000000 -81018B5A0167BA78E40F8000000000 55D510F9CA88746A10178000000000 -281C9511A2903515EF674000000000 C89C2ECCD49A26399E14000000000 -25BE1F0D142D9934F7AC000000000 33CBC8C0949208F01EC000000000 ] [ -6F4328BA38054655D48000000000 20D0092CF28BE678D850000000000 -5CF941D4913E1D186448000000000 AFCA6BB09068CD2217F0000000000 -E8E958E709862E603AD0000000000 DCAED5A434C8E77C9F80000000000 -958BC75944015B43D090000000000 47090E0D9328A22BDC88000000000 -168701F7B6AF2ED138E8000000000 44AF910A83CC6ABC170000000000 -5F56365746AF84CE28000000000 ] [ 6B78751C90D879C7D0000000000 -20726EB66E4FCF17094000000000 5E096678FEBD6A8ED60000000000 -B5AE7997C669D411038000000000 F5B5771B1DBD60BF8A0000000000 -ED5DEBF37AC13853E68000000000 A3CE4F676928EB2A5C0000000000 -4F23EDFB5BB1FDCE9FC000000000 197ED015667DAD68010000000000 -4EDE9802620A3856C4000000000 6EEFF4C2A608BFC60000000000 ] [ -3C174F3EC49A128B4000000000 127D5375C656CAA100000000000 -369A1A77CDB84E6374000000000 6B78751C90D879C7D0000000000 -9408310088C0797F68000000000 919AF13F79EB7BB3E0000000000 -664535A3711010CA88000000000 3244BAE8333BF6E5B8000000000 -10779E54E4A54C7764000000000 33C5501691BFD0F60000000000 -49F54DD7195B2A84000000000 ] [ ECAA92B05123BB4000000000 -49F54DD7195B2A84000000000 DDDFE9854C117F8C000000000 -1BBBFD30A9822FF18000000000 26D3FC10ED4FDCB88000000000 -26D3FC10ED4FDCB88000000000 1BBBFD30A9822FF18000000000 -DDDFE9854C117F8C000000000 49F54DD7195B2A84000000000 -ECAA92B05123BB4000000000 1583DECA35EBF9C000000000 ] ] 333078D050DCC97D3CC00000000000 </ok>
ERGEBNIS ? <ok>19D9 </ok>
( herauskommen soll [ [ 2331530F3797CA8619C400000000000 -57FB4FA60AFB7A4F406A00000000000 ... 1583DECA35EBF9C000000000 ] ] 333078D050DCC97D3CC00000000000 <ok></ok>
( gekürzt [ [ -1A2BE700 416DC180 -82DB8300 ... -14A A5 -37 B -1 ] ] -2611500 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0C VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>1618 </ok>
( 0C INVERTIEREN OVER O. DUP N. <ok></ok>
ERGEBNIS ? <ok>1618 </ok>
( herauskommen soll  <ok></ok>
( OVER O. DUP N. [ [ 1569BD000 -3AE2C7C00 82DB83000 ... -318 1EF -DC 42 -C 1 ] ] 1C8CFC00 ok <ok></ok>
 <ok></ok>
( mehr geht erstmal nicht weil nicht mehr Platz ) <ok></ok>
 <ok></ok>
 <ok></ok>
INIT <ok></ok>
[ [ 112  431  199 764 987 434 ] <ok></ok>
  [ 543 45 33 41 789 566 ] <ok></ok>
  [ 543 145 33 42 789 566 ] <ok></ok>
  [ 875 687 098 675 677 574 ] <ok></ok>
  [ 875 66B 0987 675 678 634 ] <ok></ok>
  [ 454 33 555 934 655 633 ] <ok></ok>
  ]  <ok></ok>
DUP O. <ok>[ [ 112 431 199 764 987 434 ] [ 543 45 33 41 789 566 ] [ 543 145 33 42 789 566 ] [ 875 687 98 675 677 574 ] [ 875 66B 987 675 678 634 ] [ 454 33 555 934 655 633 ] ] </ok>
6 INVERTIEREN ( mat dim --> invmat nenner ) <ok></ok>
OVER O. <ok>[ [ 27276428B0E9 -33FD2E9C83CD0A 36525A21D36B67 -5B6695B4D77EA -3093457A10166 5ED85D6D5A12A ] [ 14B8624C29F 23F0A37B21A650 -23F54B966E2DB2 320EE615E87 -1418992AE6F 1AE8B369C60 ] [ -CAC1A9F7ECEA -8AB9A28A74D8F 9744B3E45C16A 38CEFB41B368B -4A47D9FEA5ECC 160664B6AA45E ] [ -14B8624C29F00 -C363E60F784F1 10DE59AD7EE6F1 -320EE615E8700 1418992AE6F00 -1AE8B369C6000 ] [ -6D3C9FC72F7E6 -2F0698EAD8D33F 2F2624E1612412 32C45F0508E -324A2228B7DBF 7A7E4DA446B7E ] [ 9786AE2C87255 6CC328E4C18686 -761A88CE3376B2 590EB00BDB612 7756E029B7354 -106F8E3727FCF1 ] ] </ok>
DUP O. <ok>-23E46D3CC0AECB0F </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Reste die auch weggelassen werden können, wenn alles geht"> 
: VLIST <ok></ok><fl>10C5 3591 </fl><fr>10C9 3597 </fr>
  LFA @ BEGIN  <ok></ok><fl>10C9 3597 </fl><fr>10CB 3597 </fr>
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT  <ok></ok><fl>10CB 3597 </fl><fr>10D5 3597 </fr>
    DUP @ WHILE DUP @ + REPEAT <ok></ok><fl>10D5 3597 </fl><fr>10DC 3597 </fr>
  DROP ; <ok></ok><fl>10DC 3597 </fl><fr>10DE 3597 </fr>
 <ok></ok>
: WLIST <ok></ok><fl>10DE 3597 </fl><fr>10E2 359D </fr>
  LFA @ BEGIN ( CR ) DUP . <ok></ok><fl>10E2 359D </fl><fr>10E6 359D </fr>
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT  <ok></ok><fl>10E6 359D </fl><fr>10F0 359D </fr>
    DUP @ WHILE DUP @ + REPEAT <ok></ok><fl>10F0 359D </fl><fr>10F7 359D </fr>
  DROP <ok></ok><fl>10F7 359D </fl><fr>10F8 359D </fr>
  ; <ok></ok><fl>10F8 359D </fl><fr>10F9 359D </fr>
 <ok></ok>
A003 CONSTANT RETURN <ok></ok><fl>10F9 359D </fl><fr>10FE 35A4 </fr>
: REPLACE: ( /name/ )  <ok></ok><fl>10FE 35A4 </fl><fr>1102 35AD </fr>
  CSP! ( oo ) <ok></ok><fl>1102 35AD </fl><fr>1103 35AD </fr>
  20 WORD FIND DUP IF  <ok></ok><fl>1103 35AD </fl><fr>1108 35AD </fr>
    LCFA DROP 1+ ( pfa <ok></ok><fl>1108 35AD </fl><fr>110B 35AD </fr>
(    HERE OVER - 1 - JRBIT XSETBT SWAP ! <ok></ok><fl>110B 35AD </fl><fr>110B 35AD </fr>
    HERE SWAP DP ! DUP COMPILE, RETURN , DP ! <ok></ok><fl>110B 35AD </fl><fr>1116 35AD </fr>
    1 STAT ! <ok></ok><fl>1116 35AD </fl><fr>1119 35AD </fr>
    ELSE 2DROP 3 ERROR END_IF ; <ok></ok><fl>1119 35AD </fl><fr>111E 35AD </fr>
 <ok></ok>
: FORGET ( /name/ ) <ok></ok><fl>111E 35AD </fl><fr>1122 35B4 </fr>
  20 WORD FIND IF  <ok></ok><fl>1122 35B4 </fl><fr>1126 35B4 </fr>
    DP ! <ok></ok><fl>1126 35B4 </fl><fr>1128 35B4 </fr>
    HERE DUP @ + LFA ! <ok></ok><fl>1128 35B4 </fl><fr>112E 35B4 </fr>
    HERE 1+ @ BZEIG ! <ok></ok><fl>112E 35B4 </fl><fr>1133 35B4 </fr>
    ELSE DROP ." nicht gefunden " END_IF <ok></ok><fl>1133 35B4 </fl><fr>1138 35C4 </fr>
  ; <ok></ok><fl>1138 35C4 </fl><fr>1139 35C4 </fr>
 <ok></ok>
: FEHLERTEXT ( n --> n ) <ok></ok><fl>1139 35C4 </fl><fr>113D 35CF </fr>
  CR <ok></ok><fl>113D 35CF </fl><fr>113E 35CF </fr>
  DUP 0 = IF ." Division durch Null" END_IF <ok></ok><fl>113E 35CF </fl><fr>1145 35E3 </fr>
  DUP 3 = IF ." Wort nicht definiert" END_IF <ok></ok><fl>1145 35E3 </fl><fr>114C 35F8 </fr>
  DUP 6 = IF ." Eingabezeile zu lang" END_IF <ok></ok><fl>114C 35F8 </fl><fr>1153 360D </fr>
  DUP 9 = IF ." Strukturfehler in IF END_IF BEGIN UNTIL DO LOOP " END_IF <ok></ok><fl>1153 360D </fl><fr>115A 363E </fr>
  DUP 12 = IF ." negativer Exponent" END_IF <ok></ok><fl>115A 363E </fl><fr>1161 3651 </fr>
  DUP 369 = IF ." Zahlenspeicher voll" END_IF <ok></ok><fl>1161 3651 </fl><fr>1168 3665 </fr>
  DUP 1234 = IF ." große ganze Zahlen kompilieren geht momentan nicht, siehe TESTFUERNEUES.TXT" END_IF <ok></ok><fl>1168 3665 </fl><fr>116F 36B2 </fr>
  ; <ok></ok><fl>116F 36B2 </fl><fr>1170 36B2 </fr>
 <ok></ok>
( ganz neu: Steuerungstasten: ^A bis ^G, weiter ^H=^A ^L=^B ... ) <ok></ok>
18 8 0 FILL <ok></ok>
: STRG: : HERE 3 - DUP . @ 1+ DUP . @ DUP . 40 - HERE SWAP 7 AND 18 + ! ; <ok></ok><fl>1170 36B2 </fl><fr>118B 36B8 </fr>
STRG: ^G 7 EMIT ." /1xPIEP/" ; <ok>118C 36B9 0047 </ok><fl>118B 36B8 </fl><fr>1195 36C4 </fr>
STRG: ^F 7 EMIT ." QUIT" QUIT ; <ok>1196 36C5 0046 </ok><fl>1195 36C4 </fl><fr>11A0 36CC </fr>
STRG: ^A ." Angehalten für genau eine Eingabezeile: "  <ok>11A1 36CD 0041 </ok><fl>11A0 36CC </fl><fr>11A7 36F9 </fr>
  CR FA00 100 EXPECT INTERPRET ." ok"; <ok></ok><fl>11A7 36F9 </fl><fr>11B0 36FC </fr>
 <ok></ok>
: QUERY ( adr --> n ) TIB @ 100 EXPECT ; <ok></ok><fl>11B0 36FC </fl><fr>11B9 3702 </fr>
 <ok></ok>
IMMEDIATE: (*REM*)  <ok></ok><fl>11B9 3702 </fl><fr>11BD 370A </fr>
  3C EMIT ." /ok>" <ok></ok><fl>11BD 370A </fl><fr>11C2 370F </fr>
  BEGIN CR QUERY " (*END*)" Z= UNTIL <ok></ok><fl>11C2 370F </fl><fr>11C9 3717 </fr>
  3C EMIT ." ok>" <ok></ok><fl>11C9 3717 </fl><fr>11CE 371B </fr>
  ; <ok></ok><fl>11CE 371B </fl><fr>11CF 371B </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Reste, die schon weggelassen sind"> 
(*REM*) <ok></ok>
  RAMP1 VARIABLE RAMP3 ( RAMP3 TIB RAMP1 
: RAMBUF ( /name/  n --> ) 
  MINUS RAMP3 +! RAMP3 @ CONSTANT ; ( oo INDVAR muss da her ) 
 
( - LOOP's - sind aber sehr langsam ) 
: I RP @ 1 + @ ; 
: J RP @ 3 + @ ; 
: K RP @ 5 + @ ; 
: (DO) SWAP R> ROT ROT >R >R >R ; 
: (LOOP) R> R> 1+ DUP R LT IF >R 0  
  ELSE R> DROP DROP -1 END_IF SWAP >R ; 
: (+LOOP) R> R>  ROT DUP  0LT IF + R OVER 
  ELSE + DUP R END_IF LT IF >R 0  
  ELSE R> DROP DROP -1 END_IF SWAP >R  ; 
IMMEDIATE: DO COMPILE (DO) HERE ; 
IMMEDIATE: LOOP COMPILE (LOOP) 0BRANCH, ; 
IMMEDIATE: +LOOP COMPILE (+LOOP) 0BRANCH, ; 
( : LL 0 DO I . LOOP ; 7 LL ( ok geht ) 
 
 
IMMEDIATE: () 0 WORD 2DROP ; 
: B. ( a b --> ) SWAP . . ; 
: 2@ ( adr --> a b ) 
  DUP 1+ @ SWAP @ ; 
: 2! ( a b adr --> ) 
  SWAP OVER ! 1+ ! ; 
: 2? 2@ B. ; 
 
: LDUMP LFA @ HERE OVER - DUMP ; 
 
A012 MCODE D+ 
A013 MCODE D- 
 
 
( - paar Geraeteadressen: ) 
D004 CONSTANT UHR 
D005 CONSTANT SWTI 
D00D CONSTANT UHRL 
2D05 CONSTANT XOFFINPUT 
 
( - "Platinen befestigen und entfernen" ) 
20 RAMBUF TLISTE 
TLISTE VARIABLE TLISTENZEIGER 
: TLISTY  
  TLISTENZEIGER @ TLISTE BEGIN  
    DUP @ CR DUP . 3 - 2@ SWAP TYPE  
    1 + 2DUP = UNTIL 2DROP ; 
 
0 VARIABLE REMOPFA 
0 VARIABLE STATMERK 
0 VARIABLE EXXIUHR 
: EXXI 
  UHRL @ >R 
  STAT @ STATMERK ! 0 STAT ! ( eigentlich >R ) 
  TLISTE 
  BEGIN DUP TLISTENZEIGER @ LT WHILE 
    DUP >R @ EXECUTE R> 1+ REPEAT DROP 
  STATMERK @ STAT !  
  UHRL @ R> - EXXIUHR !  
  ; 
( ' EXXI 6 1+ - 6000 OR 6 ! 
' EXXI 4000 + 16 ! ( CR geht momentan +F9XX ) 
 
: ENTFERNE  
  20 WORD FIND LCFA DROP 1+ 
  ( DUP 0= IF 3 ERROR END_IF ) 
  0 REMOPFA ! 
  TLISTENZEIGER @ TLISTE > IF 
    TLISTENZEIGER @ TLISTE DO 
      DUP I @ = IF 
        1 REMOPFA ! 
        -1 TLISTENZEIGER +! 
        END_IF 
      REMOPFA @ IF 
        I 1+ @ I ! 
        END_IF 
      LOOP END_IF 
  REMOPFA ! 
  ; 
   
: BEFESTIGE ENTFERNE 
  REMOPFA @ TLISTENZEIGER @ ! 
  1 TLISTENZEIGER +!  
  ; 
 
 
: DABS ( h l --> h' l' ) 
  OVER 0LT IF 0 0 2SWAP D- END_IF ; 
 
 
( CASEOFS aus'm PSION: ) 
: CASEOFS ( n  /name/ --> ) 
  DUP RAMBUF 
  0 DO 
    0 I RAMP3 @ + ! 
    LOOP 
  ; 
 
: CASEOF: ( fn en --> ) 
  + HERE DPMERK @ - SWAP ! 
  CSP! 1 STAT ! 
  ; 
 
: CASEOF ( fn en --> ) 
  + @ DUP IF 
    DPMERK @ + EXECUTE 
    ELSE DROP END_IF ; 
 
( - CASE ) 
( : BIT ( i n --> bit ) 
(   2 ROT DUP 0LT IF 99 ERROR ELSE  
(   ^ AND 0= 1 + END_IF ;  
 
: (OF) ( n r i --> f r' ) 
  ROT = DUP ROT OR ; 
: (RANGE-OF) ( n1 n2 r i --> f r' ) 
  DUP >R ROT > ROT R> > OR 0= DUP ROT OR ; 
( : (BIT-OF) ( n r i --> f r' ) 
(   ROT BIT DUP ROT OR ; 
 
IMMEDIATE: CASE ( n --> ) 
  " >R 0 >R"  
  INTERPRET ; 
IMMEDIATE: END_CASE ( --> ) 
  " R> R> 2DROP"  
  INTERPRET ; 
IMMEDIATE: OF ( n --> ) 
  " R> R (OF) >R IF"  
  INTERPRET ;               
IMMEDIATE: RANGE-OF ( n1 n2 --> ) 
  " R> R (RANGE-OF) >R IF"  
  INTERPRET ; 
IMMEDIATE: BIT-OF ( m --> ) 
  " R> R (BIT-OF) >R IF"  
  INTERPRET ; 
IMMEDIATE: ELSEOF ( --> ) 
  " R 0= IF" INTERPRET ; 
IMMEDIATE: END_OF ( --> ) 
  " END_IF" INTERPRET ; 
: ERR ." keine gültige RAM-Adresse" QUIT ; 
' ERR 4000 OR 22 ! 
' ERR 4000 OR 20 ! 
 
IMMEDIATE: /; 0 STAT ! CSP? HERE 1 - @ 800 OR HERE 1 - ! SMUDGE [ SMUDGE ] ;  
( : T 77 88 DROP /;  
( ' T 8 DUMP 
( : W PAUSENBIT ! /; 
( ' W 8 DUMP 
 
 
( Ausgabe von ESCAPE-Sequenzen: sie vertragen sich aber nicht mit xml, besser CSI nehmen ) 
20 WORD: ESC 1B EMIT BEGIN OVER C@ EMIT SWAP 1 + SWAP 1 - DUP 0= UNTIL DROP ; 
ESC ]0;FORTY-FORTH 07 EMIT ( 07 EMIT schließt ] 
: FESTPOSITION ESC [s ESC [1;1H ESC [31m ; ( saveC Pos1,1 redcolor 
: RUCKPOSITION ESC [u ESC [39m ; ( restoreC defaultcolor 
 
( Alternativer Start mit ESCAPE-Sequenzen ) 
 
: QUIT2  
  RP0 @ RP ! 
  BEGIN  
    STAT @ 0= IF ESC [34m ." ok" END_IF CR ESC [39m  
    TIB @ 100 EXPECT ESC [36m INTERPRET  
    AGAIN ; 
 
( REPLACE: QUIT QUIT2 ; 
( QUIT 
 
: QUIT3 
  RP0 @ RP ! 
  BEGIN  
    STAT @ 0= IF ."   " END_IF 
    CR   
    CRBIT @ 2 AND IF 3C EMIT ." /ok>" END_IF 
    CRBIT @ 4 AND IF C2 EMIT 9B EMIT 33 EMIT 36 EMIT 6D EMIT END_IF 
    TIB @ 100 EXPECT  
    CRBIT @ 4 AND IF C2 EMIT 9B EMIT 33 EMIT 39 EMIT 6D EMIT END_IF 
    CRBIT @ 2 AND IF 3C EMIT ." ok>" END_IF 
    INTERPRET 
    AGAIN ; 
 
 
: IOSTART 
  2C40 2C00 DO I @ I ! LOOP 
  2D30 2D14 DO I @ I ! LOOP 
  ; 
IOSTART 
 
( wozu das RBIT war? für relatives CR ) 
: COMPILE, ( adr --> ) 
  RBIT @ IF 4000 ELSE  
    DP @ 1+ - 0FFF AND 3000 END_IF 
    0000 + + , ; 
 
: a*a;;  
  A 2000 111111 FILL 
  B 2000 111111 FILL 
  C 4001 000000 FILL 
  0 2000 A 0 2000 B C SMUL 7 EMIT ; 
(*END*) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="DEMO"> 
56 89 * . <ok>2E06 </ok>
77 88 + . <ok>00FF </ok>
 <ok></ok>
( aktuelles Vokabular <ok></ok>
 <ok></ok>
VLIST <ok>(*REM*) QUERY ^A ^F ^G STRG: FEHLERTEXT FORGET REPLACE: RETURN WLIST VLIST VANDERMONDEMATRIX INVERTIEREN OBJDUMP OBJ+0 ] [ SPMERK O. H G L OBJ? ZERLEG NB. N. N^ N" NNUMBER NBK NGGT NMOD N/ B+0 A+0 INIT RECHENBLOCK HAUPTRECHNUNG NEBENRECHNUNG BLOCKENDE BLOCKANFANG NB. N. HG0. N/MOD RECURSE N* N- N+ 2OPERANDEN->2SLX SPEICHERHOL OPERAND->SLX SLX->ERGEBNIS SCHIEB SPEICHERENDE ZAHLENSPEICHER ERGEBNIS OPERAND2 OPERAND1 SDIV MOD / /MOD /MOD DIV32 DI32 ADDIER SMUL C B A SUPERMULT MULT_II MULT_I ABS MIN MAX DUMP FILL MOVE VARIABLE RAMP1 DUMPZ NG. LG. DUBIT ; : COMPILE: IMMEDIATE: (:) (COMPILE:) (IMMEDIATE:) SMUDGE START QUIT INTERPRET CREATE COMPILE, LCFA FIND Z= WORD NUMBER DIGIT EXPECT KEYCODE2 KEY_INT INCR4 ' L7 L6 L5 L4 L3 L2 L1 L0 END_LOCAL LOCAL CSP? CSP! ERROR DISABLE FEHLERTEXT CR ? . H. HG. TYPE DIG SHL16 EMIT KEY EXECUTE , R >R R> +! BYE * > LT = - 1+ C! C@ REPEAT WHILE ELSE END_IF IF UNTIL AGAIN BEGIN 0BRANCH, BRANCH, ALLOT XSETBT JR0BIT JRBIT HERE ." " WORD: (WORD:) Z, B, NOOP 2DROP 2DUP 2OVER 2SWAP DROP ROT DUP OVER SWAP @ ! + KEYCODE OR AND NOT EMITCODE 0LT 0= U* U+ MINUS MCODE (MCODE:) RETURN VERSION LOCALADRESSE LOCALADDR CSP DPMERK BZEIG BANF LFA STAT DP ERRORNR IN4 IN3 IN2 IN1 TIB BASE CRDP CRBZEIG XOFF JRAMADR IRAMADR RP0 SMUDGEBIT XBIT PC RP SP KEYADR CONSTANT (CONSTANT:) LIT, (LIT,) COMPILE } { ( </ok>
 <ok></ok>
( nochmal mit Speicheradressen, vor jedem Wort steht dessen Aufruf-Adresse ) <ok></ok>
 <ok></ok>
WLIST <ok>11B9 (*REM*) 11B0 QUERY 11A0 ^A 1195 ^F 118B ^G 1170 STRG: 1139 FEHLERTEXT 111E FORGET 10FE REPLACE: 10F9 RETURN 10DE WLIST 10C5 VLIST 108E VANDERMONDEMATRIX 0FD2 INVERTIEREN 0F9F OBJDUMP 0F7A OBJ+0 0F5F ] 0F54 [ 0F4F SPMERK 0F2F O. 0EAA H 0EA3 G 0E87 L 0E6F OBJ? 0E64 ZERLEG 0E5C NB. 0E24 N. 0DF3 N^ 0DEB N" 0D5E NNUMBER 0D4B NBK 0D39 NGGT 0D2C NMOD 0D1E N/ 0D15 B+0 0CE9 A+0 0CDE INIT 0CD1 RECHENBLOCK 0CCA HAUPTRECHNUNG 0CC3 NEBENRECHNUNG 0CBE BLOCKENDE 0CB9 BLOCKANFANG 0CB1 NB. 0C88 N. 0C5A HG0. 0C12 N/MOD 0C08 RECURSE 0C00 N* 0BF9 N- 0BF1 N+ 0BDD 2OPERANDEN->2SLX 0BC0 SPEICHERHOL 0B9E OPERAND->SLX 0B61 SLX->ERGEBNIS 0B5C SCHIEB 0B57 SPEICHERENDE 0B52 ZAHLENSPEICHER 0B4D ERGEBNIS 0B48 OPERAND2 0B43 OPERAND1 0A3C SDIV 0A35 MOD 0A2D / 0A0B /MOD 0A02 /MOD 09F3 DIV32 09ED DI32 0926 ADDIER 08DD SMUL 08D8 C 08D3 B 08CE A 08C3 SUPERMULT 08BD MULT_II 08B7 MULT_I 08AE ABS 08A4 MIN 089A MAX 0888 DUMP 0874 FILL 085E MOVE 0850 VARIABLE 084B RAMP1 07F1 DUMPZ 07E1 NG. 07C7 LG. 07C1 DUBIT 07B4 ; 07AA : 07A0 COMPILE: 0796 IMMEDIATE: 078A (:) 0783 (COMPILE:) 077C (IMMEDIATE:) 0774 SMUDGE 0769 START 071C QUIT 06CF INTERPRET 06BA CREATE 06B1 COMPILE, 06A8 LCFA 0668 FIND 0634 Z= 05EE WORD 0571 NUMBER 0548 DIGIT 04DC EXPECT 04B6 KEYCODE2 0487 KEY_INT 0474 INCR4 0465 ' 045C L7 0453 L6 044A L5 0441 L4 0438 L3 042F L2 0426 L1 041D L0 0411 END_LOCAL 0402 LOCAL 03F5 CSP? 03EC CSP! 03C8 ERROR 03B7 DISABLE 03B2 FEHLERTEXT 0373 CR 036C ? 0366 . 035E H. 034C HG. 033B TYPE 032D DIG 0323 SHL16 031C EMIT 0315 KEY 030E EXECUTE 0303 , 02FA R 02E3 >R 02D0 R> 02C5 +! 02BC BYE 02B1 * 02AA > 0298 LT 0291 = 028A - 0283 1+ 027D C! 0277 C@ 026F REPEAT 0269 WHILE 025F ELSE 0251 END_IF 0248 IF 0242 UNTIL 023C AGAIN 0236 BEGIN 022B 0BRANCH, 0220 BRANCH, 0219 ALLOT 020E XSETBT 0208 JR0BIT 0202 JRBIT 01FB HERE 01F4 ." 01EE " 01E0 WORD: 01D4 (WORD:) 01BC Z, 01B1 B, 01AB NOOP 01A5 2DROP 019F 2DUP 0199 2OVER 0193 2SWAP 018D DROP 0187 ROT 0181 DUP 017B OVER 0175 SWAP 016F @ 0169 ! 0163 + 015D KEYCODE 0157 OR 0151 AND 014B NOT 0145 EMITCODE 013F 0LT 0139 0= 0133 U* 012D U+ 0127 MINUS 011B MCODE 010E (MCODE:) 0109 RETURN 0104 VERSION 00FF LOCALADRESSE 00FA LOCALADDR 00F5 CSP 00F0 DPMERK 00EB BZEIG 00E6 BANF 00E1 LFA 00DC STAT 00D7 DP 00D2 ERRORNR 00CD IN4 00C8 IN3 00C3 IN2 00BE IN1 00B9 TIB 00B4 BASE 00AF CRDP 00AA CRBZEIG 00A5 XOFF 00A0 JRAMADR 009B IRAMADR 0096 RP0 0091 SMUDGEBIT 008C XBIT 0087 PC 0082 RP 007D SP 0078 KEYADR 006F CONSTANT 0064 (CONSTANT:) 0055 LIT, 004B (LIT,) 0040 COMPILE 0038 } 0030 { 0028 ( </ok>
 <ok></ok>
( LED's zum Leuchten bringen, also auf Adresse 2D04 ausgeben ) <ok></ok>
 <ok></ok>
2D04 CONSTANT LEDS <ok></ok><fl>11CF 371B </fl><fr>11D4 3720 </fr>
55 LEDS ! <ok></ok>
 <ok></ok>
( erreichte Programmdresse in 0000-1FFF ) <ok></ok>
 <ok></ok>
HERE . <ok>11D4 </ok>
 <ok></ok>
( erreichte Adresse in Textspeicher E000-FFFF ) <ok></ok>
 <ok></ok>
BZEIG ? <ok>3720 </ok>
 <ok></ok>
( aktuelle Stapelhoehe ) <ok></ok>
 <ok></ok>
SP ? <ok>0060 </ok>
 <ok></ok>
SP ? <ok>0060 </ok>
 <ok></ok>
( Ein neues Wort definieren ) <ok></ok>
 <ok></ok>
: H ." Hallo Welt " ; <ok></ok><fl>11D4 3720 </fl><fr>11DC 372E </fr>
 <ok></ok>
H <ok>Hallo Welt </ok>
 <ok></ok>
( Bedingung IF ) <ok></ok>
 <ok></ok>
: W ( n --> )  <ok></ok><fl>11DC 372E </fl><fr>11E0 3730 </fr>
  ." Das ist eine "  <ok></ok><fl>11E0 3730 </fl><fr>11E3 373E </fr>
  1 AND IF ." un" END_IF  <ok></ok><fl>11E3 373E </fl><fr>11E9 3741 </fr>
  ." gerade Zahl " ;  <ok></ok><fl>11E9 3741 </fl><fr>11ED 374E </fr>
 <ok></ok>
7 W <ok>Das ist eine ungerade Zahl </ok>
8 W <ok>Das ist eine gerade Zahl </ok>
 <ok></ok>
( Programmschleifen, die für DO LOOP ist aber momentan stillgelegt. ) <ok></ok>
 <ok></ok>
( : X ( n --> ) <ok></ok>
(   0 DO I . LOOP ; <ok></ok>
( 13 X  <ok></ok>
 <ok></ok>
( oder ) <ok></ok>
 <ok></ok>
: Y ( n --> ) <ok></ok><fl>11ED 374E </fl><fr>11F1 3750 </fr>
  0 BEGIN DUP . 1+ 2DUP = UNTIL 2DROP ; <ok></ok><fl>11F1 3750 </fl><fr>11FA 3750 </fr>
 <ok></ok>
13 Y <ok>0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F 0010 0011 0012 </ok>
 <ok></ok>
( oder ) <ok></ok>
 <ok></ok>
: Z ( n --> ) <ok></ok><fl>11FA 3750 </fl><fr>11FE 3752 </fr>
  0 BEGIN 2DUP > WHILE DUP . 1+ REPEAT 2DROP ; <ok></ok><fl>11FE 3752 </fl><fr>1208 3752 </fr>
 <ok></ok>
13 Z <ok>0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F 0010 0011 0012 </ok>
 <ok></ok>
( alles ab LEDS wieder vergessen ) <ok></ok>
 <ok></ok>
HERE . BZEIG ? <ok>1208 3752 </ok>
FORGET LEDS <ok></ok><fl>1208 3752 </fl><fr>11CF 371B </fr>
HERE . BZEIG ? <ok>11CF 371B </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( Also an der Stelle nach FFINIT1SMUL.TXT hab ich jetzt ) <ok></ok>
( N" ( /number/  -> n        liest bis " eine grosse ganze Zahl ein <ok></ok>
(                            kleine ganze Zahlen wie bisher eingeben <ok></ok>
( N+ N- N* N/ N/MOD NMOD N^  und rechnet damit <ok></ok>
( N.   a -->                 und gibt sie aus <ok></ok>
( NBK  a b --> a' b'         Kürzen <ok></ok>
( NGGT a b --> ggt           groesster gemeinsamer Teiler <ok></ok>
(  <ok></ok>
( also direkt eingeben und mit + - * / rechnen geht hier noch nicht <ok></ok>
 <ok></ok>
 <ok></ok>
( ERGEBNIS ist unpassend gewählter Variablenname,  <ok></ok>
( bezeichnet ab welcher Adresse das nächste Ergebnis gespeichert wird, <ok></ok>
( Platz dafür ist von 1400H bis 1FFFH, aktuell erreicht: ) <ok></ok>
  <ok></ok>
ERGEBNIS ? ( Zahlenspeicher gefuellt bis )  <ok>14E3 </ok>
 <ok></ok>
ZAHLENSPEICHER @ ERGEBNIS ! ( Zahlenspeicher leeren ) <ok></ok>
 <ok></ok>
ERGEBNIS ? <ok>1400 </ok>
 <ok></ok>
N" 111111111111111" DUP N* N. <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
ERGEBNIS ? <ok>140F </ok>
 <ok></ok>
( dritte binomische Formel 10^20-{10^10+1}*{10^10-1}=1 ) <ok></ok>
10 20 N^ 10 10 N^ 1 N- 10 10 N^ 1 N+ N* N- N. <ok>1 </ok>
 <ok></ok>
ERGEBNIS ? <ok>1453 </ok>
 <ok></ok>
 <ok></ok>
( Zahlenbasis wechseln ) <ok></ok>
 <ok></ok>
: HEX 10 BASE ! ; <ok></ok><fl>11CF 371B </fl><fr>11D7 371F </fr>
: DECIMAL 0A BASE ! ; <ok></ok><fl>11D7 371F </fl><fr>11DF 3727 </fr>
 <ok></ok>
HEX N" 10000" <ok></ok>
DECIMAL DUP N. <ok>65536 </ok>
HEX DUP N. <ok>10000 </ok>
 <ok></ok>
HEX N" 100000000" <ok></ok>
DECIMAL DUP N. <ok>4294967296 </ok>
HEX DUP N. <ok>100000000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="in den Zustand für Step_11 bringen und wieder RAM generieren"> 
: NLIT, ( a --> ) DUP 3FFF > OVER C000 LT OR IF 1234 ERROR END_IF , ; <ok></ok><fl>11DF 3727 </fl><fr>11EF 372D </fr>
REPLACE: LIT, NLIT, ;  <ok></ok><fl>11EF 372D </fl><fr>11F1 372D </fr>
REPLACE: NUMBER NNUMBER ; <ok></ok><fl>11F1 372D </fl><fr>11F3 372D </fr>
: M. . ; : M+ + ; : M- - ; : M* * ; : M/ / ; : M/MOD /MOD ; : MMOD MOD ; <ok></ok><fl>11F3 372D </fl><fr>121D 3747 </fr>
: . O. ; : + N+ ; : - N- ; : * N* ; : / N/ ; : /MOD N/MOD : : MOD NMOD ;  <ok></ok><fl>121D 3747 </fl><fr>1245 3756 </fr>
: GGT NGGT ; : BK NBK ; : ^ N^ ; : ? @ . ; <ok></ok><fl>1245 3756 </fl><fr>125E 3761 </fr>
 <ok></ok>
( jetzt rechnen auch + - * / mit großen ganzen Zahlen,  <ok></ok>
( allerdings beim Compilieren von großen ganzen Zahlen im Moment noch 1234 ERROR <ok></ok>
 <ok></ok>
 <ok></ok>
111111111111111 DUP * . <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
( an der Stelle Programm-VHDL-Quelltext für Step_11 ausgeben ) <ok></ok>
HEX INIT  <ok></ok>
HERE 0 0 DUMPZ           ( generiert progRAM für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"4010",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 0000-000F 
  x"476D",x"A003",x"44BA",x"9001",x"A003",x"B300",x"8000",x"8FFA",x"0000",x"11A4",x"0000",x"0000",x"0000",x"0000",x"1199",x"118F", -- 0010-001F 
  x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"448B",x"A003",x"0000",x"3000",x"0001",x"4780",x"0029",x"45F2",x"B200",x"A003", -- 0020-002F 
  x"FFF8",x"3002",x"0001",x"4780",x"0000",x"2F10",x"A009",x"A003",x"FFF8",x"3004",x"0001",x"478E",x"0001",x"2F10",x"A009",x"A003", -- 0030-003F 
  x"FFF8",x"3006",x"0007",x"4780",x"0020",x"45F2",x"466C",x"46AC",x"B300",x"46B5",x"A003",x"FFF5",x"300E",x"0006",x"4787",x"42D4", -- 0040-004F 
  x"B501",x"4287",x"42E7",x"A00A",x"A003",x"FFF6",x"3015",x"0004",x"478E",x"51EF",x"A003",x"42AE",x"B502",x"C000",x"429C",x"A00E", -- 0050-005F 
  x"9001",x"404E",x"4307",x"A003",x"FFF1",x"301A",x"000B",x"4787",x"42D4",x"A00A",x"2F10",x"A00A",x"9001",x"4059",x"A003",x"FFF5", -- 0060-006F 
  x"3026",x"0008",x"478E",x"46BE",x"4067",x"4307",x"4778",x"A003",x"FFF7",x"302F",x"0006",x"4068",x"2800",x"FFFB",x"3036",x"0002", -- 0070-007F 
  x"4068",x"2801",x"FFFB",x"3039",x"0002",x"4068",x"2802",x"FFFB",x"303C",x"0002",x"4068",x"2803",x"FFFB",x"303F",x"0004",x"4068", -- 0080-008F 
  x"2F00",x"FFFB",x"3044",x"0009",x"4068",x"2F01",x"FFFB",x"304E",x"0003",x"4068",x"2F02",x"FFFB",x"3052",x"0007",x"4068",x"2F03", -- 0090-009F 
  x"FFFB",x"305A",x"0007",x"4068",x"2F04",x"FFFB",x"3062",x"0004",x"4068",x"2F05",x"FFFB",x"3067",x"0007",x"4068",x"2F06",x"FFFB", -- 00A0-00AF 
  x"306F",x"0004",x"4068",x"2F07",x"FFFB",x"3074",x"0004",x"4068",x"2F08",x"FFFB",x"3079",x"0003",x"4068",x"2F09",x"FFFB",x"307D", -- 00B0-00BF 
  x"0003",x"4068",x"2F0A",x"FFFB",x"3081",x"0003",x"4068",x"2F0B",x"FFFB",x"3085",x"0003",x"4068",x"2F0C",x"FFFB",x"3089",x"0003", -- 00C0-00CF 
  x"4068",x"2F0D",x"FFFB",x"308D",x"0007",x"4068",x"2F0E",x"FFFB",x"3095",x"0002",x"4068",x"2F0F",x"FFFB",x"3098",x"0004",x"4068", -- 00D0-00DF 
  x"2F10",x"FFFB",x"309D",x"0003",x"4068",x"2F11",x"FFFB",x"30A1",x"0004",x"4068",x"2F12",x"FFFB",x"30A6",x"0005",x"4068",x"2F13", -- 00E0-00EF 
  x"FFFB",x"30AC",x"0006",x"4068",x"2F14",x"FFFB",x"30B3",x"0003",x"4068",x"2F15",x"FFFB",x"30B7",x"0009",x"4068",x"2F16",x"FFFB", -- 00F0-00FF 
  x"30C1",x"000C",x"4068",x"2F17",x"FFFB",x"30CE",x"0007",x"4068",x"01B2",x"FFFB",x"30D6",x"0006",x"4068",x"A003",x"FFFB",x"30DD", -- 0100-010F 
  x"0008",x"4787",x"42D4",x"2F10",x"A00A",x"9003",x"A00A",x"4307",x"8001",x"4312",x"A003",x"FFF3",x"30E6",x"0005",x"478E",x"46BE", -- 0110-011F 
  x"4111",x"4307",x"404F",x"A003",x"4307",x"4778",x"A003",x"FFF4",x"30EC",x"0005",x"4112",x"A000",x"A003",x"FFFA",x"30F2",x"0002", -- 0120-012F 
  x"4112",x"A001",x"A003",x"FFFA",x"30F5",x"0002",x"4112",x"A002",x"A003",x"FFFA",x"30F8",x"0002",x"4112",x"A00D",x"A003",x"FFFA", -- 0130-013F 
  x"30FB",x"0003",x"4112",x"A00F",x"A003",x"FFFA",x"30FF",x"0008",x"4112",x"A005",x"A003",x"FFFA",x"3108",x"0003",x"4112",x"A00B", -- 0140-014F 
  x"A003",x"FFFA",x"310C",x"0003",x"4112",x"A008",x"A003",x"FFFA",x"3110",x"0002",x"4112",x"A00E",x"A003",x"FFFA",x"3113",x"0007", -- 0150-015F 
  x"4112",x"A00C",x"A003",x"FFFA",x"311B",x"0001",x"4112",x"A007",x"A003",x"FFFA",x"311D",x"0001",x"4112",x"A009",x"A003",x"FFFA", -- 0160-016F 
  x"311F",x"0001",x"4112",x"A00A",x"A003",x"FFFA",x"3121",x"0004",x"4112",x"B412",x"A003",x"FFFA",x"3126",x"0004",x"4112",x"B502", -- 0170-017F 
  x"A003",x"FFFA",x"312B",x"0003",x"4112",x"B501",x"A003",x"FFFA",x"312F",x"0003",x"4112",x"B434",x"A003",x"FFFA",x"3133",x"0004", -- 0180-018F 
  x"4112",x"B300",x"A003",x"FFFA",x"3138",x"0005",x"4112",x"B43C",x"A003",x"FFFA",x"313E",x"0005",x"4112",x"B60C",x"A003",x"FFFA", -- 0190-019F 
  x"3144",x"0004",x"4112",x"B603",x"A003",x"FFFA",x"3149",x"0005",x"4112",x"B200",x"A003",x"FFFA",x"314F",x"0004",x"4112",x"8000", -- 01A0-01AF 
  x"A003",x"FFFA",x"3154",x"0002",x"478E",x"2F13",x"A00A",x"A009",x"0001",x"2F13",x"42C9",x"A003",x"FFF5",x"3157",x"0002",x"478E", -- 01B0-01BF 
  x"2F13",x"A00A",x"4059",x"B501",x"4307",x"B412",x"B501",x"A00A",x"41B5",x"4287",x"B412",x"0001",x"428E",x"B501",x"A00D",x"9FF5", -- 01C0-01CF 
  x"B200",x"0020",x"41B5",x"A003",x"FFE8",x"315A",x"0007",x"4787",x"45F2",x"2F10",x"A00A",x"9003",x"41C0",x"42D4",x"46B5",x"A003", -- 01D0-01DF 
  x"FFF4",x"3162",x"0005",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"4307",x"41D7",x"FFFF",x"2F15",x"42C9",x"A003",x"FFF2",x"3168", -- 01E0-01EF 
  x"0001",x"0022",x"41D8",x"A003",x"FFFA",x"316A",x"0002",x"0022",x"41D8",x"433F",x"A003",x"FFF9",x"316D",x"0004",x"478E",x"2F0F", -- 01F0-01FF 
  x"A00A",x"A003",x"FFF9",x"3172",x"0005",x"478E",x"0008",x"A003",x"FFFA",x"3178",x"0006",x"478E",x"0009",x"A003",x"FFFA",x"317F", -- 0200-020F 
  x"0006",x"478E",x"1000",x"42B5",x"B412",x"0FFF",x"A008",x"A00E",x"A003",x"FFF5",x"3186",x"0005",x"478E",x"2F0F",x"42C9",x"A003", -- 0210-021F 
  x"FFF9",x"318C",x"0007",x"478E",x"41FF",x"4287",x"428E",x"4206",x"4212",x"4307",x"A003",x"FFF5",x"3194",x"0008",x"478E",x"41FF", -- 0220-022F 
  x"4287",x"428E",x"420C",x"4212",x"4307",x"A003",x"FFF5",x"319D",x"0005",x"4780",x"41FF",x"A003",x"FFFA",x"31A3",x"0005",x"4780", -- 0230-023F 
  x"4224",x"A003",x"FFFA",x"31A9",x"0005",x"4780",x"422F",x"A003",x"FFFA",x"31AF",x"0002",x"4780",x"420C",x"0001",x"421D",x"41FF", -- 0240-024F 
  x"A003",x"FFF7",x"31B2",x"0006",x"4780",x"41FF",x"B502",x"428E",x"B434",x"4212",x"B412",x"0001",x"428E",x"A009",x"A003",x"FFF2", -- 0250-025F 
  x"31B9",x"0004",x"4780",x"0001",x"421D",x"4254",x"4206",x"41FF",x"A003",x"FFF6",x"31BE",x"0005",x"4780",x"424B",x"A003",x"FFFA", -- 0260-026F 
  x"31C4",x"0006",x"4780",x"B434",x"423F",x"4254",x"A003",x"FFF8",x"31CB",x"0002",x"478E",x"A00A",x"A003",x"FFFA",x"31CE",x"0002", -- 0270-027F 
  x"478E",x"A009",x"A003",x"FFFA",x"31D1",x"0002",x"478E",x"0001",x"A007",x"A003",x"FFF9",x"31D4",x"0001",x"478E",x"A000",x"A007", -- 0280-028F 
  x"A003",x"FFF9",x"31D6",x"0001",x"478E",x"428E",x"A00D",x"A003",x"FFF9",x"31D8",x"0002",x"478E",x"404F",x"8000",x"A007",x"B412", -- 0290-029F 
  x"A00B",x"404F",x"8000",x"A007",x"0000",x"A001",x"B300",x"A00D",x"A00B",x"A003",x"FFEE",x"31DB",x"0001",x"478E",x"B412",x"429C", -- 02A0-02AF 
  x"A003",x"FFF9",x"31DD",x"0001",x"478E",x"0000",x"B434",x"B434",x"A002",x"B412",x"B300",x"A003",x"FFF5",x"31DF",x"0003",x"478E", -- 02B0-02BF 
  x"31E3",x"0004",x"41F9",x"8FFC",x"A003",x"FFF7",x"31E8",x"0002",x"478E",x"B412",x"B502",x"A00A",x"A007",x"B412",x"A009",x"A003", -- 02C0-02CF 
  x"FFF5",x"31EB",x"0002",x"478E",x"2802",x"A00A",x"4287",x"A00A",x"2802",x"A00A",x"4287",x"2802",x"B603",x"A00A",x"A00A",x"B412", -- 02D0-02DF 
  x"A009",x"A009",x"A003",x"FFED",x"31EE",x"0002",x"478E",x"2802",x"A00A",x"B501",x"FFFF",x"A007",x"2802",x"B603",x"A00A",x"A00A", -- 02E0-02EF 
  x"B412",x"B501",x"FFFF",x"A007",x"2802",x"A009",x"A009",x"A009",x"A009",x"A003",x"FFE9",x"31F1",x"0001",x"478E",x"2802",x"A00A", -- 02F0-02FF 
  x"4287",x"A00A",x"A003",x"FFF7",x"31F3",x"0001",x"478E",x"2F0F",x"A00A",x"A009",x"0001",x"2F0F",x"42C9",x"A003",x"FFF5",x"31F5", -- 0300-030F 
  x"0007",x"478E",x"2803",x"A009",x"A003",x"FFF9",x"31FD",x"0003",x"478E",x"0012",x"4312",x"A003",x"FFF9",x"3201",x"0004",x"478E", -- 0310-031F 
  x"0149",x"4312",x"A003",x"FFF9",x"3206",x"0005",x"478E",x"0000",x"B412",x"0010",x"A002",x"B412",x"A003",x"FFF6",x"320C",x"0003", -- 0320-032F 
  x"478E",x"B501",x"000A",x"429C",x"9001",x"8002",x"0007",x"A007",x"0030",x"A007",x"A003",x"FFF2",x"3210",x"0004",x"478E",x"B501", -- 0330-033F 
  x"9009",x"B412",x"B501",x"427B",x"4320",x"4287",x"B412",x"0001",x"428E",x"8FF5",x"B200",x"A003",x"FFEF",x"3215",x"0003",x"478E", -- 0340-034F 
  x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"B300",x"A003",x"FFEE",x"3219", -- 0350-035F 
  x"0002",x"478E",x"4350",x"0020",x"4320",x"A003",x"FFF8",x"321C",x"0001",x"478E",x"4362",x"A003",x"FFFA",x"321E",x"0001",x"478E", -- 0360-036F 
  x"A00A",x"436A",x"A003",x"FFF9",x"3220",x"0002",x"478E",x"2F07",x"A00A",x"2F0F",x"A00A",x"428E",x"2F10",x"A00A",x"A00D",x"A00B", -- 0370-037F 
  x"A00E",x"2F00",x"A00A",x"A00D",x"A00B",x"A008",x"9028",x"003C",x"4320",x"3223",x"0003",x"41F9",x"2F07",x"A00A",x"436A",x"2F06", -- 0380-038F 
  x"A00A",x"436A",x"003C",x"4320",x"3227",x"0004",x"41F9",x"003C",x"4320",x"322C",x"0003",x"41F9",x"2F0F",x"A00A",x"436A",x"2F13", -- 0390-039F 
  x"A00A",x"436A",x"003C",x"4320",x"3230",x"0004",x"41F9",x"2F0F",x"A00A",x"2F07",x"A009",x"2F13",x"A00A",x"2F06",x"A009",x"000A", -- 03A0-03AF 
  x"4320",x"A003",x"FFC1",x"3235",x"000A",x"478E",x"A003",x"FFFB",x"3240",x"0007",x"478E",x"4377",x"3248",x"0019",x"41F9",x"0020", -- 03B0-03BF 
  x"4320",x"0008",x"4320",x"4319",x"001B",x"4295",x"9FF8",x"A003",x"FFEF",x"3262",x"0005",x"478E",x"B501",x"2F0E",x"A009",x"0000", -- 03C0-03CF 
  x"2F10",x"A009",x"4377",x"2F0A",x"A00A",x"2F0C",x"A00A",x"2F0A",x"A00A",x"428E",x"0001",x"428E",x"433F",x"3268",x"0003",x"41F9", -- 03D0-03DF 
  x"326C",x"000A",x"41F3",x"46D3",x"4377",x"3277",x"0016",x"41F9",x"436A",x"43BB",x"4720",x"A003",x"FFDC",x"328E",x"0004",x"478E", -- 03E0-03EF 
  x"2801",x"A00A",x"2F15",x"A009",x"A003",x"FFF7",x"3293",x"0004",x"478E",x"2801",x"A00A",x"2F15",x"A00A",x"428E",x"9002",x"0009", -- 03F0-03FF 
  x"43CC",x"A003",x"FFF3",x"3298",x"0005",x"478E",x"0001",x"A007",x"2F17",x"A00A",x"B502",x"428E",x"B501",x"2F17",x"A009",x"A009", -- 0400-040F 
  x"A003",x"FFF1",x"329E",x"0009",x"478E",x"2F17",x"A00A",x"B501",x"A00A",x"A007",x"2F17",x"A009",x"A003",x"FFF4",x"32A8",x"0002", -- 0410-041F 
  x"478E",x"2F17",x"A00A",x"0001",x"A007",x"A003",x"FFF7",x"32AB",x"0002",x"478E",x"2F17",x"A00A",x"0002",x"A007",x"A003",x"FFF7", -- 0420-042F 
  x"32AE",x"0002",x"478E",x"2F17",x"A00A",x"0003",x"A007",x"A003",x"FFF7",x"32B1",x"0002",x"478E",x"2F17",x"A00A",x"0004",x"A007", -- 0430-043F 
  x"A003",x"FFF7",x"32B4",x"0002",x"478E",x"2F17",x"A00A",x"0005",x"A007",x"A003",x"FFF7",x"32B7",x"0002",x"478E",x"2F17",x"A00A", -- 0440-044F 
  x"0006",x"A007",x"A003",x"FFF7",x"32BA",x"0002",x"478E",x"2F17",x"A00A",x"0007",x"A007",x"A003",x"FFF7",x"32BD",x"0002",x"478E", -- 0450-045F 
  x"2F17",x"A00A",x"0008",x"A007",x"A003",x"FFF7",x"32C0",x"0001",x"4780",x"0020",x"45F2",x"466C",x"46AC",x"B300",x"4287",x"2F10", -- 0460-046F 
  x"A00A",x"9001",x"4059",x"A003",x"FFF1",x"32C2",x"0005",x"478E",x"B501",x"A00A",x"0001",x"A007",x"B501",x"03FF",x"A008",x"0000", -- 0470-047F 
  x"4295",x"9002",x"0400",x"428E",x"B412",x"A009",x"A003",x"FFED",x"32C8",x"0007",x"478E",x"2800",x"A00A",x"B501",x"0008",x"429C", -- 0480-048F 
  x"9009",x"0018",x"A007",x"A00A",x"B501",x"9002",x"B501",x"4312",x"B300",x"8018",x"2F03",x"A00A",x"A009",x"2F03",x"4478",x"2F03", -- 0490-049F 
  x"A00A",x"2F04",x"A00A",x"428E",x"03FF",x"A008",x"0080",x"42AE",x"9009",x"2F05",x"A00A",x"A00D",x"9005",x"FFFF",x"2F05",x"A009", -- 04A0-04AF 
  x"0013",x"4320",x"0000",x"2800",x"A009",x"A003",x"FFD1",x"32D0",x"0008",x"478E",x"2F04",x"A00A",x"2F03",x"A00A",x"4295",x"9003", -- 04B0-04BF 
  x"0000",x"0000",x"8018",x"2F04",x"A00A",x"A00A",x"FFFF",x"2F04",x"4478",x"2F03",x"A00A",x"2F04",x"A00A",x"428E",x"03FF",x"A008", -- 04C0-04CF 
  x"0020",x"429C",x"9008",x"2F05",x"A00A",x"9005",x"0000",x"2F05",x"A009",x"0011",x"4320",x"A003",x"FFDA",x"32D9",x"0006",x"478E", -- 04D0-04DF 
  x"0005",x"4406",x"4433",x"A009",x"442A",x"A009",x"442A",x"A00A",x"4445",x"A009",x"4319",x"B501",x"0014",x"4295",x"9004",x"B300", -- 04E0-04EF 
  x"442A",x"A00A",x"427B",x"B501",x"007F",x"4295",x"9002",x"B300",x"0008",x"B501",x"0008",x"4295",x"9012",x"4445",x"A00A",x"442A", -- 04F0-04FF 
  x"A00A",x"429C",x"900C",x"FFFF",x"442A",x"42C9",x"0001",x"4433",x"42C9",x"0008",x"4320",x"0020",x"4320",x"0008",x"4320",x"B501", -- 0500-050F 
  x"0020",x"429C",x"9001",x"8012",x"FFFF",x"4433",x"42C9",x"4433",x"A00A",x"A00F",x"9002",x"0006",x"43CC",x"B501",x"4320",x"B501", -- 0510-051F 
  x"442A",x"A00A",x"4281",x"0001",x"442A",x"42C9",x"B501",x"0020",x"429C",x"B502",x"0008",x"4295",x"A00B",x"A008",x"B412",x"001B", -- 0520-052F 
  x"4295",x"A00B",x"A008",x"4433",x"A00A",x"A00D",x"A00E",x"9FB2",x"0020",x"4320",x"4445",x"A00A",x"442A",x"A00A",x"4445",x"A00A", -- 0530-053F 
  x"428E",x"B603",x"A007",x"0000",x"B412",x"4281",x"4415",x"A003",x"FF94",x"32E0",x"0005",x"478E",x"B501",x"0030",x"429C",x"A00B", -- 0540-054F 
  x"B502",x"003A",x"429C",x"A008",x"B502",x"0041",x"429C",x"A00B",x"A00E",x"B501",x"9015",x"B412",x"0030",x"428E",x"B501",x"000A", -- 0550-055F 
  x"429C",x"A00B",x"9002",x"0007",x"428E",x"B501",x"2F08",x"A00A",x"429C",x"A00B",x"9004",x"B300",x"B300",x"0000",x"0000",x"B412", -- 0560-056F 
  x"A003",x"FFD7",x"32E6",x"0006",x"478E",x"51F1",x"A003",x"442A",x"A009",x"4421",x"A009",x"0000",x"442A",x"A00A",x"9063",x"B501", -- 0570-057F 
  x"4433",x"A009",x"0001",x"444E",x"A009",x"FFFF",x"4457",x"A009",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"002B",x"4295", -- 0580-058F 
  x"9009",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"8016",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B", -- 0590-059F 
  x"002D",x"4295",x"900D",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"444E",x"A00A",x"A000",x"444E",x"A009", -- 05A0-05AF 
  x"4457",x"A00A",x"9FD2",x"4433",x"A00A",x"442A",x"A00A",x"429C",x"9029",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"B501", -- 05B0-05BF 
  x"9015",x"454C",x"A00B",x"9007",x"B300",x"442A",x"A00A",x"A000",x"442A",x"A009",x"800A",x"B412",x"2F08",x"A00A",x"42B5",x"A007", -- 05C0-05CF 
  x"4433",x"A00A",x"4287",x"4433",x"A009",x"8005",x"B300",x"4433",x"A00A",x"442A",x"A009",x"4433",x"A00A",x"442A",x"A00A",x"429C", -- 05D0-05DF 
  x"A00B",x"9FD7",x"444E",x"A00A",x"A00F",x"9001",x"A000",x"4433",x"A00A",x"442A",x"A00A",x"428E",x"4415",x"A003",x"FF83",x"32ED", -- 05E0-05EF 
  x"0004",x"478E",x"42E7",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"427B",x"42FE",x"4295",x"2F0C",x"A00A",x"2F0D",x"A00A", -- 05F0-05FF 
  x"429C",x"A008",x"9004",x"0001",x"2F0C",x"42C9",x"8FF0",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"427B",x"003C",x"4295", -- 0600-060F 
  x"9004",x"2F0C",x"A00A",x"2F0D",x"A009",x"2F0C",x"A00A",x"427B",x"42FE",x"4295",x"A00B",x"2F0C",x"A00A",x"2F0D",x"A00A",x"429C", -- 0610-061F 
  x"A008",x"9004",x"0001",x"2F0C",x"42C9",x"8FE5",x"2F0B",x"A00A",x"2F0C",x"A00A",x"B502",x"428E",x"B501",x"9003",x"0001",x"2F0C", -- 0620-062F 
  x"42C9",x"42D4",x"B300",x"A003",x"FFBA",x"32F2",x"0002",x"478E",x"42E7",x"B502",x"42FE",x"428E",x"9007",x"42D4",x"B300",x"B300", -- 0630-063F 
  x"B300",x"B300",x"0000",x"8023",x"42D4",x"B300",x"B412",x"0000",x"B603",x"428E",x"9016",x"42E7",x"42E7",x"B502",x"427B",x"B502", -- 0640-064F 
  x"427B",x"428E",x"9004",x"B300",x"B300",x"0000",x"0000",x"B501",x"9004",x"4287",x"B412",x"4287",x"B412",x"42D4",x"42D4",x"4287", -- 0650-065F 
  x"8FE7",x"B200",x"B300",x"9002",x"FFFF",x"8001",x"0000",x"A003",x"FFCC",x"32F5",x"0004",x"478E",x"42E7",x"42E7",x"0000",x"2F11", -- 0660-066F 
  x"A00A",x"2F01",x"A00A",x"9003",x"B501",x"A00A",x"A007",x"B501",x"4287",x"B501",x"A00A",x"B412",x"4287",x"A00A",x"42D4",x"42D4", -- 0670-067F 
  x"B603",x"42E7",x"42E7",x"4638",x"9003",x"B412",x"A00D",x"B412",x"B502",x"A00D",x"B502",x"A00A",x"A00D",x"A00B",x"A008",x"B502", -- 0680-068F 
  x"B501",x"A00A",x"A007",x"2F11",x"A00A",x"4295",x"A00B",x"A008",x"9004",x"B501",x"A00A",x"A007",x"8FDA",x"42D4",x"B300",x"42D4", -- 0690-069F 
  x"B434",x"A00D",x"9004",x"B300",x"B300",x"0000",x"0000",x"A003",x"FFC0",x"32FA",x"0004",x"478E",x"B412",x"0003",x"A007",x"B412", -- 06A0-06AF 
  x"A003",x"FFF7",x"32FF",x"0008",x"478E",x"404F",x"4000",x"A007",x"4307",x"A003",x"FFF7",x"3308",x"0006",x"478E",x"43F0",x"2F0F", -- 06B0-06BF 
  x"A00A",x"2F11",x"A00A",x"B502",x"428E",x"4307",x"2F11",x"A009",x"0020",x"45F2",x"41C0",x"0001",x"2F01",x"A009",x"A003",x"FFEB", -- 06C0-06CF 
  x"330F",x"0009",x"478E",x"2F0A",x"A00A",x"42E7",x"2F0B",x"A00A",x"42E7",x"2F0C",x"A00A",x"42E7",x"2F0D",x"A00A",x"42E7",x"B502", -- 06D0-06DF 
  x"A007",x"2F0D",x"A009",x"B501",x"2F0A",x"A009",x"B501",x"2F0B",x"A009",x"2F0C",x"A009",x"0020",x"45F2",x"B501",x"901F",x"B603", -- 06E0-06EF 
  x"466C",x"B501",x"9009",x"42E7",x"42E7",x"B200",x"42D4",x"42D4",x"46AC",x"B300",x"4312",x"8011",x"B200",x"B603",x"4575",x"9005", -- 06F0-06FF 
  x"B200",x"B300",x"0003",x"43CC",x"8008",x"B434",x"B300",x"B412",x"B300",x"2F10",x"A00A",x"9001",x"4059",x"8FDD",x"B200",x"42D4", -- 0700-070F 
  x"2F0D",x"A009",x"42D4",x"2F0C",x"A009",x"42D4",x"2F0B",x"A009",x"42D4",x"2F0A",x"A009",x"A003",x"FFB3",x"3319",x"0004",x"478E", -- 0710-071F 
  x"2F02",x"A00A",x"2802",x"A009",x"2F00",x"A00A",x"9006",x"003C",x"4320",x"331E",x"0004",x"41F9",x"8003",x"3323",x"0002",x"41F9", -- 0720-072F 
  x"4377",x"2F09",x"A00A",x"0100",x"44E0",x"B502",x"A00A",x"003C",x"4295",x"9002",x"B200",x"802B",x"2F00",x"A00A",x"900C",x"003C", -- 0730-073F 
  x"4320",x"3326",x"0003",x"41F9",x"46D3",x"003C",x"4320",x"332A",x"0004",x"41F9",x"801C",x"001B",x"4320",x"005B",x"4320",x"0033", -- 0740-074F 
  x"4320",x"0036",x"4320",x"006D",x"4320",x"46D3",x"2F10",x"A00A",x"A00D",x"9003",x"332F",x"0002",x"41F9",x"001B",x"4320",x"005B", -- 0750-075F 
  x"4320",x"0033",x"4320",x"0039",x"4320",x"006D",x"4320",x"8FC8",x"A003",x"FFB3",x"3332",x"0005",x"478E",x"3338",x"000B",x"41F9", -- 0760-076F 
  x"4377",x"4377",x"4720",x"A003",x"FFF5",x"3344",x"0006",x"478E",x"0000",x"2F01",x"A009",x"A003",x"FFF8",x"334B",x"000C",x"478E", -- 0770-077F 
  x"42D4",x"42E7",x"A003",x"FFF9",x"3358",x"000A",x"478E",x"42D4",x"46B5",x"A003",x"FFF9",x"3363",x"0003",x"478E",x"42D4",x"2F10", -- 0780-078F 
  x"A00A",x"9002",x"46B5",x"8001",x"42E7",x"A003",x"FFF4",x"3367",x"000A",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"477F",x"A003", -- 0790-079F 
  x"FFF6",x"3372",x"0008",x"478E",x"46BE",x"0001",x"2F10",x"A009",x"4786",x"A003",x"FFF6",x"337B",x"0001",x"478E",x"46BE",x"0001", -- 07A0-07AF 
  x"2F10",x"A009",x"478D",x"A003",x"FFF6",x"337D",x"0001",x"4780",x"0000",x"2F10",x"A009",x"43F9",x"404F",x"A003",x"4307",x"4778", -- 07B0-07BF 
  x"A003",x"FFF3",x"337F",x"0005",x"478E",x"41FF",x"A003",x"FFFA",x"3385",x"0003",x"478E",x"47C5",x"A00A",x"9005",x"4327",x"B300", -- 07C0-07CF 
  x"4327",x"B300",x"8006",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"4327",x"4331",x"4320",x"B300", -- 07D0-07DF 
  x"A003",x"FFE6",x"3389",x"0003",x"478E",x"338D",x"0001",x"41F9",x"0022",x"4320",x"47CB",x"0022",x"4320",x"338F",x"0001",x"41F9", -- 07E0-07EF 
  x"A003",x"FFF0",x"3391",x"0005",x"478E",x"47C5",x"A009",x"2F00",x"A00A",x"42E7",x"0000",x"2F00",x"A009",x"3397",x"0008",x"41F3", -- 07F0-07FF 
  x"46D3",x"404F",x"4000",x"A007",x"0010",x"A009",x"4377",x"003C",x"4320",x"33A0",x"0006",x"41F9",x"4377",x"33A7",x"0002",x"41F9", -- 0800-080F 
  x"0000",x"B603",x"A007",x"B501",x"2F03",x"4295",x"9002",x"B300",x"2F04",x"B501",x"2F17",x"4295",x"9009",x"B300",x"2F00",x"41FF", -- 0810-081F 
  x"0001",x"A007",x"A009",x"41FF",x"0001",x"A007",x"A00A",x"47E5",x"4287",x"B501",x"0010",x"4295",x"9FE4",x"B300",x"33AA",x"0004", -- 0820-082F 
  x"41F9",x"B501",x"4350",x"33AF",x"0001",x"41F9",x"B501",x"000F",x"A007",x"436A",x"0010",x"A007",x"B603",x"42AE",x"A00B",x"9FCC", -- 0830-083F 
  x"B200",x"4377",x"003C",x"4320",x"33B1",x"0007",x"41F9",x"42D4",x"2F00",x"A009",x"A003",x"FFA6",x"33B9",x"0005",x"4068",x"2F18", -- 0840-084F 
  x"FFFB",x"33BF",x"0008",x"478E",x"2F18",x"A00A",x"B501",x"4073",x"B501",x"4287",x"2F18",x"A009",x"A009",x"A003",x"FFF2",x"33C8", -- 0850-085F 
  x"0004",x"478E",x"B501",x"900D",x"42E7",x"B502",x"A00A",x"B502",x"A009",x"B412",x"4287",x"B412",x"4287",x"42D4",x"0001",x"428E", -- 0860-086F 
  x"8FF1",x"B300",x"B200",x"A003",x"FFEA",x"33CD",x"0004",x"478E",x"B434",x"B434",x"B501",x"9009",x"42E7",x"B603",x"A009",x"0001", -- 0870-087F 
  x"A007",x"42D4",x"0001",x"428E",x"8FF5",x"B300",x"B200",x"A003",x"FFEC",x"33D2",x"0004",x"478E",x"B412",x"B501",x"A00A",x"436A", -- 0880-088F 
  x"0001",x"A007",x"B412",x"0001",x"428E",x"B501",x"A00D",x"9FF4",x"B300",x"A003",x"FFEE",x"33D7",x"0003",x"478E",x"B603",x"429C", -- 0890-089F 
  x"9001",x"B412",x"B300",x"A003",x"FFF6",x"33DB",x"0003",x"478E",x"B603",x"42AE",x"9001",x"B412",x"B300",x"A003",x"FFF6",x"33DF", -- 08A0-08AF 
  x"0003",x"478E",x"B501",x"A00F",x"9001",x"A000",x"A003",x"FFF7",x"33E3",x"0006",x"4112",x"A017",x"A003",x"FFFA",x"33EA",x"0007", -- 08B0-08BF 
  x"4112",x"A018",x"A003",x"FFFA",x"33F2",x"0009",x"478E",x"42E7",x"A017",x"A018",x"9FFD",x"42D4",x"B300",x"A003",x"FFF5",x"33FC", -- 08C0-08CF 
  x"0001",x"4068",x"1401",x"FFFB",x"33FE",x"0001",x"4068",x"1601",x"FFFB",x"3400",x"0001",x"4068",x"1801",x"FFFB",x"3402",x"0004", -- 08D0-08DF 
  x"478E",x"0007",x"4406",x"4457",x"A009",x"444E",x"A009",x"4445",x"A009",x"443C",x"A009",x"4433",x"A009",x"442A",x"A009",x"4421", -- 08E0-08EF 
  x"A009",x"4421",x"A00A",x"443C",x"A00A",x"9001",x"A00B",x"442A",x"A00A",x"4445",x"A00A",x"A007",x"4287",x"4457",x"A00A",x"B502", -- 08F0-08FF 
  x"0000",x"4878",x"4457",x"A00A",x"B501",x"4433",x"A00A",x"442A",x"A00A",x"0000",x"B60C",x"A00A",x"B434",x"B434",x"444E",x"A00A", -- 0900-090F 
  x"4445",x"A00A",x"48C7",x"B300",x"A009",x"B300",x"B434",x"0001",x"A007",x"B434",x"0001",x"A007",x"B434",x"FFFF",x"A007",x"B501", -- 0910-091F 
  x"A00D",x"9FE7",x"B300",x"B200",x"4415",x"A003",x"FFB7",x"3407",x"0006",x"478E",x"0007",x"4406",x"4457",x"A009",x"444E",x"A009", -- 0920-092F 
  x"4445",x"A009",x"443C",x"A009",x"4433",x"A009",x"442A",x"A009",x"4421",x"A009",x"4421",x"A00A",x"442A",x"A00A",x"4445",x"A00A", -- 0930-093F 
  x"489E",x"4287",x"4457",x"A00A",x"4421",x"A00A",x"443C",x"A00A",x"4295",x"903C",x"0000",x"442A",x"A00A",x"4445",x"A00A",x"489E", -- 0940-094F 
  x"0000",x"B434",x"B502",x"B501",x"442A",x"A00A",x"429C",x"9009",x"4433",x"A00A",x"B501",x"A00A",x"B412",x"4287",x"4433",x"A009", -- 0950-095F 
  x"8001",x"0000",x"B412",x"4445",x"A00A",x"429C",x"9009",x"444E",x"A00A",x"B501",x"A00A",x"B412",x"4287",x"444E",x"A009",x"8001", -- 0960-096F 
  x"0000",x"A001",x"4457",x"A00A",x"B501",x"4287",x"4457",x"A009",x"A009",x"B434",x"B434",x"0001",x"A007",x"B603",x"428E",x"A00D", -- 0970-097F 
  x"9FD0",x"B200",x"4457",x"A00A",x"A009",x"8065",x"B412",x"0001",x"428E",x"B412",x"0001",x"442A",x"A00A",x"4445",x"A00A",x"489E", -- 0980-098F 
  x"0000",x"B434",x"B502",x"B501",x"442A",x"A00A",x"429C",x"9009",x"4433",x"A00A",x"B501",x"A00A",x"B412",x"4287",x"4433",x"A009", -- 0990-099F 
  x"8001",x"0000",x"B412",x"4445",x"A00A",x"429C",x"900A",x"444E",x"A00A",x"B501",x"A00A",x"B412",x"4287",x"444E",x"A009",x"A00B", -- 09A0-09AF 
  x"8001",x"FFFF",x"A001",x"4457",x"A00A",x"B501",x"4287",x"4457",x"A009",x"A009",x"B434",x"B434",x"0001",x"A007",x"B603",x"428E", -- 09B0-09BF 
  x"A00D",x"9FCF",x"B200",x"A00D",x"9026",x"B501",x"4457",x"A009",x"B434",x"A00B",x"B434",x"B434",x"0001",x"442A",x"A00A",x"4445", -- 09C0-09CF 
  x"A00A",x"489E",x"0000",x"B434",x"0000",x"4457",x"A00A",x"A00A",x"A00B",x"A001",x"4457",x"A00A",x"B501",x"4287",x"4457",x"A009", -- 09D0-09DF 
  x"A009",x"B434",x"B434",x"0001",x"A007",x"B603",x"428E",x"A00D",x"9FEA",x"B200",x"B300",x"4415",x"A003",x"FF39",x"340E",x"0004", -- 09E0-09EF 
  x"4112",x"A014",x"A003",x"FFFA",x"3413",x"0005",x"478E",x"0010",x"42E7",x"A014",x"42D4",x"0001",x"428E",x"B501",x"A00D",x"9FF8", -- 09F0-09FF 
  x"B200",x"A003",x"FFF1",x"3419",x"0004",x"478E",x"0000",x"B434",x"B434",x"49F7",x"A003",x"FFF7",x"341E",x"0004",x"478E",x"B502", -- 0A00-0A0F 
  x"A00F",x"9012",x"B412",x"A000",x"B412",x"B501",x"A00F",x"9006",x"A000",x"4A06",x"B412",x"A000",x"B412",x"8005",x"4A06",x"A000", -- 0A10-0A1F 
  x"B412",x"A000",x"B412",x"8008",x"B501",x"A00F",x"9004",x"A000",x"4A06",x"A000",x"8001",x"4A06",x"A003",x"FFDE",x"3423",x"0001", -- 0A20-0A2F 
  x"478E",x"4A0F",x"B412",x"B300",x"A003",x"FFF8",x"3425",x"0003",x"478E",x"4A0F",x"B300",x"A003",x"FFF9",x"3429",x"0004",x"478E", -- 0A30-0A3F 
  x"0007",x"4406",x"4457",x"A009",x"444E",x"A009",x"4445",x"A009",x"443C",x"A009",x"4433",x"A009",x"442A",x"A009",x"4421",x"A009", -- 0A40-0A4F 
  x"442A",x"A00A",x"4445",x"A00A",x"429C",x"900A",x"4421",x"A00A",x"442A",x"A00A",x"4433",x"A00A",x"0000",x"0000",x"0000",x"80E1", -- 0A50-0A5F 
  x"442A",x"A00A",x"0000",x"4433",x"A00A",x"B502",x"A007",x"A00A",x"A00B",x"B502",x"4457",x"A00A",x"A007",x"A009",x"0001",x"A007", -- 0A60-0A6F 
  x"B603",x"428E",x"A00D",x"9FEF",x"B200",x"4457",x"A00A",x"442A",x"A00A",x"A007",x"4445",x"A00A",x"428E",x"4433",x"A009",x"FFFF", -- 0A70-0A7F 
  x"4457",x"A00A",x"442A",x"A00A",x"A007",x"A009",x"0001",x"442A",x"42C9",x"442A",x"A00A",x"4445",x"A00A",x"428E",x"0000",x"4433", -- 0A80-0A8F 
  x"A00A",x"4445",x"A00A",x"A007",x"A00A",x"A00B",x"4433",x"A00A",x"4445",x"A00A",x"A007",x"0001",x"428E",x"A00A",x"A00B",x"444E", -- 0A90-0A9F 
  x"A00A",x"4445",x"A00A",x"A007",x"0001",x"428E",x"A00A",x"49F7",x"B412",x"B300",x"B501",x"4433",x"A00A",x"4445",x"A00A",x"A007", -- 0AA0-0AAF 
  x"4287",x"A009",x"0000",x"4433",x"A00A",x"444E",x"A00A",x"4445",x"A00A",x"48C7",x"B200",x"B412",x"B300",x"0000",x"4433",x"A00A", -- 0AB0-0ABF 
  x"4445",x"A00A",x"A007",x"A00A",x"A001",x"4433",x"A00A",x"4445",x"A00A",x"A007",x"A009",x"902C",x"0001",x"4445",x"A00A",x"0000", -- 0AC0-0ACF 
  x"B434",x"B502",x"4433",x"A00A",x"B502",x"A007",x"A00A",x"B412",x"444E",x"A00A",x"A007",x"A00A",x"A00B",x"A001",x"B412",x"42E7", -- 0AD0-0ADF 
  x"B502",x"4433",x"A00A",x"A007",x"A009",x"42D4",x"B434",x"B434",x"0001",x"A007",x"B603",x"428E",x"A00D",x"9FE2",x"B200",x"FFFF", -- 0AE0-0AEF 
  x"4433",x"A00A",x"4445",x"A00A",x"A007",x"4287",x"42C9",x"8FD3",x"FFFF",x"4433",x"42C9",x"0001",x"A007",x"B603",x"428E",x"A00D", -- 0AF0-0AFF 
  x"9F8E",x"B200",x"4445",x"A00A",x"0000",x"4457",x"A00A",x"B502",x"A007",x"A00A",x"A00B",x"B502",x"4457",x"A00A",x"A007",x"A009", -- 0B00-0B0F 
  x"0001",x"A007",x"B603",x"428E",x"A00D",x"9FEF",x"B200",x"4445",x"A00A",x"4457",x"A00A",x"0001",x"428E",x"A009",x"442A",x"A00A", -- 0B10-0B1F 
  x"4445",x"A00A",x"428E",x"4457",x"A00A",x"4445",x"A00A",x"A007",x"A009",x"4421",x"A00A",x"4445",x"A00A",x"4457",x"A00A",x"4421", -- 0B20-0B2F 
  x"A00A",x"443C",x"A00A",x"9001",x"A00B",x"442A",x"A00A",x"4445",x"A00A",x"428E",x"4457",x"A00A",x"4445",x"A00A",x"A007",x"0001", -- 0B30-0B3F 
  x"A007",x"4415",x"A003",x"FEF9",x"342E",x"0008",x"4068",x"2F19",x"FFFB",x"3437",x"0008",x"4068",x"2F1A",x"FFFB",x"3440",x"0008", -- 0B40-0B4F 
  x"4068",x"2F1B",x"FFFB",x"3449",x"000E",x"4068",x"2F1C",x"FFFB",x"3458",x"000C",x"4068",x"2F1D",x"FFFB",x"3465",x"0006",x"4068", -- 0B50-0B5F 
  x"2F1E",x"FFFB",x"346C",x"000D",x"478E",x"B502",x"A00D",x"9004",x"B200",x"B300",x"0000",x"8031",x"B603",x"A007",x"0001",x"428E", -- 0B60-0B6F 
  x"B501",x"A00A",x"A00D",x"A00B",x"9FF9",x"0001",x"A007",x"B502",x"489E",x"B603",x"4295",x"9004",x"B200",x"B200",x"0000",x"801D", -- 0B70-0B7F 
  x"B502",x"428E",x"B502",x"A00A",x"C000",x"A008",x"A00D",x"B502",x"0001",x"4295",x"A008",x"9003",x"B300",x"A00A",x"8009",x"B502", -- 0B80-0B8F 
  x"0001",x"428E",x"A009",x"0001",x"428E",x"404F",x"4000",x"A00E",x"B412",x"B300",x"B412",x"9001",x"A000",x"A003",x"FFC3",x"347A", -- 0B90-0B9F 
  x"000C",x"478E",x"B501",x"A00A",x"B501",x"A00F",x"9003",x"A000",x"FFFF",x"8001",x"0000",x"B434",x"B434",x"B501",x"404F",x"4000", -- 0BA0-0BAF 
  x"A008",x"9009",x"B412",x"B300",x"3FFF",x"A008",x"B501",x"A00A",x"B412",x"4287",x"8004",x"B502",x"A009",x"0001",x"B412",x"A003", -- 0BB0-0BBF 
  x"FFDE",x"3487",x"000B",x"478E",x"2F1B",x"A00A",x"B603",x"A009",x"4287",x"B603",x"A007",x"2F1B",x"A009",x"B603",x"B412",x"0000", -- 0BC0-0BCF 
  x"4878",x"B412",x"B300",x"2F1B",x"A00A",x"2F1D",x"A00A",x"429C",x"A00B",x"9002",x"0369",x"43CC",x"A003",x"FFE3",x"3493",x"0010", -- 0BD0-0BDF 
  x"478E",x"2F1A",x"A009",x"2F19",x"A009",x"2F19",x"4BA2",x"B502",x"42E7",x"2F1A",x"4BA2",x"B502",x"42D4",x"A007",x"4287",x"4BC4", -- 0BE0-0BEF 
  x"A003",x"FFEC",x"34A4",x"0002",x"478E",x"4BE1",x"492A",x"4B65",x"A003",x"FFF8",x"34A7",x"0002",x"478E",x"A000",x"4BF5",x"A003", -- 0BF0-0BFF 
  x"FFF9",x"34AA",x"0002",x"478E",x"4BE1",x"48E1",x"4B65",x"A003",x"FFF8",x"34AD",x"0007",x"4780",x"2F11",x"A00A",x"0004",x"A007", -- 0C00-0C0F 
  x"46B5",x"A003",x"FFF6",x"34B5",x"0005",x"478E",x"B501",x"A00D",x"9002",x"0000",x"43CC",x"B501",x"2F19",x"A009",x"2F19",x"4BA2", -- 0C10-0C1F 
  x"B434",x"B300",x"B502",x"A007",x"0001",x"428E",x"A00A",x"B412",x"0001",x"42AE",x"9018",x"0001",x"B502",x"A00F",x"A00B",x"9007", -- 0C20-0C2F 
  x"B412",x"B501",x"A007",x"B412",x"B501",x"4BF5",x"8FF5",x"B412",x"B300",x"B501",x"2F1E",x"A009",x"B434",x"B502",x"4C04",x"B434", -- 0C30-0C3F 
  x"B434",x"4C04",x"8004",x"B300",x"0001",x"2F1E",x"A009",x"4BE1",x"4A40",x"4B65",x"42E7",x"4B65",x"42D4",x"2F1E",x"A00A",x"0001", -- 0C40-0C4F 
  x"428E",x"9007",x"B412",x"2F1E",x"A00A",x"4C16",x"B412",x"B300",x"B412",x"A003",x"FFB8",x"34BB",x"0004",x"478E",x"0000",x"42E7", -- 0C50-0C5F 
  x"4327",x"B501",x"9007",x"4331",x"4320",x"42D4",x"B300",x"FFFF",x"42E7",x"8001",x"B300",x"4327",x"B501",x"42FE",x"A00E",x"9007", -- 0C60-0C6F 
  x"4331",x"4320",x"42D4",x"B300",x"FFFF",x"42E7",x"8001",x"B300",x"4327",x"B501",x"42FE",x"A00E",x"9003",x"4331",x"4320",x"8001", -- 0C70-0C7F 
  x"B300",x"4327",x"4331",x"4320",x"B300",x"42D4",x"B300",x"A003",x"FFD2",x"34C0",x"0002",x"478E",x"2F19",x"A009",x"2F19",x"4BA2", -- 0C80-0C8F 
  x"B434",x"9003",x"34C3",x"0001",x"41F9",x"B502",x"A007",x"0001",x"428E",x"B501",x"A00A",x"4C5E",x"B412",x"0001",x"428E",x"B412", -- 0C90-0C9F 
  x"B502",x"900A",x"0001",x"428E",x"B501",x"A00A",x"4350",x"B412",x"0001",x"428E",x"B412",x"8FF4",x"B300",x"B300",x"0020",x"4320", -- 0CA0-0CAF 
  x"A003",x"FFD7",x"34C5",x"0003",x"478E",x"B412",x"4C8C",x"4C8C",x"A003",x"FFF8",x"34C9",x"000B",x"4068",x"2F1F",x"FFFB",x"34D5", -- 0CB0-0CBF 
  x"0009",x"4068",x"2F20",x"FFFB",x"34DF",x"000D",x"478E",x"2F1B",x"A00A",x"A003",x"FFF9",x"34ED",x"000D",x"478E",x"2F1B",x"A009", -- 0CC0-0CCF 
  x"A003",x"FFF9",x"34FB",x"000B",x"478E",x"2F20",x"A00A",x"2F1F",x"A009",x"2F1B",x"A00A",x"2F20",x"A009",x"A003",x"FFF3",x"3507", -- 0CD0-0CDF 
  x"0004",x"478E",x"2F1C",x"A00A",x"2F1B",x"A009",x"4CD5",x"4CD5",x"A003",x"FFF5",x"350C",x"0003",x"478E",x"B501",x"2F19",x"A009", -- 0CE0-0CEF 
  x"2F19",x"4BA2",x"B501",x"2F19",x"428E",x"B300",x"0001",x"901A",x"B502",x"2F1B",x"A00A",x"4287",x"B412",x"4862",x"2F1B",x"A00A", -- 0CF0-0CFF 
  x"4287",x"B502",x"4287",x"2F1B",x"42C9",x"2F1B",x"A00A",x"2F1D",x"A00A",x"429C",x"A00B",x"9002",x"0369",x"43CC",x"4B65",x"B412", -- 0D00-0D0F 
  x"B300",x"8002",x"B200",x"B300",x"A003",x"FFD4",x"3510",x"0003",x"478E",x"B412",x"4CED",x"B412",x"4CED",x"A003",x"FFF7",x"3514", -- 0D10-0D1F 
  x"0002",x"478E",x"4CC7",x"B434",x"B434",x"4C16",x"B412",x"B300",x"B412",x"4CCE",x"4CED",x"A003",x"FFF2",x"3517",x"0004",x"478E", -- 0D20-0D2F 
  x"4CC7",x"B434",x"B434",x"4C16",x"B300",x"B412",x"4CCE",x"4CED",x"A003",x"FFF3",x"351C",x"0004",x"478E",x"4CC7",x"B434",x"B434", -- 0D30-0D3F 
  x"B501",x"9004",x"B412",x"B502",x"4D30",x"8FFA",x"B300",x"B412",x"4CCE",x"4CED",x"A003",x"FFEE",x"3521",x"0003",x"478E",x"4CC7", -- 0D40-0D4F 
  x"B434",x"B434",x"B603",x"4D3D",x"B434",x"B502",x"4D22",x"B434",x"B434",x"4D22",x"B434",x"4CCE",x"4D19",x"A003",x"FFED",x"3525", -- 0D50-0D5F 
  x"0007",x"478E",x"4CC7",x"B434",x"B434",x"0007",x"4406",x"442A",x"A009",x"4421",x"A009",x"0000",x"442A",x"A00A",x"9063",x"B501", -- 0D60-0D6F 
  x"4433",x"A009",x"0001",x"444E",x"A009",x"FFFF",x"4457",x"A009",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"002B",x"4295", -- 0D70-0D7F 
  x"9009",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"8016",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B", -- 0D80-0D8F 
  x"002D",x"4295",x"900D",x"4433",x"A00A",x"4287",x"4433",x"A009",x"0000",x"4457",x"A009",x"444E",x"A00A",x"A000",x"444E",x"A009", -- 0D90-0D9F 
  x"4457",x"A00A",x"9FD2",x"4433",x"A00A",x"442A",x"A00A",x"429C",x"9029",x"4421",x"A00A",x"4433",x"A00A",x"A007",x"427B",x"B501", -- 0DA0-0DAF 
  x"9015",x"454C",x"A00B",x"9007",x"B300",x"442A",x"A00A",x"A000",x"442A",x"A009",x"800A",x"B412",x"2F08",x"A00A",x"4C04",x"4BF5", -- 0DB0-0DBF 
  x"4433",x"A00A",x"4287",x"4433",x"A009",x"8005",x"B300",x"4433",x"A00A",x"442A",x"A009",x"4433",x"A00A",x"442A",x"A00A",x"429C", -- 0DC0-0DCF 
  x"A00B",x"9FD7",x"444E",x"A00A",x"A00F",x"9001",x"A000",x"4433",x"A00A",x"442A",x"A00A",x"428E",x"B501",x"9006",x"B300",x"4421", -- 0DD0-0DDF 
  x"A00A",x"4433",x"A00A",x"A007",x"4415",x"B434",x"4CCE",x"B412",x"4CED",x"B412",x"A003",x"FF73",x"352D",x"0002",x"0022",x"41D8", -- 0DE0-0DEF 
  x"4D62",x"B300",x"A003",x"FFF8",x"3530",x"0002",x"478E",x"4CC7",x"B434",x"B434",x"0004",x"4406",x"B501",x"A00F",x"9002",x"0012", -- 0DF0-0DFF 
  x"43CC",x"0002",x"443C",x"A009",x"4433",x"A009",x"442A",x"A009",x"0001",x"4433",x"A00A",x"443C",x"A00A",x"4A0F",x"4433",x"A009", -- 0E00-0E0F 
  x"9003",x"442A",x"A00A",x"4C04",x"4433",x"A00A",x"9008",x"442A",x"A00A",x"442A",x"A00A",x"4C04",x"442A",x"A009",x"8FEA",x"4415", -- 0E10-0E1F 
  x"B412",x"4CCE",x"4CED",x"A003",x"FFCF",x"3533",x"0002",x"478E",x"2F08",x"A00A",x"0010",x"4295",x"9002",x"4C8C",x"802C",x"4CC7", -- 0E20-0E2F 
  x"B412",x"B501",x"A00F",x"9004",x"A000",x"3536",x"0001",x"41F9",x"B501",x"A00D",x"9005",x"3538",x"0002",x"41F9",x"B300",x"801A", -- 0E30-0E3F 
  x"FFFF",x"B412",x"B501",x"9004",x"2F08",x"A00A",x"4C16",x"8FFA",x"B300",x"B501",x"A00F",x"A00B",x"900A",x"0030",x"A007",x"B501", -- 0E40-0E4F 
  x"0039",x"42AE",x"9002",x"0007",x"A007",x"4320",x"8FF2",x"0020",x"4320",x"B300",x"4CCE",x"A003",x"FFC8",x"353B",x"0003",x"478E", -- 0E50-0E5F 
  x"B412",x"4E28",x"4E28",x"A003",x"FFF8",x"353F",x"0006",x"478E",x"3FFF",x"A008",x"B501",x"4287",x"B412",x"A00A",x"A003",x"FFF5", -- 0E60-0E6F 
  x"3546",x"0004",x"478E",x"48B2",x"B501",x"404F",x"4000",x"429C",x"9003",x"B300",x"0000",x"800A",x"4E68",x"B412",x"B300",x"404F", -- 0E70-0E7F 
  x"4000",x"429C",x"9002",x"0000",x"8001",x"FFFF",x"A003",x"FFE8",x"354B",x"0001",x"478E",x"B502",x"4E73",x"9011",x"B412",x"4E68", -- 0E80-0E8F 
  x"3FFF",x"A008",x"B434",x"B603",x"42AE",x"9005",x"B412",x"B300",x"A007",x"A00A",x"8003",x"B200",x"B300",x"0000",x"8003",x"9002", -- 0E90-0E9F 
  x"B300",x"0000",x"A003",x"FFE4",x"354D",x"0001",x"478E",x"B603",x"4E8B",x"A003",x"FFF9",x"354F",x"0001",x"478E",x"B501",x"42E7", -- 0EA0-0EAF 
  x"B434",x"B434",x"B502",x"4E73",x"A00D",x"B502",x"A00D",x"A008",x"42D4",x"4E73",x"A00D",x"A008",x"9002",x"B200",x"806F",x"B502", -- 0EB0-0EBF 
  x"4E73",x"A00D",x"9017",x"B501",x"4287",x"4BC4",x"B434",x"B502",x"A009",x"404F",x"4000",x"B502",x"0001",x"428E",x"42C9",x"B501", -- 0EC0-0ECF 
  x"42E7",x"A007",x"A009",x"42D4",x"0001",x"428E",x"404F",x"4000",x"A007",x"8054",x"B502",x"4E68",x"3FFF",x"A008",x"B434",x"B603", -- 0ED0-0EDF 
  x"42AE",x"9008",x"B412",x"B300",x"B434",x"42E7",x"A007",x"A009",x"42D4",x"801B",x"B501",x"4287",x"4BC4",x"B412",x"42E7",x"B501", -- 0EE0-0EEF 
  x"42E7",x"B412",x"4862",x"B300",x"42D4",x"404F",x"4000",x"B502",x"0001",x"428E",x"42C9",x"B412",x"B502",x"42D4",x"A007",x"A009", -- 0EF0-0EFF 
  x"0001",x"428E",x"404F",x"4000",x"A007",x"4E68",x"3FFF",x"A008",x"B603",x"A007",x"0001",x"428E",x"A00A",x"A00D",x"B502",x"0001", -- 0F00-0F0F 
  x"42AE",x"A008",x"9003",x"0001",x"428E",x"8FF2",x"B502",x"A00A",x"4E73",x"A00D",x"B502",x"0001",x"4295",x"A008",x"9003",x"B300", -- 0F10-0F1F 
  x"A00A",x"800C",x"B412",x"0001",x"428E",x"B412",x"404F",x"4000",x"A007",x"B502",x"A009",x"404F",x"4000",x"A007",x"A003",x"FF7B", -- 0F20-0F2F 
  x"3551",x"0002",x"478E",x"B501",x"4E73",x"9017",x"3554",x"0002",x"41F9",x"4E68",x"3FFF",x"A008",x"B502",x"A007",x"B412",x"B603", -- 0F30-0F3F 
  x"42AE",x"9006",x"B501",x"A00A",x"4F33",x"0001",x"A007",x"8FF7",x"B200",x"3557",x"0002",x"41F9",x"8001",x"4E28",x"A003",x"FFE0", -- 0F40-0F4F 
  x"355A",x"0006",x"4068",x"2F21",x"FFFB",x"3561",x"0001",x"478E",x"2F21",x"A00A",x"2801",x"A00A",x"2F21",x"A009",x"A003",x"FFF5", -- 0F50-0F5F 
  x"3563",x"0001",x"478E",x"0000",x"2801",x"A00A",x"0001",x"428E",x"2F21",x"A00A",x"428E",x"900A",x"2801",x"A00A",x"0002",x"428E", -- 0F60-0F6F 
  x"2F21",x"A00A",x"428E",x"B434",x"4EAE",x"8FEE",x"B412",x"2F21",x"A009",x"A003",x"FFE5",x"3565",x"0005",x"478E",x"B501",x"4E73", -- 0F70-0F7F 
  x"901C",x"B501",x"42E7",x"4E68",x"3FFF",x"A008",x"B412",x"B502",x"A007",x"FFFF",x"A007",x"B412",x"B501",x"900C",x"B412",x"B501", -- 0F80-0F8F 
  x"A00A",x"4F7E",x"B502",x"A009",x"FFFF",x"A007",x"B412",x"FFFF",x"A007",x"8FF2",x"B200",x"42D4",x"8001",x"4CED",x"A003",x"FFDB", -- 0F90-0F9F 
  x"356B",x"0007",x"478E",x"B501",x"4E73",x"902A",x"4E68",x"3FFF",x"A008",x"B501",x"9023",x"B412",x"4377",x"B502",x"436A",x"B501", -- 0FA0-0FAF 
  x"436A",x"B501",x"A00A",x"B501",x"436A",x"B501",x"48B2",x"404F",x"4000",x"429C",x"9005",x"FFFF",x"436A",x"FFFF",x"436A",x"8005", -- 0FB0-0FBF 
  x"B501",x"48B2",x"4E68",x"436A",x"436A",x"B501",x"4F33",x"4FA3",x"0001",x"A007",x"B412",x"FFFF",x"A007",x"8FDB",x"B200",x"8001", -- 0FC0-0FCF 
  x"B300",x"A003",x"FFCD",x"3573",x"000B",x"478E",x"0008",x"4406",x"4CC7",x"4421",x"A009",x"442A",x"A009",x"0001",x"442A",x"A00A", -- 0FD0-0FDF 
  x"4433",x"A009",x"FFFF",x"4433",x"42C9",x"4460",x"A009",x"0000",x"444E",x"A009",x"0000",x"4457",x"A009",x"B501",x"4433",x"A00A", -- 0FE0-0FEF 
  x"4E8B",x"4433",x"A00A",x"4E8B",x"442A",x"A00A",x"443C",x"A009",x"FFFF",x"443C",x"42C9",x"B502",x"443C",x"A00A",x"4E8B",x"4433", -- 0FF0-0FFF 
  x"A00A",x"4E8B",x"444E",x"A00A",x"443C",x"A00A",x"B434",x"4EAE",x"444E",x"A009",x"B502",x"4433",x"A00A",x"4E8B",x"443C",x"A00A", -- 1000-100F 
  x"4E8B",x"4457",x"A00A",x"443C",x"A00A",x"B434",x"4EAE",x"4457",x"A009",x"443C",x"A00A",x"A00D",x"9FDB",x"444E",x"A00A",x"4433", -- 1010-101F 
  x"A00A",x"4E8B",x"4460",x"A00A",x"4BF5",x"444E",x"A00A",x"4433",x"A00A",x"B434",x"4EAE",x"444E",x"A009",x"4457",x"A00A",x"4433", -- 1020-102F 
  x"A00A",x"4E8B",x"4460",x"A00A",x"4BFD",x"4457",x"A00A",x"4433",x"A00A",x"B434",x"4EAE",x"4457",x"A009",x"442A",x"A00A",x"443C", -- 1030-103F 
  x"A009",x"FFFF",x"443C",x"42C9",x"B502",x"443C",x"A00A",x"4E8B",x"442A",x"A00A",x"4445",x"A009",x"FFFF",x"4445",x"42C9",x"4CC7", -- 1040-104F 
  x"B434",x"B434",x"B412",x"B502",x"4445",x"A00A",x"4E8B",x"B502",x"4C04",x"444E",x"A00A",x"443C",x"A00A",x"4E8B",x"4457",x"A00A", -- 1050-105F 
  x"4445",x"A00A",x"4E8B",x"4C04",x"4BFD",x"4460",x"A00A",x"4D22",x"B43C",x"B412",x"4CCE",x"B412",x"4CED",x"B412",x"4445",x"A00A", -- 1060-106F 
  x"B434",x"4EAE",x"4445",x"A00A",x"A00D",x"9FD6",x"B434",x"443C",x"A00A",x"B434",x"4EAE",x"B412",x"443C",x"A00A",x"A00D",x"9FC1", -- 1070-107F 
  x"4CED",x"4421",x"A00A",x"4CCE",x"B412",x"4F7E",x"B412",x"4CED",x"4433",x"A00A",x"A00D",x"9F56",x"4415",x"A003",x"FF44",x"357F", -- 1080-108F 
  x"0011",x"478E",x"0003",x"4406",x"4421",x"A009",x"0000",x"4421",x"A00A",x"442A",x"A009",x"442A",x"A00A",x"B501",x"9023",x"0001", -- 1090-109F 
  x"428E",x"442A",x"A009",x"442A",x"A00A",x"4EA7",x"4421",x"A00A",x"4433",x"A009",x"4433",x"A00A",x"B501",x"9011",x"0001",x"428E", -- 10A0-10AF 
  x"4433",x"A009",x"4433",x"A00A",x"442A",x"A00A",x"0001",x"A007",x"4433",x"A00A",x"0001",x"A007",x"4DF7",x"4EAE",x"8FEB",x"B300", -- 10B0-10BF 
  x"4EAE",x"8FD9",x"B300",x"4415",x"A003",x"FFC9",x"3591",x"0005",x"478E",x"2F11",x"A00A",x"B501",x"4287",x"A00A",x"B502",x"0002", -- 10C0-10CF 
  x"A007",x"A00A",x"433F",x"0020",x"4320",x"B501",x"A00A",x"9004",x"B501",x"A00A",x"A007",x"8FEF",x"B300",x"A003",x"FFE7",x"3597", -- 10D0-10DF 
  x"0005",x"478E",x"2F11",x"A00A",x"B501",x"436A",x"B501",x"4287",x"A00A",x"B502",x"0002",x"A007",x"A00A",x"433F",x"0020",x"4320", -- 10E0-10EF 
  x"B501",x"A00A",x"9004",x"B501",x"A00A",x"A007",x"8FED",x"B300",x"A003",x"FFE5",x"359D",x"0006",x"4068",x"A003",x"FFFB",x"35A4", -- 10F0-10FF 
  x"0008",x"478E",x"43F0",x"0020",x"45F2",x"466C",x"B501",x"9012",x"46AC",x"B300",x"4287",x"41FF",x"B412",x"2F0F",x"A009",x"B501", -- 1100-110F 
  x"46B5",x"404F",x"A003",x"4307",x"2F0F",x"A009",x"0001",x"2F10",x"A009",x"8003",x"B200",x"0003",x"43CC",x"A003",x"FFE0",x"35AD", -- 1110-111F 
  x"0006",x"478E",x"0020",x"45F2",x"466C",x"900E",x"2F0F",x"A009",x"41FF",x"B501",x"A00A",x"A007",x"2F11",x"A009",x"41FF",x"4287", -- 1120-112F 
  x"A00A",x"2F13",x"A009",x"8004",x"B300",x"35B4",x"000F",x"41F9",x"A003",x"FFE5",x"35C4",x"000A",x"478E",x"4377",x"B501",x"0000", -- 1130-113F 
  x"4295",x"9003",x"35CF",x"0013",x"41F9",x"B501",x"0003",x"4295",x"9003",x"35E3",x"0014",x"41F9",x"B501",x"0006",x"4295",x"9003", -- 1140-114F 
  x"35F8",x"0014",x"41F9",x"B501",x"0009",x"4295",x"9003",x"360D",x"0030",x"41F9",x"B501",x"0012",x"4295",x"9003",x"363E",x"0012", -- 1150-115F 
  x"41F9",x"B501",x"0369",x"4295",x"9003",x"3651",x"0013",x"41F9",x"B501",x"1234",x"4295",x"9003",x"3665",x"004C",x"41F9",x"A003", -- 1160-116F 
  x"FFC9",x"36B2",x"0005",x"478E",x"47AE",x"41FF",x"0003",x"428E",x"B501",x"436A",x"A00A",x"4287",x"B501",x"436A",x"A00A",x"B501", -- 1170-117F 
  x"436A",x"0040",x"428E",x"41FF",x"B412",x"0007",x"A008",x"0018",x"A007",x"A009",x"A003",x"FFE5",x"36B8",x"0002",x"478E",x"0007", -- 1180-118F 
  x"4320",x"36BB",x"0008",x"41F9",x"A003",x"FFF6",x"36C4",x"0002",x"478E",x"0007",x"4320",x"36C7",x"0004",x"41F9",x"4720",x"A003", -- 1190-119F 
  x"FFF5",x"36CC",x"0002",x"478E",x"36CF",x"0029",x"41F9",x"4377",x"FA00",x"0100",x"44E0",x"46D3",x"36F9",x"0002",x"41F9",x"A003", -- 11A0-11AF 
  x"FFF0",x"36FC",x"0005",x"478E",x"2F09",x"A00A",x"0100",x"44E0",x"A003",x"FFF7",x"3702",x"0007",x"4780",x"003C",x"4320",x"370A", -- 11B0-11BF 
  x"0004",x"41F9",x"4377",x"51B4",x"370F",x"0007",x"41F3",x"4638",x"9FF9",x"003C",x"4320",x"3717",x"0003",x"41F9",x"A003",x"FFEA", -- 11C0-11CF 
  x"371B",x"0003",x"478E",x"0010",x"2F08",x"A009",x"A003",x"FFF8",x"371F",x"0007",x"478E",x"000A",x"2F08",x"A009",x"A003",x"FFF8", -- 11D0-11DF 
  x"3727",x"0005",x"478E",x"B501",x"3FFF",x"42AE",x"B502",x"C000",x"429C",x"A00E",x"9002",x"1234",x"43CC",x"4307",x"A003",x"51E3", -- 11E0-11EF 
  x"A003",x"4D62",x"A003",x"FFEC",x"372D",x"0002",x"478E",x"436A",x"A003",x"FFFA",x"3730",x"0002",x"478E",x"A007",x"A003",x"FFFA", -- 11F0-11FF 
  x"3733",x"0002",x"478E",x"428E",x"A003",x"FFFA",x"3736",x"0002",x"478E",x"42B5",x"A003",x"FFFA",x"3739",x"0002",x"478E",x"4A31", -- 1200-120F 
  x"A003",x"FFFA",x"373C",x"0005",x"478E",x"4A0F",x"A003",x"FFFA",x"3742",x"0004",x"478E",x"4A39",x"A003",x"FFFA",x"3747",x"0001", -- 1210-121F 
  x"478E",x"4F33",x"A003",x"FFFA",x"3749",x"0001",x"478E",x"4BF5",x"A003",x"FFFA",x"374B",x"0001",x"478E",x"4BFD",x"A003",x"FFFA", -- 1220-122F 
  x"374D",x"0001",x"478E",x"4C04",x"A003",x"FFFA",x"374F",x"0001",x"478E",x"4D22",x"A003",x"FFFA",x"3751",x"0004",x"478E",x"4C16", -- 1230-123F 
  x"47AE",x"47AE",x"4A39",x"4D30",x"A003",x"FFF6",x"3756",x"0003",x"478E",x"4D3D",x"A003",x"FFFA",x"375A",x"0002",x"478E",x"4D4F", -- 1240-124F 
  x"A003",x"FFFA",x"375D",x"0001",x"478E",x"4DF7",x"A003",x"FFFA",x"375F",x"0001",x"478E",x"A00A",x"5221",x"A003",x"0000",x"2F00", -- 1250-125F 
</DUMPZ></ok>
BZEIG @ BANF @ -1 DUMPZ  ( generiert byteRAM für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"28",x"20",x"7B",x"20",x"7D",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"20",x"28",x"4C", -- 3000-300F 
  x"49",x"54",x"2C",x"29",x"20",x"4C",x"49",x"54",x"2C",x"20",x"28",x"43",x"4F",x"4E",x"53",x"54", -- 3010-301F 
  x"41",x"4E",x"54",x"3A",x"29",x"20",x"43",x"4F",x"4E",x"53",x"54",x"41",x"4E",x"54",x"20",x"4B", -- 3020-302F 
  x"45",x"59",x"41",x"44",x"52",x"20",x"53",x"50",x"20",x"52",x"50",x"20",x"50",x"43",x"20",x"58", -- 3030-303F 
  x"42",x"49",x"54",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"42",x"49",x"54",x"20",x"52",x"50", -- 3040-304F 
  x"30",x"20",x"49",x"52",x"41",x"4D",x"41",x"44",x"52",x"20",x"4A",x"52",x"41",x"4D",x"41",x"44", -- 3050-305F 
  x"52",x"20",x"58",x"4F",x"46",x"46",x"20",x"43",x"52",x"42",x"5A",x"45",x"49",x"47",x"20",x"43", -- 3060-306F 
  x"52",x"44",x"50",x"20",x"42",x"41",x"53",x"45",x"20",x"54",x"49",x"42",x"20",x"49",x"4E",x"31", -- 3070-307F 
  x"20",x"49",x"4E",x"32",x"20",x"49",x"4E",x"33",x"20",x"49",x"4E",x"34",x"20",x"45",x"52",x"52", -- 3080-308F 
  x"4F",x"52",x"4E",x"52",x"20",x"44",x"50",x"20",x"53",x"54",x"41",x"54",x"20",x"4C",x"46",x"41", -- 3090-309F 
  x"20",x"42",x"41",x"4E",x"46",x"20",x"42",x"5A",x"45",x"49",x"47",x"20",x"44",x"50",x"4D",x"45", -- 30A0-30AF 
  x"52",x"4B",x"20",x"43",x"53",x"50",x"20",x"4C",x"4F",x"43",x"41",x"4C",x"41",x"44",x"44",x"52", -- 30B0-30BF 
  x"20",x"4C",x"4F",x"43",x"41",x"4C",x"41",x"44",x"52",x"45",x"53",x"53",x"45",x"20",x"56",x"45", -- 30C0-30CF 
  x"52",x"53",x"49",x"4F",x"4E",x"20",x"52",x"45",x"54",x"55",x"52",x"4E",x"20",x"28",x"4D",x"43", -- 30D0-30DF 
  x"4F",x"44",x"45",x"3A",x"29",x"20",x"4D",x"43",x"4F",x"44",x"45",x"20",x"4D",x"49",x"4E",x"55", -- 30E0-30EF 
  x"53",x"20",x"55",x"2B",x"20",x"55",x"2A",x"20",x"30",x"3D",x"20",x"30",x"4C",x"54",x"20",x"45", -- 30F0-30FF 
  x"4D",x"49",x"54",x"43",x"4F",x"44",x"45",x"20",x"4E",x"4F",x"54",x"20",x"41",x"4E",x"44",x"20", -- 3100-310F 
  x"4F",x"52",x"20",x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"20",x"2B",x"20",x"21",x"20",x"40", -- 3110-311F 
  x"20",x"53",x"57",x"41",x"50",x"20",x"4F",x"56",x"45",x"52",x"20",x"44",x"55",x"50",x"20",x"52", -- 3120-312F 
  x"4F",x"54",x"20",x"44",x"52",x"4F",x"50",x"20",x"32",x"53",x"57",x"41",x"50",x"20",x"32",x"4F", -- 3130-313F 
  x"56",x"45",x"52",x"20",x"32",x"44",x"55",x"50",x"20",x"32",x"44",x"52",x"4F",x"50",x"20",x"4E", -- 3140-314F 
  x"4F",x"4F",x"50",x"20",x"42",x"2C",x"20",x"5A",x"2C",x"20",x"28",x"57",x"4F",x"52",x"44",x"3A", -- 3150-315F 
  x"29",x"20",x"57",x"4F",x"52",x"44",x"3A",x"20",x"22",x"20",x"2E",x"22",x"20",x"48",x"45",x"52", -- 3160-316F 
  x"45",x"20",x"4A",x"52",x"42",x"49",x"54",x"20",x"4A",x"52",x"30",x"42",x"49",x"54",x"20",x"58", -- 3170-317F 
  x"53",x"45",x"54",x"42",x"54",x"20",x"41",x"4C",x"4C",x"4F",x"54",x"20",x"42",x"52",x"41",x"4E", -- 3180-318F 
  x"43",x"48",x"2C",x"20",x"30",x"42",x"52",x"41",x"4E",x"43",x"48",x"2C",x"20",x"42",x"45",x"47", -- 3190-319F 
  x"49",x"4E",x"20",x"41",x"47",x"41",x"49",x"4E",x"20",x"55",x"4E",x"54",x"49",x"4C",x"20",x"49", -- 31A0-31AF 
  x"46",x"20",x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"45",x"4C",x"53",x"45",x"20",x"57",x"48", -- 31B0-31BF 
  x"49",x"4C",x"45",x"20",x"52",x"45",x"50",x"45",x"41",x"54",x"20",x"43",x"40",x"20",x"43",x"21", -- 31C0-31CF 
  x"20",x"31",x"2B",x"20",x"2D",x"20",x"3D",x"20",x"4C",x"54",x"20",x"3E",x"20",x"2A",x"20",x"42", -- 31D0-31DF 
  x"59",x"45",x"20",x"42",x"59",x"45",x"20",x"20",x"2B",x"21",x"20",x"52",x"3E",x"20",x"3E",x"52", -- 31E0-31EF 
  x"20",x"52",x"20",x"2C",x"20",x"45",x"58",x"45",x"43",x"55",x"54",x"45",x"20",x"4B",x"45",x"59", -- 31F0-31FF 
  x"20",x"45",x"4D",x"49",x"54",x"20",x"53",x"48",x"4C",x"31",x"36",x"20",x"44",x"49",x"47",x"20", -- 3200-320F 
  x"54",x"59",x"50",x"45",x"20",x"48",x"47",x"2E",x"20",x"48",x"2E",x"20",x"2E",x"20",x"3F",x"20", -- 3210-321F 
  x"43",x"52",x"20",x"66",x"6C",x"3E",x"20",x"2F",x"66",x"6C",x"3E",x"20",x"66",x"72",x"3E",x"20", -- 3220-322F 
  x"2F",x"66",x"72",x"3E",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20", -- 3230-323F 
  x"44",x"49",x"53",x"41",x"42",x"4C",x"45",x"20",x"77",x"65",x"69",x"74",x"65",x"72",x"20",x"6E", -- 3240-324F 
  x"61",x"63",x"68",x"20",x"54",x"61",x"73",x"74",x"65",x"20",x"45",x"53",x"43",x"41",x"50",x"45", -- 3250-325F 
  x"20",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"3F",x"3F",x"3F",x"20",x"46",x"45",x"48",x"4C", -- 3260-326F 
  x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"2D",x"20",x"46", -- 3270-327F 
  x"65",x"68",x"6C",x"65",x"72",x"20",x"4E",x"75",x"6D",x"6D",x"65",x"72",x"20",x"20",x"43",x"53", -- 3280-328F 
  x"50",x"21",x"20",x"43",x"53",x"50",x"3F",x"20",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"45",x"4E", -- 3290-329F 
  x"44",x"5F",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"4C",x"30",x"20",x"4C",x"31",x"20",x"4C",x"32", -- 32A0-32AF 
  x"20",x"4C",x"33",x"20",x"4C",x"34",x"20",x"4C",x"35",x"20",x"4C",x"36",x"20",x"4C",x"37",x"20", -- 32B0-32BF 
  x"27",x"20",x"49",x"4E",x"43",x"52",x"34",x"20",x"4B",x"45",x"59",x"5F",x"49",x"4E",x"54",x"20", -- 32C0-32CF 
  x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"32",x"20",x"45",x"58",x"50",x"45",x"43",x"54",x"20", -- 32D0-32DF 
  x"44",x"49",x"47",x"49",x"54",x"20",x"4E",x"55",x"4D",x"42",x"45",x"52",x"20",x"57",x"4F",x"52", -- 32E0-32EF 
  x"44",x"20",x"5A",x"3D",x"20",x"46",x"49",x"4E",x"44",x"20",x"4C",x"43",x"46",x"41",x"20",x"43", -- 32F0-32FF 
  x"4F",x"4D",x"50",x"49",x"4C",x"45",x"2C",x"20",x"43",x"52",x"45",x"41",x"54",x"45",x"20",x"49", -- 3300-330F 
  x"4E",x"54",x"45",x"52",x"50",x"52",x"45",x"54",x"20",x"51",x"55",x"49",x"54",x"20",x"2F",x"6F", -- 3310-331F 
  x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"6F",x"6B",x"3E",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"6F", -- 3320-332F 
  x"6B",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"46",x"4F",x"52",x"54",x"59",x"2D",x"46",x"4F", -- 3330-333F 
  x"52",x"54",x"48",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"20",x"28",x"49",x"4D",x"4D",x"45", -- 3340-334F 
  x"44",x"49",x"41",x"54",x"45",x"3A",x"29",x"20",x"28",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45", -- 3350-335F 
  x"3A",x"29",x"20",x"28",x"3A",x"29",x"20",x"49",x"4D",x"4D",x"45",x"44",x"49",x"41",x"54",x"45", -- 3360-336F 
  x"3A",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"3A",x"20",x"3A",x"20",x"3B",x"20",x"44", -- 3370-337F 
  x"55",x"42",x"49",x"54",x"20",x"4C",x"47",x"2E",x"20",x"4E",x"47",x"2E",x"20",x"78",x"20",x"2C", -- 3380-338F 
  x"20",x"44",x"55",x"4D",x"50",x"5A",x"20",x"27",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"20", -- 3390-339F 
  x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"20",x"20",x"20",x"20",x"2D",x"2D",x"20",x"20",x"2D", -- 33A0-33AF 
  x"20",x"2F",x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"52",x"41",x"4D",x"50",x"31",x"20",x"56", -- 33B0-33BF 
  x"41",x"52",x"49",x"41",x"42",x"4C",x"45",x"20",x"4D",x"4F",x"56",x"45",x"20",x"46",x"49",x"4C", -- 33C0-33CF 
  x"4C",x"20",x"44",x"55",x"4D",x"50",x"20",x"4D",x"41",x"58",x"20",x"4D",x"49",x"4E",x"20",x"41", -- 33D0-33DF 
  x"42",x"53",x"20",x"4D",x"55",x"4C",x"54",x"5F",x"49",x"20",x"4D",x"55",x"4C",x"54",x"5F",x"49", -- 33E0-33EF 
  x"49",x"20",x"53",x"55",x"50",x"45",x"52",x"4D",x"55",x"4C",x"54",x"20",x"41",x"20",x"42",x"20", -- 33F0-33FF 
  x"43",x"20",x"53",x"4D",x"55",x"4C",x"20",x"41",x"44",x"44",x"49",x"45",x"52",x"20",x"44",x"49", -- 3400-340F 
  x"33",x"32",x"20",x"44",x"49",x"56",x"33",x"32",x"20",x"2F",x"4D",x"4F",x"44",x"20",x"2F",x"4D", -- 3410-341F 
  x"4F",x"44",x"20",x"2F",x"20",x"4D",x"4F",x"44",x"20",x"53",x"44",x"49",x"56",x"20",x"4F",x"50", -- 3420-342F 
  x"45",x"52",x"41",x"4E",x"44",x"31",x"20",x"4F",x"50",x"45",x"52",x"41",x"4E",x"44",x"32",x"20", -- 3430-343F 
  x"45",x"52",x"47",x"45",x"42",x"4E",x"49",x"53",x"20",x"5A",x"41",x"48",x"4C",x"45",x"4E",x"53", -- 3440-344F 
  x"50",x"45",x"49",x"43",x"48",x"45",x"52",x"20",x"53",x"50",x"45",x"49",x"43",x"48",x"45",x"52", -- 3450-345F 
  x"45",x"4E",x"44",x"45",x"20",x"53",x"43",x"48",x"49",x"45",x"42",x"20",x"53",x"4C",x"58",x"2D", -- 3460-346F 
  x"3E",x"45",x"52",x"47",x"45",x"42",x"4E",x"49",x"53",x"20",x"4F",x"50",x"45",x"52",x"41",x"4E", -- 3470-347F 
  x"44",x"2D",x"3E",x"53",x"4C",x"58",x"20",x"53",x"50",x"45",x"49",x"43",x"48",x"45",x"52",x"48", -- 3480-348F 
  x"4F",x"4C",x"20",x"32",x"4F",x"50",x"45",x"52",x"41",x"4E",x"44",x"45",x"4E",x"2D",x"3E",x"32", -- 3490-349F 
  x"53",x"4C",x"58",x"20",x"4E",x"2B",x"20",x"4E",x"2D",x"20",x"4E",x"2A",x"20",x"52",x"45",x"43", -- 34A0-34AF 
  x"55",x"52",x"53",x"45",x"20",x"4E",x"2F",x"4D",x"4F",x"44",x"20",x"48",x"47",x"30",x"2E",x"20", -- 34B0-34BF 
  x"4E",x"2E",x"20",x"2D",x"20",x"4E",x"42",x"2E",x"20",x"42",x"4C",x"4F",x"43",x"4B",x"41",x"4E", -- 34C0-34CF 
  x"46",x"41",x"4E",x"47",x"20",x"42",x"4C",x"4F",x"43",x"4B",x"45",x"4E",x"44",x"45",x"20",x"4E", -- 34D0-34DF 
  x"45",x"42",x"45",x"4E",x"52",x"45",x"43",x"48",x"4E",x"55",x"4E",x"47",x"20",x"48",x"41",x"55", -- 34E0-34EF 
  x"50",x"54",x"52",x"45",x"43",x"48",x"4E",x"55",x"4E",x"47",x"20",x"52",x"45",x"43",x"48",x"45", -- 34F0-34FF 
  x"4E",x"42",x"4C",x"4F",x"43",x"4B",x"20",x"49",x"4E",x"49",x"54",x"20",x"41",x"2B",x"30",x"20", -- 3500-350F 
  x"42",x"2B",x"30",x"20",x"4E",x"2F",x"20",x"4E",x"4D",x"4F",x"44",x"20",x"4E",x"47",x"47",x"54", -- 3510-351F 
  x"20",x"4E",x"42",x"4B",x"20",x"4E",x"4E",x"55",x"4D",x"42",x"45",x"52",x"20",x"4E",x"22",x"20", -- 3520-352F 
  x"4E",x"5E",x"20",x"4E",x"2E",x"20",x"2D",x"20",x"30",x"20",x"20",x"4E",x"42",x"2E",x"20",x"5A", -- 3530-353F 
  x"45",x"52",x"4C",x"45",x"47",x"20",x"4F",x"42",x"4A",x"3F",x"20",x"4C",x"20",x"47",x"20",x"48", -- 3540-354F 
  x"20",x"4F",x"2E",x"20",x"5B",x"20",x"20",x"5D",x"20",x"20",x"53",x"50",x"4D",x"45",x"52",x"4B", -- 3550-355F 
  x"20",x"5B",x"20",x"5D",x"20",x"4F",x"42",x"4A",x"2B",x"30",x"20",x"4F",x"42",x"4A",x"44",x"55", -- 3560-356F 
  x"4D",x"50",x"20",x"49",x"4E",x"56",x"45",x"52",x"54",x"49",x"45",x"52",x"45",x"4E",x"20",x"56", -- 3570-357F 
  x"41",x"4E",x"44",x"45",x"52",x"4D",x"4F",x"4E",x"44",x"45",x"4D",x"41",x"54",x"52",x"49",x"58", -- 3580-358F 
  x"20",x"56",x"4C",x"49",x"53",x"54",x"20",x"57",x"4C",x"49",x"53",x"54",x"20",x"52",x"45",x"54", -- 3590-359F 
  x"55",x"52",x"4E",x"20",x"52",x"45",x"50",x"4C",x"41",x"43",x"45",x"3A",x"20",x"46",x"4F",x"52", -- 35A0-35AF 
  x"47",x"45",x"54",x"20",x"6E",x"69",x"63",x"68",x"74",x"20",x"67",x"65",x"66",x"75",x"6E",x"64", -- 35B0-35BF 
  x"65",x"6E",x"20",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"44", -- 35C0-35CF 
  x"69",x"76",x"69",x"73",x"69",x"6F",x"6E",x"20",x"64",x"75",x"72",x"63",x"68",x"20",x"4E",x"75", -- 35D0-35DF 
  x"6C",x"6C",x"20",x"57",x"6F",x"72",x"74",x"20",x"6E",x"69",x"63",x"68",x"74",x"20",x"64",x"65", -- 35E0-35EF 
  x"66",x"69",x"6E",x"69",x"65",x"72",x"74",x"20",x"45",x"69",x"6E",x"67",x"61",x"62",x"65",x"7A", -- 35F0-35FF 
  x"65",x"69",x"6C",x"65",x"20",x"7A",x"75",x"20",x"6C",x"61",x"6E",x"67",x"20",x"53",x"74",x"72", -- 3600-360F 
  x"75",x"6B",x"74",x"75",x"72",x"66",x"65",x"68",x"6C",x"65",x"72",x"20",x"69",x"6E",x"20",x"49", -- 3610-361F 
  x"46",x"20",x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"42",x"45",x"47",x"49",x"4E",x"20",x"55", -- 3620-362F 
  x"4E",x"54",x"49",x"4C",x"20",x"44",x"4F",x"20",x"4C",x"4F",x"4F",x"50",x"20",x"20",x"6E",x"65", -- 3630-363F 
  x"67",x"61",x"74",x"69",x"76",x"65",x"72",x"20",x"45",x"78",x"70",x"6F",x"6E",x"65",x"6E",x"74", -- 3640-364F 
  x"20",x"5A",x"61",x"68",x"6C",x"65",x"6E",x"73",x"70",x"65",x"69",x"63",x"68",x"65",x"72",x"20", -- 3650-365F 
  x"76",x"6F",x"6C",x"6C",x"20",x"67",x"72",x"6F",x"C3",x"9F",x"65",x"20",x"67",x"61",x"6E",x"7A", -- 3660-366F 
  x"65",x"20",x"5A",x"61",x"68",x"6C",x"65",x"6E",x"20",x"6B",x"6F",x"6D",x"70",x"69",x"6C",x"69", -- 3670-367F 
  x"65",x"72",x"65",x"6E",x"20",x"67",x"65",x"68",x"74",x"20",x"6D",x"6F",x"6D",x"65",x"6E",x"74", -- 3680-368F 
  x"61",x"6E",x"20",x"6E",x"69",x"63",x"68",x"74",x"2C",x"20",x"73",x"69",x"65",x"68",x"65",x"20", -- 3690-369F 
  x"54",x"45",x"53",x"54",x"46",x"55",x"45",x"52",x"4E",x"45",x"55",x"45",x"53",x"2E",x"54",x"58", -- 36A0-36AF 
  x"54",x"20",x"53",x"54",x"52",x"47",x"3A",x"20",x"5E",x"47",x"20",x"2F",x"31",x"78",x"50",x"49", -- 36B0-36BF 
  x"45",x"50",x"2F",x"20",x"5E",x"46",x"20",x"51",x"55",x"49",x"54",x"20",x"5E",x"41",x"20",x"41", -- 36C0-36CF 
  x"6E",x"67",x"65",x"68",x"61",x"6C",x"74",x"65",x"6E",x"20",x"66",x"C3",x"BC",x"72",x"20",x"67", -- 36D0-36DF 
  x"65",x"6E",x"61",x"75",x"20",x"65",x"69",x"6E",x"65",x"20",x"45",x"69",x"6E",x"67",x"61",x"62", -- 36E0-36EF 
  x"65",x"7A",x"65",x"69",x"6C",x"65",x"3A",x"20",x"20",x"6F",x"6B",x"20",x"51",x"55",x"45",x"52", -- 36F0-36FF 
  x"59",x"20",x"28",x"2A",x"52",x"45",x"4D",x"2A",x"29",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"28", -- 3700-370F 
  x"2A",x"45",x"4E",x"44",x"2A",x"29",x"20",x"6F",x"6B",x"3E",x"20",x"48",x"45",x"58",x"20",x"44", -- 3710-371F 
  x"45",x"43",x"49",x"4D",x"41",x"4C",x"20",x"4E",x"4C",x"49",x"54",x"2C",x"20",x"4D",x"2E",x"20", -- 3720-372F 
  x"4D",x"2B",x"20",x"4D",x"2D",x"20",x"4D",x"2A",x"20",x"4D",x"2F",x"20",x"4D",x"2F",x"4D",x"4F", -- 3730-373F 
  x"44",x"20",x"4D",x"4D",x"4F",x"44",x"20",x"2E",x"20",x"2B",x"20",x"2D",x"20",x"2A",x"20",x"2F", -- 3740-374F 
  x"20",x"2F",x"4D",x"4F",x"44",x"20",x"47",x"47",x"54",x"20",x"42",x"4B",x"20",x"5E",x"20",x"3F", -- 3750-375F 
  x"20",x"29",x"20",x"28",x"3A",x"29",x"20",x"49",x"4D",x"4D",x"45",x"44",x"49",x"41",x"54",x"45", -- 3760-376F 
</DUMPZ></ok>
3000 2C00 0 DUMPZ        ( generiert stapR   für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C00-2C0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C10-2C1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C20-2C2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C30-2C3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C40-2C4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C50-2C5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C60-2C6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C70-2C7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C80-2C8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C90-2C9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CA0-2CAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CB0-2CBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CC0-2CCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CD0-2CDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CE0-2CEF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CF0-2CFF 
  x"0000",x"0000",x"0000",x"0000",x"0055",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D00-2D0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D10-2D1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D20-2D2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D30-2D3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D40-2D4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D50-2D5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D60-2D6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D70-2D7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D80-2D8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D90-2D9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DA0-2DAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DB0-2DBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DC0-2DCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DD0-2DDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DE0-2DEF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DF0-2DFF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E00-2E0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E10-2E1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E20-2E2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E30-2E3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E40-2E4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E50-2E5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E60-2E6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E70-2E7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E80-2E8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E90-2E9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EA0-2EAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EB0-2EBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EC0-2ECF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2ED0-2EDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0008", -- 2EE0-2EEF 
  x"0008",x"0000",x"0001",x"2F1A",x"0000",x"0001",x"2F1B",x"1410",x"0008",x"3B0A",x"0001",x"0001",x"3B45",x"00BB",x"0001",x"FFFF", -- 2EF0-2EFF 
  x"0000",x"0000",x"3000",x"3F42",x"3F42",x"FFFF",x"3761",x"125E",x"0010",x"3B00",x"3B00",x"3B0C",x"3B12",x"3B45",x"0000",x"125E", -- 2F00-2F0F 
  x"0000",x"1257",x"3000",x"3761",x"0028",x"0062",x"0000",x"2F00",x"2F22",x"0000",x"0000",x"140C",x"1400",x"2000",x"0001",x"1400", -- 2F10-2F1F 
  x"1400",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F20-2F2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F30-2F3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F40-2F4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F50-2F5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F60-2F6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F70-2F7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F80-2F8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F90-2F9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FA0-2FAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FB0-2FBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FC0-2FCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301", -- 2FD0-2FDF 
  x"0301",x"0301",x"0301",x"0301",x"0446",x"02DB",x"0053",x"02A3",x"02DB",x"02DB",x"02DB",x"02DB",x"02DB",x"065F",x"02DB",x"0053", -- 2FE0-2FEF 
  x"02DB",x"02DB",x"02DB",x"0053",x"0322",x"0349",x"01FA",x"0296",x"081C",x"FFFF",x"06FB",x"3B05",x"3B06",x"3B00",x"3B00",x"0745", -- 2FF0-2FFF 
</DUMPZ></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="noch ein wenig DEMO"> 
111111111111111 DUP * . <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
( jetzt eine Matrix invertieren ) <ok></ok>
 <ok></ok>
DECIMAL <ok></ok>
 <ok></ok>
[ [ 1 1 ^ 1 2 ^ 1 3 ^ 1 1 ^ ] <ok></ok>
  [ 2 1 ^ 2 2 ^ 2 3 ^ 2 4 ^ ] <ok></ok>
  [ 3 1 ^ 3 2 ^ 3 3 ^ 3 4 ^ ] <ok></ok>
  [ 4 1 ^ 4 2 ^ 4 3 ^ 4 4 ^ ] <ok></ok>
  ]  <ok></ok>
DUP . <ok>[ [ 1 1 1 1 ] [ 2 4 8 16 ] [ 3 9 27 81 ] [ 4 16 64 256 ] ] </ok>
4 INVERTIEREN ( mat dim --> invmat nenner ) <ok></ok>
OVER . <ok>[ [ 1152 -864 384 -72 ] [ -1248 1368 -672 132 ] [ 432 -576 336 -72 ] [ -48 72 -48 12 ] ] </ok>
DUP . <ok>288 </ok>
( Ergebnis sollte sein: OVER .      ) <ok></ok>
(      [ [ 1152 -864 384 -72 ]      ) <ok></ok>
(        [ -1248 1368 -672 132 ]    ) <ok></ok>
(        [ 432 -576 336 -72 ]       ) <ok></ok>
(        [ -48 72 -48 12 ] ] ok     ) <ok></ok>
( und gemeinsamer Nenner: DUP . 288 ) <ok></ok>
( neu nach dem Kürzen:        ) <ok></ok>
(      [ [ 96 -72 32 -6 ]     ) <ok></ok>
(        [ -104 114 -56 11 ]  ) <ok></ok>
(        [ 36 -48 28 -6 ]     ) <ok></ok>
(        [ -4 6 -4 1 ] ]      ) <ok></ok>
( und gemeinsamer Nenner: 24  ) <ok></ok>
</sekt> 
</FFINIT2> 
</INIT> 

