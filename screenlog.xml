<?xml version="1.0" encoding="utf-8" ?> 
<?xml-stylesheet type="text/xsl" href="INIT.xsl" ?> 
<!DOCTYPE INIT SYSTEM "INIT.DTD"> 
<INIT> 
<AXIOME> 
<sekt inhalt="Axiome (sie enthalten Vorwärtsreferenzen und sind deshalb separat zusammengefasst)"> 
<sekt inhalt="vorab der Ablauf, was tun, wenn diese Axiome geändert werden müssen"> 
( wenn die Axiome so bleiben wie sie sind, ganz normal 1x hintereinanderweg compilieren ) <ok></ok>
( wenn die Axiome verändert werden sollen, dann ) <ok></ok>
  ( zuerst RESET und 1x die ursprünglichen Axiome laden )  <ok></ok>
  ( anschließend die neuen Axiome compilieren, so: ) <ok></ok>
    ( HERE 100 + DPMERK ! 3400 BANF ! ) <ok></ok>
    ( 2x neue Axiome compilieren <REF1/> ) <ok></ok>
    ( 0020 DPMERK ! 3000 BANF ! ) <ok></ok>
    ( 2x neue Axiome compilieren <REF1/> nochmal )  <ok></ok>
    ( danach alles, was nach den AXIOMEN folgt, 1x compilieren ) <ok></ok>
  ( bei verzwickten Veränderungen kann es vorkommen,  <ok></ok>
  ( dass noch weitere Zwischenschritte eingefügt werden müssen. ) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Anfangszustand so herstellen wie zum Recompilieren benötigt"> 
( zuerst alles Notwendige wieder auf Ausgangszustand schalten ) <ok></ok>
2 2 * DUP * BASE ! ( HEX ) <ok></ok>
7 ' NUMBER ' EXPECT 1 + @ OVER 1 + ! ! ( original NUMBER ) <ok></ok>
B501 ' LIT, ! 3FFF ' LIT, 1 + !        ( original LIT, ) <ok></ok>
' DUMPZ 4 - LFA !  ( LFA zurueck auf Anfangsvokabular ) <ok></ok>
 <ok></ok>
DPMERK @ DP ! BANF @ BZEIG ! ( DP und BZEIG zurücksetzen ) <ok></ok><fl>124A 374F </fl><fr>0020 3000 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="so, mit irgendwas muss das Compilieren losgehen"> 
IMMEDIATE: ( 29 WORD 2DROP ; <ok></ok><fl>0020 3000 </fl><fr>0028 3002 </fr>
IMMEDIATE: { 0 STAT ! ; ( war ursprünglich mal [ )   <ok></ok><fl>0028 3002 </fl><fr>0030 3004 </fr>
: } 1 STAT ! ; <ok></ok><fl>0030 3004 </fl><fr>0038 3006 </fr>
IMMEDIATE: COMPILE 20 WORD FIND LCFA DROP COMPILE, ; <ok></ok><fl>0038 3006 </fl><fr>0043 300E </fr>
COMPILE: (LIT,) R> DUP 1+ >R @ ; <ok></ok><fl>0043 300E </fl><fr>004D 3015 </fr>
: LIT, ( a --> ) DUP 3FFF > OVER C000 LT OR IF COMPILE (LIT,) END_IF , ; <ok></ok><fl>004D 3015 </fl><fr>005C 301A </fr>
COMPILE: (CONSTANT:) R> @ STAT @ IF LIT, END_IF ; <ok></ok><fl>005C 301A </fl><fr>0067 3026 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Konstanten"> 
: CONSTANT ( /name/  c --> ) CREATE COMPILE (CONSTANT:) , SMUDGE ; <ok></ok><fl>0067 3026 </fl><fr>0070 302F </fr>
 <ok></ok>
2800 CONSTANT KEYADR <ok></ok><fl>0070 302F </fl><fr>0075 3036 </fr>
2801 CONSTANT SP <ok></ok><fl>0075 3036 </fl><fr>007A 3039 </fr>
2802 CONSTANT RP <ok></ok><fl>007A 3039 </fl><fr>007F 303C </fr>
2803 CONSTANT PC <ok></ok><fl>007F 303C </fl><fr>0084 303F </fr>
 <ok></ok>
2F00 CONSTANT XBIT <ok></ok><fl>0084 303F </fl><fr>0089 3044 </fr>
2F01 CONSTANT SMUDGEBIT <ok></ok><fl>0089 3044 </fl><fr>008E 304E </fr>
2F02 CONSTANT RP0 3000 RP0 ! <ok></ok><fl>008E 304E </fl><fr>0093 3052 </fr>
2F03 CONSTANT IRAMADR <ok></ok><fl>0093 3052 </fl><fr>0098 305A </fr>
2F04 CONSTANT JRAMADR <ok></ok><fl>0098 305A </fl><fr>009D 3062 </fr>
2F05 CONSTANT XOFF <ok></ok><fl>009D 3062 </fl><fr>00A2 3067 </fr>
2F06 CONSTANT CRBZEIG BZEIG @ CRBZEIG ! <ok></ok><fl>00A2 306F </fl><fr>00A7 306F </fr>
2F07 CONSTANT CRDP DP @ 8 - CRDP ! <ok></ok><fl>00A4 306F </fl><fr>00AC 3074 </fr>
 <ok></ok>
2F08 CONSTANT BASE <ok></ok><fl>00AC 3074 </fl><fr>00B1 3079 </fr>
2F09 CONSTANT TIB <ok></ok><fl>00B1 3079 </fl><fr>00B6 307D </fr>
2F0A CONSTANT IN1 <ok></ok><fl>00B6 307D </fl><fr>00BB 3081 </fr>
2F0B CONSTANT IN2 <ok></ok><fl>00BB 3081 </fl><fr>00C0 3085 </fr>
2F0C CONSTANT IN3 <ok></ok><fl>00C0 3085 </fl><fr>00C5 3089 </fr>
2F0D CONSTANT IN4 <ok></ok><fl>00C5 3089 </fl><fr>00CA 308D </fr>
2F0E CONSTANT ERRORNR 0 ERRORNR ! <ok></ok><fl>00CA 308D </fl><fr>00CF 3095 </fr>
2F0F CONSTANT DP <ok></ok><fl>00CF 3095 </fl><fr>00D4 3098 </fr>
2F10 CONSTANT STAT 0 STAT ! <ok></ok><fl>00D4 3098 </fl><fr>00D9 309D </fr>
2F11 CONSTANT LFA <ok></ok><fl>00D9 309D </fl><fr>00DE 30A1 </fr>
2F12 CONSTANT BANF <ok></ok><fl>00DE 30A1 </fl><fr>00E3 30A6 </fr>
2F13 CONSTANT BZEIG <ok></ok><fl>00E3 30A6 </fl><fr>00E8 30AC </fr>
2F14 CONSTANT DPMERK <ok></ok><fl>00E8 30AC </fl><fr>00ED 30B3 </fr>
2F15 CONSTANT CSP <ok></ok><fl>00ED 30B3 </fl><fr>00F2 30B7 </fr>
2F16 CONSTANT DUBIT <ok></ok><fl>00F2 30B7 </fl><fr>00F7 30BD </fr>
2F17 CONSTANT LOCALADRESSE <ok></ok><fl>00F7 30BD </fl><fr>00FC 30CA </fr>
 <ok></ok>
VERSION 1+ CONSTANT VERSION VERSION . <ok>01BE </ok><fl>00FC 30CA </fl><fr>0101 30D2 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Maschinencode"> 
A003 CONSTANT RETURN <ok></ok><fl>0101 30D2 </fl><fr>0106 30D9 </fr>
COMPILE: (MCODE:) R> STAT @ IF @ , ELSE EXECUTE END_IF ; <ok></ok><fl>0106 30D9 </fl><fr>0113 30E2 </fr>
: MCODE CREATE COMPILE (MCODE:) , RETURN , SMUDGE ; <ok></ok><fl>0113 30E2 </fl><fr>011F 30E8 </fr>
 <ok></ok>
A000 MCODE MINUS <ok></ok><fl>011F 30E8 </fl><fr>0125 30EE </fr>
A001 MCODE U+ <ok></ok><fl>0125 30EE </fl><fr>012B 30F1 </fr>
A002 MCODE U* <ok></ok><fl>012B 30F1 </fl><fr>0131 30F4 </fr>
A00D MCODE 0= <ok></ok><fl>0131 30F4 </fl><fr>0137 30F7 </fr>
A00F MCODE 0LT <ok></ok><fl>0137 30F7 </fl><fr>013D 30FB </fr>
A005 MCODE EMITCODE <ok></ok><fl>013D 30FB </fl><fr>0143 3104 </fr>
A00B MCODE NOT <ok></ok><fl>0143 3104 </fl><fr>0149 3108 </fr>
A008 MCODE AND <ok></ok><fl>0149 3108 </fl><fr>014F 310C </fr>
A00E MCODE OR <ok></ok><fl>014F 310C </fl><fr>0155 310F </fr>
A007 MCODE + <ok></ok><fl>0155 310F </fl><fr>015B 3111 </fr>
A009 MCODE ! <ok></ok><fl>015B 3111 </fl><fr>0161 3113 </fr>
A00A MCODE @ <ok></ok><fl>0161 3113 </fl><fr>0167 3115 </fr>
B412 MCODE SWAP <ok></ok><fl>0167 3115 </fl><fr>016D 311A </fr>
B502 MCODE OVER <ok></ok><fl>016D 311A </fl><fr>0173 311F </fr>
B501 MCODE DUP <ok></ok><fl>0173 311F </fl><fr>0179 3123 </fr>
B434 MCODE ROT <ok></ok><fl>0179 3123 </fl><fr>017F 3127 </fr>
B300 MCODE DROP <ok></ok><fl>017F 3127 </fl><fr>0185 312C </fr>
B43C MCODE 2SWAP <ok></ok><fl>0185 312C </fl><fr>018B 3132 </fr>
B60C MCODE 2OVER <ok></ok><fl>018B 3132 </fl><fr>0191 3138 </fr>
B603 MCODE 2DUP <ok></ok><fl>0191 3138 </fl><fr>0197 313D </fr>
B200 MCODE 2DROP <ok></ok><fl>0197 313D </fl><fr>019D 3143 </fr>
8000 MCODE NOOP <ok></ok><fl>019D 3143 </fl><fr>01A3 3148 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="ein Abschnitt für die Zeichenketten"> 
: B, ( b --> ) BZEIG @ ! 1 BZEIG +! ; <ok></ok><fl>01A3 3148 </fl><fr>01AE 314B </fr>
: Z, ( badr n --> ) BZEIG @ LIT, DUP , <ok></ok><fl>01AE 314B </fl><fr>01B7 314E </fr>
  BEGIN SWAP DUP @ B, 1+ SWAP 1 - DUP 0= UNTIL <ok></ok><fl>01B7 314E </fl><fr>01C2 314E </fr>
  2DROP 20 B, ;  <ok></ok><fl>01C2 314E </fl><fr>01C6 314E </fr>
COMPILE: (WORD:) WORD STAT @ IF Z, R> COMPILE, END_IF ; <ok></ok><fl>01C6 314E </fl><fr>01D2 3156 </fr>
: WORD: CREATE 1 STAT ! , COMPILE (WORD:) -1 CSP +! ; <ok></ok><fl>01D2 3156 </fl><fr>01E0 315C </fr>
22 WORD: " ; <ok></ok><fl>01E0 315C </fl><fr>01E6 315E </fr>
22 WORD: ." TYPE ; <ok></ok><fl>01E6 315E </fl><fr>01ED 3161 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="weiter mit Programmstrukturen"> 
: HERE DP @ ; <ok></ok><fl>01ED 3161 </fl><fr>01F4 3166 </fr>
: JRBIT 8 ; <ok></ok><fl>01F4 3166 </fl><fr>01FA 316C </fr>
: JR0BIT 9 ; <ok></ok><fl>01FA 316C </fl><fr>0200 3173 </fr>
: XSETBT 1000 * SWAP 0FFF AND OR ; <ok></ok><fl>0200 3173 </fl><fr>020B 317A </fr>
: ALLOT DP +! ; <ok></ok><fl>020B 317A </fl><fr>0212 3180 </fr>
: BRANCH, HERE 1+ - JRBIT XSETBT , ; <ok></ok><fl>0212 3180 </fl><fr>021D 3188 </fr>
: 0BRANCH, HERE 1+ - JR0BIT XSETBT , ; <ok></ok><fl>021D 3188 </fl><fr>0228 3191 </fr>
IMMEDIATE: BEGIN HERE ; <ok></ok><fl>0228 3191 </fl><fr>022E 3197 </fr>
IMMEDIATE: AGAIN BRANCH, ; <ok></ok><fl>022E 3197 </fl><fr>0234 319D </fr>
IMMEDIATE: UNTIL 0BRANCH, ; <ok></ok><fl>0234 319D </fl><fr>023A 31A3 </fr>
IMMEDIATE: IF JR0BIT 1 ALLOT HERE ; <ok></ok><fl>023A 31A3 </fl><fr>0243 31A6 </fr>
IMMEDIATE: END_IF HERE OVER - ROT XSETBT SWAP 1 - ! ; <ok></ok><fl>0243 31A6 </fl><fr>0251 31AD </fr>
IMMEDIATE: ELSE 1 ALLOT COMPILE END_IF JRBIT HERE ; <ok></ok><fl>0251 31AD </fl><fr>025B 31B2 </fr>
IMMEDIATE: WHILE COMPILE IF ; <ok></ok><fl>025B 31B2 </fl><fr>0261 31B8 </fr>
IMMEDIATE: REPEAT ROT COMPILE AGAIN COMPILE END_IF ; <ok></ok><fl>0261 31B8 </fl><fr>0269 31BF </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="etliche kleinere Funktionen"> 
: C@ @ ; <ok></ok><fl>0269 31BF </fl><fr>026F 31C2 </fr>
: C! ! ; <ok></ok><fl>026F 31C2 </fl><fr>0275 31C5 </fr>
: 1+ ( a --> a+1 ) 1 + ; <ok></ok><fl>0275 31C5 </fl><fr>027C 31C8 </fr>
: - MINUS + ; <ok></ok><fl>027C 31C8 </fl><fr>0283 31CA </fr>
: = - 0= ; <ok></ok><fl>0283 31CA </fl><fr>028A 31CC </fr>
: LT ( a b --> r ) 8000 + SWAP NOT 8000 + 0 U+ DROP 0= NOT ; <ok></ok><fl>028A 31CC </fl><fr>029C 31CF </fr>
: > ( a b --> r ) SWAP LT ; <ok></ok><fl>029C 31CF </fl><fr>02A3 31D1 </fr>
: * ( a b --> a*b ) 0 ROT ROT U* SWAP DROP ; <ok></ok><fl>02A3 31D1 </fl><fr>02AE 31D3 </fr>
: BYE BEGIN ." BYE " AGAIN ; <ok></ok><fl>02AE 31D3 </fl><fr>02B7 31DC </fr>
: +! ( a adr --> adr+1 ) SWAP OVER @ + SWAP ! ; <ok></ok><fl>02B7 31DC </fl><fr>02C2 31DF </fr>
: R> RP @ 1+ @ RP @ 1+ RP 2DUP @ @ SWAP ! ! ; <ok></ok><fl>02C2 31DF </fl><fr>02D5 31E2 </fr>
: >R RP @ DUP -1 + RP 2DUP @ @ SWAP DUP -1 + RP ! ! ! ! ;  <ok></ok><fl>02D5 31E2 </fl><fr>02EC 31E5 </fr>
: R RP @ 1+ @ ; ( bei R> >R nicht unterhalb RP speichern wegen INTXY ) <ok></ok><fl>02EC 31E5 </fl><fr>02F5 31E7 </fr>
: , DP @ ! 1 DP +! ; <ok></ok><fl>02F5 31E7 </fl><fr>0300 31E9 </fr>
: EXECUTE PC ! ; <ok></ok><fl>0300 31E9 </fl><fr>0307 31F1 </fr>
: KEY BEGIN NOOP KEYCODE2 NOT WHILE DROP REPEAT ; <ok></ok><fl>0307 31F1 </fl><fr>0312 31F5 </fr>
: EMIT ' EMITCODE EXECUTE ; <ok></ok><fl>0312 31F5 </fl><fr>0319 31FA </fr>
: SHL16 ( a --> t a' ) <ok></ok><fl>0319 31FA </fl><fr>031D 3200 </fr>
  0 SWAP 10 U* SWAP ; ( t a' = SHL a ) <ok></ok><fl>031D 3200 </fl><fr>0323 3200 </fr>
: DIG ( n --> c ) <ok></ok><fl>0323 3200 </fl><fr>0327 3204 </fr>
  DUP 0A LT IF ELSE 7 + END_IF 30 + ; <ok></ok><fl>0327 3204 </fl><fr>0331 3204 </fr>
: TYPE <ok></ok><fl>0331 3204 </fl><fr>0335 3209 </fr>
  BEGIN DUP WHILE <ok></ok><fl>0335 3209 </fl><fr>0337 3209 </fr>
    SWAP DUP C@ EMIT 1+ <ok></ok><fl>0337 3209 </fl><fr>033C 3209 </fr>
    SWAP 1 - REPEAT <ok></ok><fl>033C 3209 </fl><fr>0340 3209 </fr>
  2DROP ; <ok></ok><fl>0340 3209 </fl><fr>0342 3209 </fr>
: HG. SHL16 DIG EMIT SHL16 DIG EMIT SHL16 DIG EMIT <ok></ok><fl>0342 3209 </fl><fr>034F 320D </fr>
  SHL16 DIG EMIT DROP ; <ok></ok><fl>034F 320D </fl><fr>0354 320D </fr>
: H. HG. 20 EMIT ; <ok></ok><fl>0354 320D </fl><fr>035C 3210 </fr>
: . H. ; <ok></ok><fl>035C 3210 </fl><fr>0362 3212 </fr>
: ? @ . ; <ok></ok><fl>0362 3212 </fl><fr>0369 3214 </fr>
: CR  <ok></ok><fl>0369 3214 </fl><fr>036D 3217 </fr>
  CRDP @ DP @ - STAT @ 0= NOT OR XBIT @ 0= NOT AND IF  <ok></ok><fl>036D 3217 </fl><fr>037D 3217 </fr>
    3C EMIT ." fl>" CRDP @ . CRBZEIG @ . 3C EMIT ." /fl>" <ok></ok><fl>037D 3217 </fl><fr>038D 3220 </fr>
    3C EMIT ." fr>" DP @ . BZEIG @ . 3C EMIT ." /fr>" <ok></ok><fl>038D 3220 </fl><fr>039D 3229 </fr>
    DP @ CRDP ! BZEIG @ CRBZEIG !  <ok></ok><fl>039D 3229 </fl><fr>03A5 3229 </fr>
    END_IF <ok></ok><fl>03A5 3229 </fl><fr>03A5 3229 </fr>
  0A EMIT ; <ok></ok><fl>03A5 3229 </fl><fr>03A8 3229 </fr>
: FEHLERTEXT ( n --> n ) ; <ok></ok><fl>03A8 3229 </fl><fr>03AD 3234 </fr>
: DISABLE  <ok></ok><fl>03AD 3234 </fl><fr>03B1 323C </fr>
  CR ." weiter nach Taste ESCAPE " <ok></ok><fl>03B1 323C </fl><fr>03B5 3256 </fr>
  BEGIN 20 EMIT 8 EMIT KEY 1B = UNTIL ;  <ok></ok><fl>03B5 3256 </fl><fr>03BE 3256 </fr>
: ERROR <ok></ok><fl>03BE 3256 </fl><fr>03C2 325C </fr>
  DUP ERRORNR ! <ok></ok><fl>03C2 325C </fl><fr>03C5 325C </fr>
  0 STAT ! <ok></ok><fl>03C5 325C </fl><fr>03C8 325C </fr>
  CR IN1 @ IN3 @ IN1 @ - 1 - TYPE ." ???" <ok></ok><fl>03C8 325C </fl><fr>03D6 3260 </fr>
  " FEHLERTEXT" INTERPRET <ok></ok><fl>03D6 3260 </fl><fr>03DA 326B </fr>
  CR ." ERROR - Fehler Nummer " .  <ok></ok><fl>03DA 326B </fl><fr>03DF 3282 </fr>
  DISABLE QUIT ; <ok></ok><fl>03DF 3282 </fl><fr>03E2 3282 </fr>
: CSP! SP @ CSP ! ; <ok></ok><fl>03E2 3282 </fl><fr>03EB 3287 </fr>
: CSP? SP @ CSP @ - IF 9 ERROR END_IF ; <ok></ok><fl>03EB 3287 </fl><fr>03F8 328C </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="lokale Variablen"> 
: LOCAL ( n --> ) 1 + LOCALADRESSE @ OVER - DUP LOCALADRESSE ! ! ; <ok></ok><fl>03F8 328C </fl><fr>0407 3292 </fr>
: END_LOCAL ( --> ) LOCALADRESSE @ DUP @ + LOCALADRESSE ! ; <ok></ok><fl>0407 3292 </fl><fr>0413 329C </fr>
: L0 LOCALADRESSE @ 1 + ; <ok></ok><fl>0413 329C </fl><fr>041C 329F </fr>
: L1 LOCALADRESSE @ 2 + ; <ok></ok><fl>041C 329F </fl><fr>0425 32A2 </fr>
: L2 LOCALADRESSE @ 3 + ; <ok></ok><fl>0425 32A2 </fl><fr>042E 32A5 </fr>
: L3 LOCALADRESSE @ 4 + ; <ok></ok><fl>042E 32A5 </fl><fr>0437 32A8 </fr>
: L4 LOCALADRESSE @ 5 + ; <ok></ok><fl>0437 32A8 </fl><fr>0440 32AB </fr>
: L5 LOCALADRESSE @ 6 + ; <ok></ok><fl>0440 32AB </fl><fr>0449 32AE </fr>
: L6 LOCALADRESSE @ 7 + ; <ok></ok><fl>0449 32AE </fl><fr>0452 32B1 </fr>
: L7 LOCALADRESSE @ 8 + ; ( soviele reichen schon ) <ok></ok><fl>0452 32B1 </fl><fr>045B 32B4 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="alles zu KEY"> 
IMMEDIATE: ' ( /name/ --> --> pfa )  <ok></ok><fl>045B 32B4 </fl><fr>045F 32B6 </fr>
  20 WORD FIND LCFA DROP 1+ STAT @ IF LIT, END_IF ;  <ok></ok><fl>045F 32B6 </fl><fr>046A 32B6 </fr>
 <ok></ok>
: INCR4 ( adr --> ) <ok></ok><fl>046A 32B6 </fl><fr>046E 32BC </fr>
  DUP @ 1 + <ok></ok><fl>046E 32BC </fl><fr>0472 32BC </fr>
  DUP 3FF AND 000 = IF 400 - END_IF  <ok></ok><fl>0472 32BC </fl><fr>047A 32BC </fr>
  SWAP ! <ok></ok><fl>047A 32BC </fl><fr>047C 32BC </fr>
  ; <ok></ok><fl>047C 32BC </fl><fr>047D 32BC </fr>
 <ok></ok>
: KEY_INT ( --> ) <ok></ok><fl>047D 32BC </fl><fr>0481 32C4 </fr>
  KEYADR @  <ok></ok><fl>0481 32C4 </fl><fr>0483 32C4 </fr>
  DUP 08 LT IF  <ok></ok><fl>0483 32C4 </fl><fr>0487 32C4 </fr>
    18 + @ DUP IF DUP EXECUTE END_IF <ok></ok><fl>0487 32C4 </fl><fr>048E 32C4 </fr>
    DROP <ok></ok><fl>048E 32C4 </fl><fr>048F 32C4 </fr>
    ELSE <ok></ok><fl>048F 32C4 </fl><fr>0490 32C4 </fr>
      IRAMADR @ !  <ok></ok><fl>0490 32C4 </fl><fr>0493 32C4 </fr>
      IRAMADR INCR4 <ok></ok><fl>0493 32C4 </fl><fr>0495 32C4 </fr>
      IRAMADR @ JRAMADR @ - 3FF AND  <ok></ok><fl>0495 32C4 </fl><fr>049C 32C4 </fr>
      80 > IF XOFF @ 0= IF -1 XOFF ! 13 EMIT END_IF END_IF  <ok></ok><fl>049C 32C4 </fl><fr>04A8 32C4 </fr>
      END_IF <ok></ok><fl>04A8 32C4 </fl><fr>04A8 32C4 </fr>
  0 KEYADR ! <ok></ok><fl>04A8 32C4 </fl><fr>04AB 32C4 </fr>
  ; <ok></ok><fl>04AB 32C4 </fl><fr>04AC 32C4 </fr>
 <ok></ok>
: KEYCODE2 ( --> c f ) <ok></ok><fl>04AC 32C4 </fl><fr>04B0 32CD </fr>
  JRAMADR @ IRAMADR @ = IF 0 0  <ok></ok><fl>04B0 32CD </fl><fr>04B8 32CD </fr>
    ELSE JRAMADR @ @ -1 <ok></ok><fl>04B8 32CD </fl><fr>04BD 32CD </fr>
    JRAMADR INCR4 <ok></ok><fl>04BD 32CD </fl><fr>04BF 32CD </fr>
    IRAMADR @ JRAMADR @ - 3FF AND <ok></ok><fl>04BF 32CD </fl><fr>04C6 32CD </fr>
    20 LT IF XOFF @ IF 0 XOFF ! 11 EMIT END_IF END_IF <ok></ok><fl>04C6 32CD </fl><fr>04D1 32CD </fr>
    END_IF <ok></ok><fl>04D1 32CD </fl><fr>04D1 32CD </fr>
  ; <ok></ok><fl>04D1 32CD </fl><fr>04D2 32CD </fr>
 <ok></ok>
' KEY_INT 4000 + 12 ! <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="es folgt der Interpreter"> 
( ESCAPE durch EXPECT durchlaufen lassen ) <ok></ok>
( und 7F in 08 umwandeln ) <ok></ok>
( und nach n Zeichen kein 0D mehr lesen ) <ok></ok>
: EXPECT ( /text/  adr n --> adr m ) <ok></ok><fl>04D2 32CD </fl><fr>04D6 32D4 </fr>
  5 LOCAL <ok></ok><fl>04D6 32D4 </fl><fr>04D8 32D4 </fr>
  L2 ! L1 ! L1 @ L4 ! <ok></ok><fl>04D8 32D4 </fl><fr>04E0 32D4 </fr>
  BEGIN <ok></ok><fl>04E0 32D4 </fl><fr>04E0 32D4 </fr>
    KEY <ok></ok><fl>04E0 32D4 </fl><fr>04E1 32D4 </fr>
    DUP 14 ( 20 ) ( =^T, ^R=18 ) = IF  <ok></ok><fl>04E1 32D4 </fl><fr>04E5 32D4 </fr>
      DROP L1 @ C@ END_IF <ok></ok><fl>04E5 32D4 </fl><fr>04E9 32D4 </fr>
    DUP 7F = IF DROP 08 END_IF <ok></ok><fl>04E9 32D4 </fl><fr>04EF 32D4 </fr>
    DUP 08 = IF L4 @ L1 @ LT IF <ok></ok><fl>04EF 32D4 </fl><fr>04F9 32D4 </fr>
      -1 L1 +! <ok></ok><fl>04F9 32D4 </fl><fr>04FC 32D4 </fr>
      1 L2 +! <ok></ok><fl>04FC 32D4 </fl><fr>04FF 32D4 </fr>
      8 EMIT 20 ( 32 ) EMIT 8 EMIT <ok></ok><fl>04FF 32D4 </fl><fr>0505 32D4 </fr>
      END_IF END_IF <ok></ok><fl>0505 32D4 </fl><fr>0505 32D4 </fr>
(    DUP 20 ( 32 ] LT NOT OVER 08 = OR OVER 1B = OR L2 @ 0= NOT AND WHILE <ok></ok><fl>0505 32D4 </fl><fr>0505 32D4 </fr>
      DUP 20 LT IF ( DROP ) ELSE <ok></ok><fl>0505 32D4 </fl><fr>050A 32D4 </fr>
        -1 L2 +! <ok></ok><fl>050A 32D4 </fl><fr>050D 32D4 </fr>
        L2 @ 0LT IF 6 ERROR END_IF <ok></ok><fl>050D 32D4 </fl><fr>0513 32D4 </fr>
        DUP EMIT <ok></ok><fl>0513 32D4 </fl><fr>0515 32D4 </fr>
        DUP L1 @ C! 1 L1 +! <ok></ok><fl>0515 32D4 </fl><fr>051C 32D4 </fr>
        END_IF  <ok></ok><fl>051C 32D4 </fl><fr>051C 32D4 </fr>
    DUP 20 LT OVER 08 = NOT AND SWAP 1B = NOT AND L2 @ 0= OR UNTIL <ok></ok><fl>051C 32D4 </fl><fr>052E 32D4 </fr>
(      REPEAT <ok></ok><fl>052E 32D4 </fl><fr>052E 32D4 </fr>
  20 ( 32 ) EMIT <ok></ok><fl>052E 32D4 </fl><fr>0530 32D4 </fr>
  L4 @ L1 @ L4 @ - <ok></ok><fl>0530 32D4 </fl><fr>0537 32D4 </fr>
  2DUP + 0 SWAP C! <ok></ok><fl>0537 32D4 </fl><fr>053C 32D4 </fr>
  END_LOCAL <ok></ok><fl>053C 32D4 </fl><fr>053D 32D4 </fr>
  ; <ok></ok><fl>053D 32D4 </fl><fr>053E 32D4 </fr>
 <ok></ok>
 <ok></ok>
: DIGIT ( z --> d r ) ( r=-1 wenn gueltig ) <ok></ok><fl>053E 32D4 </fl><fr>0542 32DA </fr>
  ( vorher r=0 wenn gueltig!!! ) <ok></ok><fl>0542 32DA </fl><fr>0542 32DA </fr>
  DUP 30 ( 30 48 ) LT NOT OVER 3A ( 3A 58 ) LT AND <ok></ok><fl>0542 32DA </fl><fr>054A 32DA </fr>
  OVER 41 ( 41 65 ) LT NOT OR  <ok></ok><fl>054A 32DA </fl><fr>054F 32DA </fr>
  DUP IF ( z -1 wenn gueltig ) <ok></ok><fl>054F 32DA </fl><fr>0551 32DA </fr>
    SWAP 30 ( 30 48 ) - <ok></ok><fl>0551 32DA </fl><fr>0554 32DA </fr>
    DUP 0A LT NOT IF 7 - END_IF <ok></ok><fl>0554 32DA </fl><fr>055B 32DA </fr>
    DUP BASE @ LT NOT IF DROP DROP 0 0 END_IF <ok></ok><fl>055B 32DA </fl><fr>0565 32DA </fr>
    SWAP END_IF ; <ok></ok><fl>0565 32DA </fl><fr>0567 32DA </fr>
 <ok></ok>
: NUMBER ( badr n --> a r ) <ok></ok><fl>0567 32DA </fl><fr>056B 32E1 </fr>
  7 LOCAL ( L3 L4 nicht verwendet ) <ok></ok><fl>056B 32E1 </fl><fr>056D 32E1 </fr>
  L1 ! L0 ! <ok></ok><fl>056D 32E1 </fl><fr>0571 32E1 </fr>
  0 L1 @ IF <ok></ok><fl>0571 32E1 </fl><fr>0575 32E1 </fr>
    DUP L2 ! 1 L5 ! ( Vorzeichen ) <ok></ok><fl>0575 32E1 </fl><fr>057B 32E1 </fr>
    BEGIN ( M23 Vorzeichen gucken ) <ok></ok><fl>057B 32E1 </fl><fr>057B 32E1 </fr>
      -1 L6 !  <ok></ok><fl>057B 32E1 </fl><fr>057E 32E1 </fr>
      L0 @ L2 @ + C@ <ok></ok><fl>057E 32E1 </fl><fr>0584 32E1 </fr>
      2B ( 43 2B ) = IF L2 @ 1+ L2 ! 0 L6 ! ELSE <ok></ok><fl>0584 32E1 </fl><fr>0590 32E1 </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>0590 32E1 </fl><fr>0596 32E1 </fr>
        2D ( 45 2D ) = IF L2 @ 1+ L2 ! <ok></ok><fl>0596 32E1 </fl><fr>059E 32E1 </fr>
          0 L6 ! <ok></ok><fl>059E 32E1 </fl><fr>05A1 32E1 </fr>
          L5 @ MINUS L5 ! END_IF <ok></ok><fl>05A1 32E1 </fl><fr>05A6 32E1 </fr>
        END_IF <ok></ok><fl>05A6 32E1 </fl><fr>05A6 32E1 </fr>
      L6 @ UNTIL <ok></ok><fl>05A6 32E1 </fl><fr>05A9 32E1 </fr>
    L2 @ L1 @ LT IF <ok></ok><fl>05A9 32E1 </fl><fr>05AF 32E1 </fr>
      BEGIN <ok></ok><fl>05AF 32E1 </fl><fr>05AF 32E1 </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>05AF 32E1 </fl><fr>05B5 32E1 </fr>
        DUP IF ( oo L1 auf Bytes ) <ok></ok><fl>05B5 32E1 </fl><fr>05B7 32E1 </fr>
          DIGIT NOT IF DROP L1 @ MINUS L1 ! ELSE <ok></ok><fl>05B7 32E1 </fl><fr>05C1 32E1 </fr>
            SWAP BASE @ * + <ok></ok><fl>05C1 32E1 </fl><fr>05C6 32E1 </fr>
            L2 @ 1+ L2 !  <ok></ok><fl>05C6 32E1 </fl><fr>05CB 32E1 </fr>
            END_IF <ok></ok><fl>05CB 32E1 </fl><fr>05CB 32E1 </fr>
          ELSE DROP L2 @ L1 ! END_IF <ok></ok><fl>05CB 32E1 </fl><fr>05D1 32E1 </fr>
        L2 @ L1 @ LT NOT UNTIL <ok></ok><fl>05D1 32E1 </fl><fr>05D8 32E1 </fr>
      END_IF ( M19 ) <ok></ok><fl>05D8 32E1 </fl><fr>05D8 32E1 </fr>
    END_IF ( M19 ) <ok></ok><fl>05D8 32E1 </fl><fr>05D8 32E1 </fr>
  L5 @ 0LT IF MINUS END_IF <ok></ok><fl>05D8 32E1 </fl><fr>05DD 32E1 </fr>
  L2 @ L1 @ - ( oo noch kein fadr ) <ok></ok><fl>05DD 32E1 </fl><fr>05E2 32E1 </fr>
  END_LOCAL <ok></ok><fl>05E2 32E1 </fl><fr>05E3 32E1 </fr>
  ; <ok></ok><fl>05E3 32E1 </fl><fr>05E4 32E1 </fr>
 <ok></ok>
: WORD ( b --> adr n ) <ok></ok><fl>05E4 32E1 </fl><fr>05E8 32E6 </fr>
  >R <ok></ok><fl>05E8 32E6 </fl><fr>05E9 32E6 </fr>
  IN3 @ IN2 ! <ok></ok><fl>05E9 32E6 </fl><fr>05ED 32E6 </fr>
  BEGIN  <ok></ok><fl>05ED 32E6 </fl><fr>05ED 32E6 </fr>
    IN3 @ C@ R = IN3 @ IN4 @ LT AND WHILE <ok></ok><fl>05ED 32E6 </fl><fr>05F9 32E6 </fr>
      1 IN3 +! REPEAT <ok></ok><fl>05F9 32E6 </fl><fr>05FD 32E6 </fr>
  IN3 @ IN2 ! <ok></ok><fl>05FD 32E6 </fl><fr>0601 32E6 </fr>
  BEGIN  <ok></ok><fl>0601 32E6 </fl><fr>0601 32E6 </fr>
    IN3 @ C@ 3C = IF IN3 @ IN4 ! END_IF ( alles nach 3C ist Kommentar ) <ok></ok><fl>0601 32E6 </fl><fr>060B 32E6 </fr>
    IN3 @ C@ R = NOT IN3 @ IN4 @ LT AND WHILE <ok></ok><fl>060B 32E6 </fl><fr>0618 32E6 </fr>
      1 IN3 +! REPEAT <ok></ok><fl>0618 32E6 </fl><fr>061C 32E6 </fr>
  IN2 @ IN3 @ OVER - <ok></ok><fl>061C 32E6 </fl><fr>0622 32E6 </fr>
  DUP IF 1 IN3 +! END_IF <ok></ok><fl>0622 32E6 </fl><fr>0627 32E6 </fr>
  R> DROP <ok></ok><fl>0627 32E6 </fl><fr>0629 32E6 </fr>
  ; <ok></ok><fl>0629 32E6 </fl><fr>062A 32E6 </fr>
 <ok></ok>
: Z= ( adr1 n1 adr2 n2 --> r ) <ok></ok><fl>062A 32E6 </fl><fr>062E 32E9 </fr>
  >R OVER R - IF R> DROP DROP DROP DROP 0 ELSE <ok></ok><fl>062E 32E9 </fl><fr>063A 32E9 </fr>
    R> DROP SWAP 0 BEGIN 2DUP - WHILE >R >R <ok></ok><fl>063A 32E9 </fl><fr>0643 32E9 </fr>
      OVER C@ OVER C@ - IF DROP DROP 0 0 END_IF <ok></ok><fl>0643 32E9 </fl><fr>064D 32E9 </fr>
      DUP IF 1+ SWAP 1+ SWAP END_IF <ok></ok><fl>064D 32E9 </fl><fr>0653 32E9 </fr>
      R> R> 1+ REPEAT 2DROP ( neu bei 16 BIT ohne DO LOOP ) <ok></ok><fl>0653 32E9 </fl><fr>0658 32E9 </fr>
    DROP IF -1 ELSE 0 END_IF <ok></ok><fl>0658 32E9 </fl><fr>065D 32E9 </fr>
    END_IF ; <ok></ok><fl>065D 32E9 </fl><fr>065E 32E9 </fr>
( : Z= DROP SWAP DROP SWAP @ SWAP @ = ; <ok></ok>
 <ok></ok>
: FIND ( adr n --> lfa r ) <ok></ok><fl>065E 32E9 </fl><fr>0662 32EE </fr>
  >R >R 0 ( heisst noch nicht gefunden ) <ok></ok><fl>0662 32EE </fl><fr>0665 32EE </fr>
  LFA @  <ok></ok><fl>0665 32EE </fl><fr>0667 32EE </fr>
  SMUDGEBIT @ IF DUP @ + END_IF <ok></ok><fl>0667 32EE </fl><fr>066D 32EE </fr>
  BEGIN <ok></ok><fl>066D 32EE </fl><fr>066D 32EE </fr>
    DUP 1+ DUP @ ( lfa nfa adr ) <ok></ok><fl>066D 32EE </fl><fr>0671 32EE </fr>
    SWAP 1+ @ ( lfa adr n1 ) <ok></ok><fl>0671 32EE </fl><fr>0674 32EE </fr>
    ( 2DUP CR B. 2DUP TYPE <ok></ok><fl>0674 32EE </fl><fr>0674 32EE </fr>
    ( BEGIN 2DUP + 1 - C@ 0= WHILE 1 - REPEAT ( ??? momentan nicht ) <ok></ok><fl>0674 32EE </fl><fr>0674 32EE </fr>
    R> R> 2DUP >R >R ( 0 lfa adr1 n1 adr2 n2 ) <ok></ok><fl>0674 32EE </fl><fr>0679 32EE </fr>
    Z= IF SWAP 0= SWAP END_IF ( heisst gefunden ) <ok></ok><fl>0679 32EE </fl><fr>067E 32EE </fr>
    OVER 0= OVER @ 0= NOT AND  <ok></ok><fl>067E 32EE </fl><fr>0685 32EE </fr>
    OVER DUP @ + LFA @ = NOT AND WHILE ( wegen 2xladen ) <ok></ok><fl>0685 32EE </fl><fr>068F 32EE </fr>
      DUP @ + REPEAT <ok></ok><fl>068F 32EE </fl><fr>0693 32EE </fr>
  R> DROP R> <ok></ok><fl>0693 32EE </fl><fr>0696 32EE </fr>
  ROT 0= IF DROP DROP 0 0 END_IF <ok></ok><fl>0696 32EE </fl><fr>069D 32EE </fr>
  ( OVER LFA @ SWAP LT IF ." *" OVER . LFA @ . END_IF ( vref wenn gebraucht ) <ok></ok><fl>069D 32EE </fl><fr>069D 32EE </fr>
  ; <ok></ok><fl>069D 32EE </fl><fr>069E 32EE </fr>
 <ok></ok>
: LCFA ( lfa r --> cfa r ) SWAP 3 + SWAP ; <ok></ok><fl>069E 32EE </fl><fr>06A7 32F3 </fr>
 <ok></ok>
: COMPILE, ( adr --> ) 4000 + , ; <ok></ok><fl>06A7 32F3 </fl><fr>06B0 32FC </fr>
 <ok></ok>
: CREATE ( /name/  --> ) <ok></ok><fl>06B0 32FC </fl><fr>06B4 3303 </fr>
  CSP! ( Stapelbalance prüfen in ; ) <ok></ok><fl>06B4 3303 </fl><fr>06B5 3303 </fr>
  DP @ LFA @ OVER - , LFA ! <ok></ok><fl>06B5 3303 </fl><fr>06BE 3303 </fr>
  20 WORD Z, <ok></ok><fl>06BE 3303 </fl><fr>06C1 3303 </fr>
  1 SMUDGEBIT ! ( HERE 2 - DUP @ MINUS SWAP ! ( UNSMUDGE ) <ok></ok><fl>06C1 3303 </fl><fr>06C4 3303 </fr>
  ; <ok></ok><fl>06C4 3303 </fl><fr>06C5 3303 </fr>
 <ok></ok>
: INTERPRET ( adr n --> ... ) <ok></ok><fl>06C5 3303 </fl><fr>06C9 330D </fr>
  IN1 @ >R IN2 @ >R IN3 @ >R IN4 @ >R <ok></ok><fl>06C9 330D </fl><fr>06D5 330D </fr>
  OVER + IN4 ! <ok></ok><fl>06D5 330D </fl><fr>06D9 330D </fr>
  DUP IN1 ! DUP IN2 ! IN3 ! <ok></ok><fl>06D9 330D </fl><fr>06E1 330D </fr>
  BEGIN <ok></ok><fl>06E1 330D </fl><fr>06E1 330D </fr>
  ( ... qstack? Stapelpruefen ) <ok></ok><fl>06E1 330D </fl><fr>06E1 330D </fr>
  20 WORD <ok></ok><fl>06E1 330D </fl><fr>06E3 330D </fr>
  DUP WHILE <ok></ok><fl>06E3 330D </fl><fr>06E5 330D </fr>
    2DUP FIND  <ok></ok><fl>06E5 330D </fl><fr>06E7 330D </fr>
    DUP IF ( gefunden ) <ok></ok><fl>06E7 330D </fl><fr>06E9 330D </fr>
      >R >R 2DROP R> R> LCFA DROP EXECUTE <ok></ok><fl>06E9 330D </fl><fr>06F1 330D </fr>
      ELSE ( nicht gefunden ) <ok></ok><fl>06F1 330D </fl><fr>06F2 330D </fr>
        2DROP <ok></ok><fl>06F2 330D </fl><fr>06F3 330D </fr>
        2DUP NUMBER IF ( keine Zahl ) <ok></ok><fl>06F3 330D </fl><fr>06F6 330D </fr>
          2DROP DROP <ok></ok><fl>06F6 330D </fl><fr>06F8 330D </fr>
          3 ERROR <ok></ok><fl>06F8 330D </fl><fr>06FA 330D </fr>
         ( DROP BNUMBER <ok></ok><fl>06FA 330D </fl><fr>06FA 330D </fr>
         ( DUP IF DUP IN2 ! END_IF <ok></ok><fl>06FA 330D </fl><fr>06FA 330D </fr>
         ( IF 3 ERROR END_IF <ok></ok><fl>06FA 330D </fl><fr>06FA 330D </fr>
         ( STAT @ IF SWAP LIT, LIT, END_IF <ok></ok><fl>06FA 330D </fl><fr>06FA 330D </fr>
          ELSE ( eine Zahl ) <ok></ok><fl>06FA 330D </fl><fr>06FB 330D </fr>
            ROT DROP SWAP DROP <ok></ok><fl>06FB 330D </fl><fr>06FF 330D </fr>
            STAT @ IF LIT, END_IF ( oo LIT, fuer gr ) <ok></ok><fl>06FF 330D </fl><fr>0703 330D </fr>
            END_IF <ok></ok><fl>0703 330D </fl><fr>0703 330D </fr>
        END_IF <ok></ok><fl>0703 330D </fl><fr>0703 330D </fr>
    REPEAT 2DROP <ok></ok><fl>0703 330D </fl><fr>0705 330D </fr>
  R> IN4 ! R> IN3 ! R> IN2 ! R> IN1 ! <ok></ok><fl>0705 330D </fl><fr>0711 330D </fr>
  ; <ok></ok><fl>0711 330D </fl><fr>0712 330D </fr>
 <ok></ok>
: QUIT <ok></ok><fl>0712 330D </fl><fr>0716 3312 </fr>
  RP0 @ RP !  <ok></ok><fl>0716 3312 </fl><fr>071A 3312 </fr>
  XBIT @ IF 3C EMIT ." /ok>" ELSE ." ok" END_IF <ok></ok><fl>071A 3312 </fl><fr>0726 331A </fr>
  BEGIN ( im Prinzip nur BEGIN CR TIB @ 100 EXPECT INTERPRET AGAIN ) <ok></ok><fl>0726 331A </fl><fr>0726 331A </fr>
    CR  <ok></ok><fl>0726 331A </fl><fr>0727 331A </fr>
    TIB @ 100 EXPECT <ok></ok><fl>0727 331A </fl><fr>072B 331A </fr>
    OVER @ 3C = IF 2DROP ELSE ( xml am Zeilenanfang gleich überlesen ) <ok></ok><fl>072B 331A </fl><fr>0732 331A </fr>
      XBIT @ IF  <ok></ok><fl>0732 331A </fl><fr>0735 331A </fr>
        3C EMIT ." ok>"  <ok></ok><fl>0735 331A </fl><fr>073A 331E </fr>
        INTERPRET  <ok></ok><fl>073A 331E </fl><fr>073B 331E </fr>
        3C EMIT ." /ok>"  <ok></ok><fl>073B 331E </fl><fr>0740 3323 </fr>
        ELSE <ok></ok><fl>0740 3323 </fl><fr>0741 3323 </fr>
          1B EMIT 5B EMIT 33 EMIT 36 EMIT 6D EMIT <ok></ok><fl>0741 3323 </fl><fr>074B 3323 </fr>
          INTERPRET  <ok></ok><fl>074B 3323 </fl><fr>074C 3323 </fr>
          STAT @ 0= IF ." ok" END_IF  <ok></ok><fl>074C 3323 </fl><fr>0753 3326 </fr>
          1B EMIT 5B EMIT 33 EMIT 39 EMIT 6D EMIT <ok></ok><fl>0753 3326 </fl><fr>075D 3326 </fr>
          END_IF  <ok></ok><fl>075D 3326 </fl><fr>075D 3326 </fr>
      END_IF <ok></ok><fl>075D 3326 </fl><fr>075D 3326 </fr>
    AGAIN  <ok></ok><fl>075D 3326 </fl><fr>075E 3326 </fr>
  ; <ok></ok><fl>075E 3326 </fl><fr>075F 3326 </fr>
 <ok></ok>
 <ok></ok>
: START ." FORTY-FORTH" CR CR QUIT ; <ok></ok><fl>075F 3326 </fl><fr>076A 3338 </fr>
 <ok></ok>
 <ok></ok>
: SMUDGE 0 SMUDGEBIT ! ( LFA @ 1+ DUP @ DUP 0LT IF MINUS END_IF SWAP ! ) ; <ok></ok><fl>076A 3338 </fl><fr>0772 333F </fr>
 <ok></ok>
: (IMMEDIATE:) R> >R ; <ok></ok><fl>0772 333F </fl><fr>0779 334C </fr>
:   (COMPILE:) R> COMPILE, ; <ok></ok><fl>0779 334C </fl><fr>0780 3357 </fr>
:          (:) R> STAT @ IF COMPILE, ELSE >R END_IF ; <ok></ok><fl>0780 3357 </fl><fr>078C 335B </fr>
 <ok></ok>
: IMMEDIATE: CREATE 1 STAT ! COMPILE (IMMEDIATE:) ; <ok></ok><fl>078C 335B </fl><fr>0796 3366 </fr>
:   COMPILE: CREATE 1 STAT ! COMPILE (COMPILE:) ; <ok></ok><fl>0796 3366 </fl><fr>07A0 336F </fr>
:          : CREATE 1 STAT ! COMPILE (:) ; <ok></ok><fl>07A0 336F </fl><fr>07AA 3371 </fr>
 <ok></ok>
( das hier jetzt mit dem neuen CREATE: ) <ok></ok>
IMMEDIATE: ; 0 STAT ! CSP? A003 , SMUDGE { SMUDGE } ;  <ok></ok><fl>07AA 3371 </fl><fr>07B7 3373 </fr>
( tatsaechlich { SMUDGE } wegen 2x laden!!! )  <ok></ok>
( Ende der Axiome. Hiermit enden die Axiome. ) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="neues Vokabular abkoppeln und Programm neu starten"> 
0 DPMERK @ ! ( abkoppeln ) <ok></ok>
HERE . BZEIG ? <ok>07B7 3373 </ok>
 <ok></ok>
START <ok>FORTY-FORTH

</ok>
</sekt> 
</sekt> 
</AXIOME> 
 <ok></ok>
<FFINIT2> 
<sekt inhalt="bis Adresse 0800H passt noch DUMPZ drauf (inzwischen nicht mehr)"> 
( erste Forth Erweiterungen ) <ok></ok>
( - DUMPZ ) <ok></ok>
( RAMB-Inhaltsausgabe erzeugen: ) <ok></ok>
: LG. ( n --> ) <ok></ok><fl>07B7 3373 </fl><fr>07BB 3377 </fr>
  DUBIT @ IF SHL16 DROP SHL16 DROP  <ok></ok><fl>07BB 3377 </fl><fr>07C2 3377 </fr>
    ELSE SHL16 DIG EMIT SHL16 DIG EMIT END_IF  <ok></ok><fl>07C2 3377 </fl><fr>07C9 3377 </fr>
  SHL16 DIG EMIT SHL16 DIG EMIT DROP ; <ok></ok><fl>07C9 3377 </fl><fr>07D1 3377 </fr>
: NG. ( n --> ) <ok></ok><fl>07D1 3377 </fl><fr>07D5 337B </fr>
  ." x" 22 EMIT LG. 22 EMIT ." ," ;  <ok></ok><fl>07D5 337B </fl><fr>07E1 337F </fr>
: DUMPZ ( bis+1 von dubit --> ) <ok></ok><fl>07E1 337F </fl><fr>07E5 3385 </fr>
  DUBIT ! XBIT @ >R 0 XBIT ! <ok></ok><fl>07E5 3385 </fl><fr>07ED 3385 </fr>
  " ' START " INTERPRET 4000 + 10 ! <ok></ok><fl>07ED 3385 </fl><fr>07F6 338E </fr>
  CR 3C EMIT ." DUMPZ>" <ok></ok><fl>07F6 338E </fl><fr>07FC 3395 </fr>
  BEGIN <ok></ok><fl>07FC 3395 </fl><fr>07FC 3395 </fr>
    CR ."   " <ok></ok><fl>07FC 3395 </fl><fr>0800 3398 </fr>
    0000 BEGIN <ok></ok><fl>0800 3398 </fl><fr>0801 3398 </fr>
      2DUP + <ok></ok><fl>0801 3398 </fl><fr>0803 3398 </fr>
      DUP IRAMADR = IF DROP JRAMADR END_IF <ok></ok><fl>0803 3398 </fl><fr>0809 3398 </fr>
      DUP LOCALADRESSE = IF DROP 2F00 2F80 ! 2F80 END_IF <ok></ok><fl>0809 3398 </fl><fr>0812 3398 </fr>
      @ NG. 1+ DUP 10 = <ok></ok><fl>0812 3398 </fl><fr>0818 3398 </fr>
      UNTIL DROP <ok></ok><fl>0818 3398 </fl><fr>081A 3398 </fr>
    ."  -- " DUP HG. ." -" DUP 0F + . <ok></ok><fl>081A 3398 </fl><fr>0826 339F </fr>
    10 + <ok></ok><fl>0826 339F </fl><fr>0828 339F </fr>
    2DUP > NOT UNTIL 2DROP <ok></ok><fl>0828 339F </fl><fr>082D 339F </fr>
  CR 3C EMIT ." /DUMPZ>" <ok></ok><fl>082D 339F </fl><fr>0833 33A7 </fr>
  R> XBIT ! <ok></ok><fl>0833 33A7 </fl><fr>0836 33A7 </fr>
  ; <ok></ok><fl>0836 33A7 </fl><fr>0837 33A7 </fr>
 <ok></ok>
HERE . BZEIG ? <ok>0837 33A7 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="ProgRAM und ByteRAM für Step_9 und Step_10 erstellen"> 
HERE 0 0 DUMPZ          ( generiert ProgRAM für P20_FFP.vhd Step_10 ) <ok>
<DUMPZ>
  x"4010",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 0000-000F 
  x"4763",x"A003",x"4481",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"0010",x"A003", -- 0010-001F 
  x"0000",x"3000",x"0001",x"4776",x"0029",x"45E8",x"B200",x"A003",x"FFF8",x"3002",x"0001",x"4776",x"0000",x"2F10",x"A009",x"A003", -- 0020-002F 
  x"FFF8",x"3004",x"0001",x"4784",x"0001",x"2F10",x"A009",x"A003",x"FFF8",x"3006",x"0007",x"4776",x"0020",x"45E8",x"4662",x"46A2", -- 0030-003F 
  x"B300",x"46AB",x"A003",x"FFF5",x"300E",x"0006",x"477D",x"42C6",x"B501",x"4279",x"42D9",x"A00A",x"A003",x"FFF6",x"3015",x"0004", -- 0040-004F 
  x"4784",x"B501",x"3FFF",x"42A0",x"B502",x"C000",x"428E",x"A00E",x"9001",x"4046",x"42F9",x"A003",x"FFF1",x"301A",x"000B",x"477D", -- 0050-005F 
  x"42C6",x"A00A",x"2F10",x"A00A",x"9001",x"4051",x"A003",x"FFF5",x"3026",x"0008",x"4784",x"46B4",x"405F",x"42F9",x"476E",x"A003", -- 0060-006F 
  x"FFF7",x"302F",x"0006",x"4060",x"2800",x"FFFB",x"3036",x"0002",x"4060",x"2801",x"FFFB",x"3039",x"0002",x"4060",x"2802",x"FFFB", -- 0070-007F 
  x"303C",x"0002",x"4060",x"2803",x"FFFB",x"303F",x"0004",x"4060",x"2F00",x"FFFB",x"3044",x"0009",x"4060",x"2F01",x"FFFB",x"304E", -- 0080-008F 
  x"0003",x"4060",x"2F02",x"FFFB",x"3052",x"0007",x"4060",x"2F03",x"FFFB",x"305A",x"0007",x"4060",x"2F04",x"FFFB",x"3062",x"0004", -- 0090-009F 
  x"4060",x"2F05",x"FFFB",x"3067",x"0007",x"4060",x"2F06",x"FFFB",x"306F",x"0004",x"4060",x"2F07",x"FFFB",x"3074",x"0004",x"4060", -- 00A0-00AF 
  x"2F08",x"FFFB",x"3079",x"0003",x"4060",x"2F09",x"FFFB",x"307D",x"0003",x"4060",x"2F0A",x"FFFB",x"3081",x"0003",x"4060",x"2F0B", -- 00B0-00BF 
  x"FFFB",x"3085",x"0003",x"4060",x"2F0C",x"FFFB",x"3089",x"0003",x"4060",x"2F0D",x"FFFB",x"308D",x"0007",x"4060",x"2F0E",x"FFFB", -- 00C0-00CF 
  x"3095",x"0002",x"4060",x"2F0F",x"FFFB",x"3098",x"0004",x"4060",x"2F10",x"FFFB",x"309D",x"0003",x"4060",x"2F11",x"FFFB",x"30A1", -- 00D0-00DF 
  x"0004",x"4060",x"2F12",x"FFFB",x"30A6",x"0005",x"4060",x"2F13",x"FFFB",x"30AC",x"0006",x"4060",x"2F14",x"FFFB",x"30B3",x"0003", -- 00E0-00EF 
  x"4060",x"2F15",x"FFFB",x"30B7",x"0005",x"4060",x"2F16",x"FFFB",x"30BD",x"000C",x"4060",x"2F17",x"FFFB",x"30CA",x"0007",x"4060", -- 00F0-00FF 
  x"01BE",x"FFFB",x"30D2",x"0006",x"4060",x"A003",x"FFFB",x"30D9",x"0008",x"477D",x"42C6",x"2F10",x"A00A",x"9003",x"A00A",x"42F9", -- 0100-010F 
  x"8001",x"4304",x"A003",x"FFF3",x"30E2",x"0005",x"4784",x"46B4",x"4109",x"42F9",x"4047",x"A003",x"42F9",x"476E",x"A003",x"FFF4", -- 0110-011F 
  x"30E8",x"0005",x"410A",x"A000",x"A003",x"FFFA",x"30EE",x"0002",x"410A",x"A001",x"A003",x"FFFA",x"30F1",x"0002",x"410A",x"A002", -- 0120-012F 
  x"A003",x"FFFA",x"30F4",x"0002",x"410A",x"A00D",x"A003",x"FFFA",x"30F7",x"0003",x"410A",x"A00F",x"A003",x"FFFA",x"30FB",x"0008", -- 0130-013F 
  x"410A",x"A005",x"A003",x"FFFA",x"3104",x"0003",x"410A",x"A00B",x"A003",x"FFFA",x"3108",x"0003",x"410A",x"A008",x"A003",x"FFFA", -- 0140-014F 
  x"310C",x"0002",x"410A",x"A00E",x"A003",x"FFFA",x"310F",x"0001",x"410A",x"A007",x"A003",x"FFFA",x"3111",x"0001",x"410A",x"A009", -- 0150-015F 
  x"A003",x"FFFA",x"3113",x"0001",x"410A",x"A00A",x"A003",x"FFFA",x"3115",x"0004",x"410A",x"B412",x"A003",x"FFFA",x"311A",x"0004", -- 0160-016F 
  x"410A",x"B502",x"A003",x"FFFA",x"311F",x"0003",x"410A",x"B501",x"A003",x"FFFA",x"3123",x"0003",x"410A",x"B434",x"A003",x"FFFA", -- 0170-017F 
  x"3127",x"0004",x"410A",x"B300",x"A003",x"FFFA",x"312C",x"0005",x"410A",x"B43C",x"A003",x"FFFA",x"3132",x"0005",x"410A",x"B60C", -- 0180-018F 
  x"A003",x"FFFA",x"3138",x"0004",x"410A",x"B603",x"A003",x"FFFA",x"313D",x"0005",x"410A",x"B200",x"A003",x"FFFA",x"3143",x"0004", -- 0190-019F 
  x"410A",x"8000",x"A003",x"FFFA",x"3148",x"0002",x"4784",x"2F13",x"A00A",x"A009",x"0001",x"2F13",x"42BB",x"A003",x"FFF5",x"314B", -- 01A0-01AF 
  x"0002",x"4784",x"2F13",x"A00A",x"4051",x"B501",x"42F9",x"B412",x"B501",x"A00A",x"41A7",x"4279",x"B412",x"0001",x"4280",x"B501", -- 01B0-01BF 
  x"A00D",x"9FF5",x"B200",x"0020",x"41A7",x"A003",x"FFE8",x"314E",x"0007",x"477D",x"45E8",x"2F10",x"A00A",x"9003",x"41B2",x"42C6", -- 01C0-01CF 
  x"46AB",x"A003",x"FFF4",x"3156",x"0005",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"42F9",x"41C9",x"FFFF",x"2F15",x"42BB",x"A003", -- 01D0-01DF 
  x"FFF2",x"315C",x"0001",x"0022",x"41CA",x"A003",x"FFFA",x"315E",x"0002",x"0022",x"41CA",x"4335",x"A003",x"FFF9",x"3161",x"0004", -- 01E0-01EF 
  x"4784",x"2F0F",x"A00A",x"A003",x"FFF9",x"3166",x"0005",x"4784",x"0008",x"A003",x"FFFA",x"316C",x"0006",x"4784",x"0009",x"A003", -- 01F0-01FF 
  x"FFFA",x"3173",x"0006",x"4784",x"1000",x"42A7",x"B412",x"0FFF",x"A008",x"A00E",x"A003",x"FFF5",x"317A",x"0005",x"4784",x"2F0F", -- 0200-020F 
  x"42BB",x"A003",x"FFF9",x"3180",x"0007",x"4784",x"41F1",x"4279",x"4280",x"41F8",x"4204",x"42F9",x"A003",x"FFF5",x"3188",x"0008", -- 0210-021F 
  x"4784",x"41F1",x"4279",x"4280",x"41FE",x"4204",x"42F9",x"A003",x"FFF5",x"3191",x"0005",x"4776",x"41F1",x"A003",x"FFFA",x"3197", -- 0220-022F 
  x"0005",x"4776",x"4216",x"A003",x"FFFA",x"319D",x"0005",x"4776",x"4221",x"A003",x"FFFA",x"31A3",x"0002",x"4776",x"41FE",x"0001", -- 0230-023F 
  x"420F",x"41F1",x"A003",x"FFF7",x"31A6",x"0006",x"4776",x"41F1",x"B502",x"4280",x"B434",x"4204",x"B412",x"0001",x"4280",x"A009", -- 0240-024F 
  x"A003",x"FFF2",x"31AD",x"0004",x"4776",x"0001",x"420F",x"4246",x"41F8",x"41F1",x"A003",x"FFF6",x"31B2",x"0005",x"4776",x"423D", -- 0250-025F 
  x"A003",x"FFFA",x"31B8",x"0006",x"4776",x"B434",x"4231",x"4246",x"A003",x"FFF8",x"31BF",x"0002",x"4784",x"A00A",x"A003",x"FFFA", -- 0260-026F 
  x"31C2",x"0002",x"4784",x"A009",x"A003",x"FFFA",x"31C5",x"0002",x"4784",x"0001",x"A007",x"A003",x"FFF9",x"31C8",x"0001",x"4784", -- 0270-027F 
  x"A000",x"A007",x"A003",x"FFF9",x"31CA",x"0001",x"4784",x"4280",x"A00D",x"A003",x"FFF9",x"31CC",x"0002",x"4784",x"4047",x"8000", -- 0280-028F 
  x"A007",x"B412",x"A00B",x"4047",x"8000",x"A007",x"0000",x"A001",x"B300",x"A00D",x"A00B",x"A003",x"FFEE",x"31CF",x"0001",x"4784", -- 0290-029F 
  x"B412",x"428E",x"A003",x"FFF9",x"31D1",x"0001",x"4784",x"0000",x"B434",x"B434",x"A002",x"B412",x"B300",x"A003",x"FFF5",x"31D3", -- 02A0-02AF 
  x"0003",x"4784",x"31D7",x"0004",x"41EB",x"8FFC",x"A003",x"FFF7",x"31DC",x"0002",x"4784",x"B412",x"B502",x"A00A",x"A007",x"B412", -- 02B0-02BF 
  x"A009",x"A003",x"FFF5",x"31DF",x"0002",x"4784",x"2802",x"A00A",x"4279",x"A00A",x"2802",x"A00A",x"4279",x"2802",x"B603",x"A00A", -- 02C0-02CF 
  x"A00A",x"B412",x"A009",x"A009",x"A003",x"FFED",x"31E2",x"0002",x"4784",x"2802",x"A00A",x"B501",x"FFFF",x"A007",x"2802",x"B603", -- 02D0-02DF 
  x"A00A",x"A00A",x"B412",x"B501",x"FFFF",x"A007",x"2802",x"A009",x"A009",x"A009",x"A009",x"A003",x"FFE9",x"31E5",x"0001",x"4784", -- 02E0-02EF 
  x"2802",x"A00A",x"4279",x"A00A",x"A003",x"FFF7",x"31E7",x"0001",x"4784",x"2F0F",x"A00A",x"A009",x"0001",x"2F0F",x"42BB",x"A003", -- 02F0-02FF 
  x"FFF5",x"31E9",x"0007",x"4784",x"2803",x"A009",x"A003",x"FFF9",x"31F1",x"0003",x"4784",x"8000",x"44B0",x"A00B",x"9002",x"B300", -- 0300-030F 
  x"8FFA",x"A003",x"FFF5",x"31F5",x"0004",x"4784",x"0141",x"4304",x"A003",x"FFF9",x"31FA",x"0005",x"4784",x"0000",x"B412",x"0010", -- 0310-031F 
  x"A002",x"B412",x"A003",x"FFF6",x"3200",x"0003",x"4784",x"B501",x"000A",x"428E",x"9001",x"8002",x"0007",x"A007",x"0030",x"A007", -- 0320-032F 
  x"A003",x"FFF2",x"3204",x"0004",x"4784",x"B501",x"9009",x"B412",x"B501",x"426D",x"4316",x"4279",x"B412",x"0001",x"4280",x"8FF5", -- 0330-033F 
  x"B200",x"A003",x"FFEF",x"3209",x"0003",x"4784",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D", -- 0340-034F 
  x"4327",x"4316",x"B300",x"A003",x"FFEE",x"320D",x"0002",x"4784",x"4346",x"0020",x"4316",x"A003",x"FFF8",x"3210",x"0001",x"4784", -- 0350-035F 
  x"4358",x"A003",x"FFFA",x"3212",x"0001",x"4784",x"A00A",x"4360",x"A003",x"FFF9",x"3214",x"0002",x"4784",x"2F07",x"A00A",x"2F0F", -- 0360-036F 
  x"A00A",x"4280",x"2F10",x"A00A",x"A00D",x"A00B",x"A00E",x"2F00",x"A00A",x"A00D",x"A00B",x"A008",x"9028",x"003C",x"4316",x"3217", -- 0370-037F 
  x"0003",x"41EB",x"2F07",x"A00A",x"4360",x"2F06",x"A00A",x"4360",x"003C",x"4316",x"321B",x"0004",x"41EB",x"003C",x"4316",x"3220", -- 0380-038F 
  x"0003",x"41EB",x"2F0F",x"A00A",x"4360",x"2F13",x"A00A",x"4360",x"003C",x"4316",x"3224",x"0004",x"41EB",x"2F0F",x"A00A",x"2F07", -- 0390-039F 
  x"A009",x"2F13",x"A00A",x"2F06",x"A009",x"000A",x"4316",x"A003",x"FFC1",x"3229",x"000A",x"4784",x"A003",x"FFFB",x"3234",x"0007", -- 03A0-03AF 
  x"4784",x"436D",x"323C",x"0019",x"41EB",x"0020",x"4316",x"0008",x"4316",x"430B",x"001B",x"4287",x"9FF8",x"A003",x"FFEF",x"3256", -- 03B0-03BF 
  x"0005",x"4784",x"B501",x"2F0E",x"A009",x"0000",x"2F10",x"A009",x"436D",x"2F0A",x"A00A",x"2F0C",x"A00A",x"2F0A",x"A00A",x"4280", -- 03C0-03CF 
  x"0001",x"4280",x"4335",x"325C",x"0003",x"41EB",x"3260",x"000A",x"41E5",x"46C9",x"436D",x"326B",x"0016",x"41EB",x"4360",x"43B1", -- 03D0-03DF 
  x"4716",x"A003",x"FFDC",x"3282",x"0004",x"4784",x"2801",x"A00A",x"2F15",x"A009",x"A003",x"FFF7",x"3287",x"0004",x"4784",x"2801", -- 03E0-03EF 
  x"A00A",x"2F15",x"A00A",x"4280",x"9002",x"0009",x"43C2",x"A003",x"FFF3",x"328C",x"0005",x"4784",x"0001",x"A007",x"2F17",x"A00A", -- 03F0-03FF 
  x"B502",x"4280",x"B501",x"2F17",x"A009",x"A009",x"A003",x"FFF1",x"3292",x"0009",x"4784",x"2F17",x"A00A",x"B501",x"A00A",x"A007", -- 0400-040F 
  x"2F17",x"A009",x"A003",x"FFF4",x"329C",x"0002",x"4784",x"2F17",x"A00A",x"0001",x"A007",x"A003",x"FFF7",x"329F",x"0002",x"4784", -- 0410-041F 
  x"2F17",x"A00A",x"0002",x"A007",x"A003",x"FFF7",x"32A2",x"0002",x"4784",x"2F17",x"A00A",x"0003",x"A007",x"A003",x"FFF7",x"32A5", -- 0420-042F 
  x"0002",x"4784",x"2F17",x"A00A",x"0004",x"A007",x"A003",x"FFF7",x"32A8",x"0002",x"4784",x"2F17",x"A00A",x"0005",x"A007",x"A003", -- 0430-043F 
  x"FFF7",x"32AB",x"0002",x"4784",x"2F17",x"A00A",x"0006",x"A007",x"A003",x"FFF7",x"32AE",x"0002",x"4784",x"2F17",x"A00A",x"0007", -- 0440-044F 
  x"A007",x"A003",x"FFF7",x"32B1",x"0002",x"4784",x"2F17",x"A00A",x"0008",x"A007",x"A003",x"FFF7",x"32B4",x"0001",x"4776",x"0020", -- 0450-045F 
  x"45E8",x"4662",x"46A2",x"B300",x"4279",x"2F10",x"A00A",x"9001",x"4051",x"A003",x"FFF1",x"32B6",x"0005",x"4784",x"B501",x"A00A", -- 0460-046F 
  x"0001",x"A007",x"B501",x"03FF",x"A008",x"0000",x"4287",x"9002",x"0400",x"4280",x"B412",x"A009",x"A003",x"FFED",x"32BC",x"0007", -- 0470-047F 
  x"4784",x"2800",x"A00A",x"B501",x"0008",x"428E",x"9009",x"0018",x"A007",x"A00A",x"B501",x"9002",x"B501",x"4304",x"B300",x"8018", -- 0480-048F 
  x"2F03",x"A00A",x"A009",x"2F03",x"446E",x"2F03",x"A00A",x"2F04",x"A00A",x"4280",x"03FF",x"A008",x"0080",x"42A0",x"9009",x"2F05", -- 0490-049F 
  x"A00A",x"A00D",x"9005",x"FFFF",x"2F05",x"A009",x"0013",x"4316",x"0000",x"2800",x"A009",x"A003",x"FFD1",x"32C4",x"0008",x"4784", -- 04A0-04AF 
  x"2F04",x"A00A",x"2F03",x"A00A",x"4287",x"9003",x"0000",x"0000",x"8018",x"2F04",x"A00A",x"A00A",x"FFFF",x"2F04",x"446E",x"2F03", -- 04B0-04BF 
  x"A00A",x"2F04",x"A00A",x"4280",x"03FF",x"A008",x"0020",x"428E",x"9008",x"2F05",x"A00A",x"9005",x"0000",x"2F05",x"A009",x"0011", -- 04C0-04CF 
  x"4316",x"A003",x"FFDA",x"32CD",x"0006",x"4784",x"0005",x"43FC",x"4429",x"A009",x"4420",x"A009",x"4420",x"A00A",x"443B",x"A009", -- 04D0-04DF 
  x"430B",x"B501",x"0014",x"4287",x"9004",x"B300",x"4420",x"A00A",x"426D",x"B501",x"007F",x"4287",x"9002",x"B300",x"0008",x"B501", -- 04E0-04EF 
  x"0008",x"4287",x"9012",x"443B",x"A00A",x"4420",x"A00A",x"428E",x"900C",x"FFFF",x"4420",x"42BB",x"0001",x"4429",x"42BB",x"0008", -- 04F0-04FF 
  x"4316",x"0020",x"4316",x"0008",x"4316",x"B501",x"0020",x"428E",x"9001",x"8012",x"FFFF",x"4429",x"42BB",x"4429",x"A00A",x"A00F", -- 0500-050F 
  x"9002",x"0006",x"43C2",x"B501",x"4316",x"B501",x"4420",x"A00A",x"4273",x"0001",x"4420",x"42BB",x"B501",x"0020",x"428E",x"B502", -- 0510-051F 
  x"0008",x"4287",x"A00B",x"A008",x"B412",x"001B",x"4287",x"A00B",x"A008",x"4429",x"A00A",x"A00D",x"A00E",x"9FB2",x"0020",x"4316", -- 0520-052F 
  x"443B",x"A00A",x"4420",x"A00A",x"443B",x"A00A",x"4280",x"B603",x"A007",x"0000",x"B412",x"4273",x"440B",x"A003",x"FF94",x"32D4", -- 0530-053F 
  x"0005",x"4784",x"B501",x"0030",x"428E",x"A00B",x"B502",x"003A",x"428E",x"A008",x"B502",x"0041",x"428E",x"A00B",x"A00E",x"B501", -- 0540-054F 
  x"9015",x"B412",x"0030",x"4280",x"B501",x"000A",x"428E",x"A00B",x"9002",x"0007",x"4280",x"B501",x"2F08",x"A00A",x"428E",x"A00B", -- 0550-055F 
  x"9004",x"B300",x"B300",x"0000",x"0000",x"B412",x"A003",x"FFD7",x"32DA",x"0006",x"4784",x"0007",x"43FC",x"4420",x"A009",x"4417", -- 0560-056F 
  x"A009",x"0000",x"4420",x"A00A",x"9063",x"B501",x"4429",x"A009",x"0001",x"4444",x"A009",x"FFFF",x"444D",x"A009",x"4417",x"A00A", -- 0570-057F 
  x"4429",x"A00A",x"A007",x"426D",x"002B",x"4287",x"9009",x"4429",x"A00A",x"4279",x"4429",x"A009",x"0000",x"444D",x"A009",x"8016", -- 0580-058F 
  x"4417",x"A00A",x"4429",x"A00A",x"A007",x"426D",x"002D",x"4287",x"900D",x"4429",x"A00A",x"4279",x"4429",x"A009",x"0000",x"444D", -- 0590-059F 
  x"A009",x"4444",x"A00A",x"A000",x"4444",x"A009",x"444D",x"A00A",x"9FD2",x"4429",x"A00A",x"4420",x"A00A",x"428E",x"9029",x"4417", -- 05A0-05AF 
  x"A00A",x"4429",x"A00A",x"A007",x"426D",x"B501",x"9015",x"4542",x"A00B",x"9007",x"B300",x"4420",x"A00A",x"A000",x"4420",x"A009", -- 05B0-05BF 
  x"800A",x"B412",x"2F08",x"A00A",x"42A7",x"A007",x"4429",x"A00A",x"4279",x"4429",x"A009",x"8005",x"B300",x"4429",x"A00A",x"4420", -- 05C0-05CF 
  x"A009",x"4429",x"A00A",x"4420",x"A00A",x"428E",x"A00B",x"9FD7",x"4444",x"A00A",x"A00F",x"9001",x"A000",x"4429",x"A00A",x"4420", -- 05D0-05DF 
  x"A00A",x"4280",x"440B",x"A003",x"FF83",x"32E1",x"0004",x"4784",x"42D9",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"426D", -- 05E0-05EF 
  x"42F0",x"4287",x"2F0C",x"A00A",x"2F0D",x"A00A",x"428E",x"A008",x"9004",x"0001",x"2F0C",x"42BB",x"8FF0",x"2F0C",x"A00A",x"2F0B", -- 05F0-05FF 
  x"A009",x"2F0C",x"A00A",x"426D",x"003C",x"4287",x"9004",x"2F0C",x"A00A",x"2F0D",x"A009",x"2F0C",x"A00A",x"426D",x"42F0",x"4287", -- 0600-060F 
  x"A00B",x"2F0C",x"A00A",x"2F0D",x"A00A",x"428E",x"A008",x"9004",x"0001",x"2F0C",x"42BB",x"8FE5",x"2F0B",x"A00A",x"2F0C",x"A00A", -- 0610-061F 
  x"B502",x"4280",x"B501",x"9003",x"0001",x"2F0C",x"42BB",x"42C6",x"B300",x"A003",x"FFBA",x"32E6",x"0002",x"4784",x"42D9",x"B502", -- 0620-062F 
  x"42F0",x"4280",x"9007",x"42C6",x"B300",x"B300",x"B300",x"B300",x"0000",x"8023",x"42C6",x"B300",x"B412",x"0000",x"B603",x"4280", -- 0630-063F 
  x"9016",x"42D9",x"42D9",x"B502",x"426D",x"B502",x"426D",x"4280",x"9004",x"B300",x"B300",x"0000",x"0000",x"B501",x"9004",x"4279", -- 0640-064F 
  x"B412",x"4279",x"B412",x"42C6",x"42C6",x"4279",x"8FE7",x"B200",x"B300",x"9002",x"FFFF",x"8001",x"0000",x"A003",x"FFCC",x"32E9", -- 0650-065F 
  x"0004",x"4784",x"42D9",x"42D9",x"0000",x"2F11",x"A00A",x"2F01",x"A00A",x"9003",x"B501",x"A00A",x"A007",x"B501",x"4279",x"B501", -- 0660-066F 
  x"A00A",x"B412",x"4279",x"A00A",x"42C6",x"42C6",x"B603",x"42D9",x"42D9",x"462E",x"9003",x"B412",x"A00D",x"B412",x"B502",x"A00D", -- 0670-067F 
  x"B502",x"A00A",x"A00D",x"A00B",x"A008",x"B502",x"B501",x"A00A",x"A007",x"2F11",x"A00A",x"4287",x"A00B",x"A008",x"9004",x"B501", -- 0680-068F 
  x"A00A",x"A007",x"8FDA",x"42C6",x"B300",x"42C6",x"B434",x"A00D",x"9004",x"B300",x"B300",x"0000",x"0000",x"A003",x"FFC0",x"32EE", -- 0690-069F 
  x"0004",x"4784",x"B412",x"0003",x"A007",x"B412",x"A003",x"FFF7",x"32F3",x"0008",x"4784",x"4047",x"4000",x"A007",x"42F9",x"A003", -- 06A0-06AF 
  x"FFF7",x"32FC",x"0006",x"4784",x"43E6",x"2F0F",x"A00A",x"2F11",x"A00A",x"B502",x"4280",x"42F9",x"2F11",x"A009",x"0020",x"45E8", -- 06B0-06BF 
  x"41B2",x"0001",x"2F01",x"A009",x"A003",x"FFEB",x"3303",x"0009",x"4784",x"2F0A",x"A00A",x"42D9",x"2F0B",x"A00A",x"42D9",x"2F0C", -- 06C0-06CF 
  x"A00A",x"42D9",x"2F0D",x"A00A",x"42D9",x"B502",x"A007",x"2F0D",x"A009",x"B501",x"2F0A",x"A009",x"B501",x"2F0B",x"A009",x"2F0C", -- 06D0-06DF 
  x"A009",x"0020",x"45E8",x"B501",x"901F",x"B603",x"4662",x"B501",x"9009",x"42D9",x"42D9",x"B200",x"42C6",x"42C6",x"46A2",x"B300", -- 06E0-06EF 
  x"4304",x"8011",x"B200",x"B603",x"456B",x"9005",x"B200",x"B300",x"0003",x"43C2",x"8008",x"B434",x"B300",x"B412",x"B300",x"2F10", -- 06F0-06FF 
  x"A00A",x"9001",x"4051",x"8FDD",x"B200",x"42C6",x"2F0D",x"A009",x"42C6",x"2F0C",x"A009",x"42C6",x"2F0B",x"A009",x"42C6",x"2F0A", -- 0700-070F 
  x"A009",x"A003",x"FFB3",x"330D",x"0004",x"4784",x"2F02",x"A00A",x"2802",x"A009",x"2F00",x"A00A",x"9006",x"003C",x"4316",x"3312", -- 0710-071F 
  x"0004",x"41EB",x"8003",x"3317",x"0002",x"41EB",x"436D",x"2F09",x"A00A",x"0100",x"44D6",x"B502",x"A00A",x"003C",x"4287",x"9002", -- 0720-072F 
  x"B200",x"802B",x"2F00",x"A00A",x"900C",x"003C",x"4316",x"331A",x"0003",x"41EB",x"46C9",x"003C",x"4316",x"331E",x"0004",x"41EB", -- 0730-073F 
  x"801C",x"001B",x"4316",x"005B",x"4316",x"0033",x"4316",x"0036",x"4316",x"006D",x"4316",x"46C9",x"2F10",x"A00A",x"A00D",x"9003", -- 0740-074F 
  x"3323",x"0002",x"41EB",x"001B",x"4316",x"005B",x"4316",x"0033",x"4316",x"0039",x"4316",x"006D",x"4316",x"8FC8",x"A003",x"FFB3", -- 0750-075F 
  x"3326",x"0005",x"4784",x"332C",x"000B",x"41EB",x"436D",x"436D",x"4716",x"A003",x"FFF5",x"3338",x"0006",x"4784",x"0000",x"2F01", -- 0760-076F 
  x"A009",x"A003",x"FFF8",x"333F",x"000C",x"4784",x"42C6",x"42D9",x"A003",x"FFF9",x"334C",x"000A",x"4784",x"42C6",x"46AB",x"A003", -- 0770-077F 
  x"FFF9",x"3357",x"0003",x"4784",x"42C6",x"2F10",x"A00A",x"9002",x"46AB",x"8001",x"42D9",x"A003",x"FFF4",x"335B",x"000A",x"4784", -- 0780-078F 
  x"46B4",x"0001",x"2F10",x"A009",x"4775",x"A003",x"FFF6",x"3366",x"0008",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"477C",x"A003", -- 0790-079F 
  x"FFF6",x"336F",x"0001",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"4783",x"A003",x"FFF6",x"3371",x"0001",x"4776",x"0000",x"2F10", -- 07A0-07AF 
  x"A009",x"43EF",x"4047",x"A003",x"42F9",x"476E",x"A003",x"FFF3",x"3373",x"0003",x"4784",x"2F16",x"A00A",x"9005",x"431D",x"B300", -- 07B0-07BF 
  x"431D",x"B300",x"8006",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"B300", -- 07C0-07CF 
  x"A003",x"FFE6",x"3377",x"0003",x"4784",x"337B",x"0001",x"41EB",x"0022",x"4316",x"47BB",x"0022",x"4316",x"337D",x"0001",x"41EB", -- 07D0-07DF 
  x"A003",x"FFF0",x"337F",x"0005",x"4784",x"2F16",x"A009",x"2F00",x"A00A",x"42D9",x"0000",x"2F00",x"A009",x"3385",x"0008",x"41E5", -- 07E0-07EF 
  x"46C9",x"4047",x"4000",x"A007",x"0010",x"A009",x"436D",x"003C",x"4316",x"338E",x"0006",x"41EB",x"436D",x"3395",x"0002",x"41EB", -- 07F0-07FF 
  x"0000",x"B603",x"A007",x"B501",x"2F03",x"4287",x"9002",x"B300",x"2F04",x"B501",x"2F17",x"4287",x"9005",x"B300",x"2F00",x"2F80", -- 0800-080F 
  x"A009",x"2F80",x"A00A",x"47D5",x"4279",x"B501",x"0010",x"4287",x"9FE8",x"B300",x"3398",x"0004",x"41EB",x"B501",x"4346",x"339D", -- 0810-081F 
  x"0001",x"41EB",x"B501",x"000F",x"A007",x"4360",x"0010",x"A007",x"B603",x"42A0",x"A00B",x"9FD0",x"B200",x"436D",x"003C",x"4316", -- 0820-082F 
  x"339F",x"0007",x"41EB",x"42C6",x"2F00",x"A009",x"A003",x"FFAA",x"33A7",x"0005",x"4060",x"2F20",x"FFFB",x"33AD",x"0008",x"4784", -- 0830-083F 
</DUMPZ></ok>
BZEIG @ 3000 -1 DUMPZ   ( generiert ByteRAM für P20_FFP.vhd Step_10 ) <ok>
<DUMPZ>
  x"28",x"20",x"7B",x"20",x"7D",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"20",x"28",x"4C", -- 3000-300F 
  x"49",x"54",x"2C",x"29",x"20",x"4C",x"49",x"54",x"2C",x"20",x"28",x"43",x"4F",x"4E",x"53",x"54", -- 3010-301F 
  x"41",x"4E",x"54",x"3A",x"29",x"20",x"43",x"4F",x"4E",x"53",x"54",x"41",x"4E",x"54",x"20",x"4B", -- 3020-302F 
  x"45",x"59",x"41",x"44",x"52",x"20",x"53",x"50",x"20",x"52",x"50",x"20",x"50",x"43",x"20",x"58", -- 3030-303F 
  x"42",x"49",x"54",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"42",x"49",x"54",x"20",x"52",x"50", -- 3040-304F 
  x"30",x"20",x"49",x"52",x"41",x"4D",x"41",x"44",x"52",x"20",x"4A",x"52",x"41",x"4D",x"41",x"44", -- 3050-305F 
  x"52",x"20",x"58",x"4F",x"46",x"46",x"20",x"43",x"52",x"42",x"5A",x"45",x"49",x"47",x"20",x"43", -- 3060-306F 
  x"52",x"44",x"50",x"20",x"42",x"41",x"53",x"45",x"20",x"54",x"49",x"42",x"20",x"49",x"4E",x"31", -- 3070-307F 
  x"20",x"49",x"4E",x"32",x"20",x"49",x"4E",x"33",x"20",x"49",x"4E",x"34",x"20",x"45",x"52",x"52", -- 3080-308F 
  x"4F",x"52",x"4E",x"52",x"20",x"44",x"50",x"20",x"53",x"54",x"41",x"54",x"20",x"4C",x"46",x"41", -- 3090-309F 
  x"20",x"42",x"41",x"4E",x"46",x"20",x"42",x"5A",x"45",x"49",x"47",x"20",x"44",x"50",x"4D",x"45", -- 30A0-30AF 
  x"52",x"4B",x"20",x"43",x"53",x"50",x"20",x"44",x"55",x"42",x"49",x"54",x"20",x"4C",x"4F",x"43", -- 30B0-30BF 
  x"41",x"4C",x"41",x"44",x"52",x"45",x"53",x"53",x"45",x"20",x"56",x"45",x"52",x"53",x"49",x"4F", -- 30C0-30CF 
  x"4E",x"20",x"52",x"45",x"54",x"55",x"52",x"4E",x"20",x"28",x"4D",x"43",x"4F",x"44",x"45",x"3A", -- 30D0-30DF 
  x"29",x"20",x"4D",x"43",x"4F",x"44",x"45",x"20",x"4D",x"49",x"4E",x"55",x"53",x"20",x"55",x"2B", -- 30E0-30EF 
  x"20",x"55",x"2A",x"20",x"30",x"3D",x"20",x"30",x"4C",x"54",x"20",x"45",x"4D",x"49",x"54",x"43", -- 30F0-30FF 
  x"4F",x"44",x"45",x"20",x"4E",x"4F",x"54",x"20",x"41",x"4E",x"44",x"20",x"4F",x"52",x"20",x"2B", -- 3100-310F 
  x"20",x"21",x"20",x"40",x"20",x"53",x"57",x"41",x"50",x"20",x"4F",x"56",x"45",x"52",x"20",x"44", -- 3110-311F 
  x"55",x"50",x"20",x"52",x"4F",x"54",x"20",x"44",x"52",x"4F",x"50",x"20",x"32",x"53",x"57",x"41", -- 3120-312F 
  x"50",x"20",x"32",x"4F",x"56",x"45",x"52",x"20",x"32",x"44",x"55",x"50",x"20",x"32",x"44",x"52", -- 3130-313F 
  x"4F",x"50",x"20",x"4E",x"4F",x"4F",x"50",x"20",x"42",x"2C",x"20",x"5A",x"2C",x"20",x"28",x"57", -- 3140-314F 
  x"4F",x"52",x"44",x"3A",x"29",x"20",x"57",x"4F",x"52",x"44",x"3A",x"20",x"22",x"20",x"2E",x"22", -- 3150-315F 
  x"20",x"48",x"45",x"52",x"45",x"20",x"4A",x"52",x"42",x"49",x"54",x"20",x"4A",x"52",x"30",x"42", -- 3160-316F 
  x"49",x"54",x"20",x"58",x"53",x"45",x"54",x"42",x"54",x"20",x"41",x"4C",x"4C",x"4F",x"54",x"20", -- 3170-317F 
  x"42",x"52",x"41",x"4E",x"43",x"48",x"2C",x"20",x"30",x"42",x"52",x"41",x"4E",x"43",x"48",x"2C", -- 3180-318F 
  x"20",x"42",x"45",x"47",x"49",x"4E",x"20",x"41",x"47",x"41",x"49",x"4E",x"20",x"55",x"4E",x"54", -- 3190-319F 
  x"49",x"4C",x"20",x"49",x"46",x"20",x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"45",x"4C",x"53", -- 31A0-31AF 
  x"45",x"20",x"57",x"48",x"49",x"4C",x"45",x"20",x"52",x"45",x"50",x"45",x"41",x"54",x"20",x"43", -- 31B0-31BF 
  x"40",x"20",x"43",x"21",x"20",x"31",x"2B",x"20",x"2D",x"20",x"3D",x"20",x"4C",x"54",x"20",x"3E", -- 31C0-31CF 
  x"20",x"2A",x"20",x"42",x"59",x"45",x"20",x"42",x"59",x"45",x"20",x"20",x"2B",x"21",x"20",x"52", -- 31D0-31DF 
  x"3E",x"20",x"3E",x"52",x"20",x"52",x"20",x"2C",x"20",x"45",x"58",x"45",x"43",x"55",x"54",x"45", -- 31E0-31EF 
  x"20",x"4B",x"45",x"59",x"20",x"45",x"4D",x"49",x"54",x"20",x"53",x"48",x"4C",x"31",x"36",x"20", -- 31F0-31FF 
  x"44",x"49",x"47",x"20",x"54",x"59",x"50",x"45",x"20",x"48",x"47",x"2E",x"20",x"48",x"2E",x"20", -- 3200-320F 
  x"2E",x"20",x"3F",x"20",x"43",x"52",x"20",x"66",x"6C",x"3E",x"20",x"2F",x"66",x"6C",x"3E",x"20", -- 3210-321F 
  x"66",x"72",x"3E",x"20",x"2F",x"66",x"72",x"3E",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54", -- 3220-322F 
  x"45",x"58",x"54",x"20",x"44",x"49",x"53",x"41",x"42",x"4C",x"45",x"20",x"77",x"65",x"69",x"74", -- 3230-323F 
  x"65",x"72",x"20",x"6E",x"61",x"63",x"68",x"20",x"54",x"61",x"73",x"74",x"65",x"20",x"45",x"53", -- 3240-324F 
  x"43",x"41",x"50",x"45",x"20",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"3F",x"3F",x"3F",x"20", -- 3250-325F 
  x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"45",x"52",x"52",x"4F",x"52", -- 3260-326F 
  x"20",x"2D",x"20",x"46",x"65",x"68",x"6C",x"65",x"72",x"20",x"4E",x"75",x"6D",x"6D",x"65",x"72", -- 3270-327F 
  x"20",x"20",x"43",x"53",x"50",x"21",x"20",x"43",x"53",x"50",x"3F",x"20",x"4C",x"4F",x"43",x"41", -- 3280-328F 
  x"4C",x"20",x"45",x"4E",x"44",x"5F",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"4C",x"30",x"20",x"4C", -- 3290-329F 
  x"31",x"20",x"4C",x"32",x"20",x"4C",x"33",x"20",x"4C",x"34",x"20",x"4C",x"35",x"20",x"4C",x"36", -- 32A0-32AF 
  x"20",x"4C",x"37",x"20",x"27",x"20",x"49",x"4E",x"43",x"52",x"34",x"20",x"4B",x"45",x"59",x"5F", -- 32B0-32BF 
  x"49",x"4E",x"54",x"20",x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"32",x"20",x"45",x"58",x"50", -- 32C0-32CF 
  x"45",x"43",x"54",x"20",x"44",x"49",x"47",x"49",x"54",x"20",x"4E",x"55",x"4D",x"42",x"45",x"52", -- 32D0-32DF 
  x"20",x"57",x"4F",x"52",x"44",x"20",x"5A",x"3D",x"20",x"46",x"49",x"4E",x"44",x"20",x"4C",x"43", -- 32E0-32EF 
  x"46",x"41",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"2C",x"20",x"43",x"52",x"45",x"41", -- 32F0-32FF 
  x"54",x"45",x"20",x"49",x"4E",x"54",x"45",x"52",x"50",x"52",x"45",x"54",x"20",x"51",x"55",x"49", -- 3300-330F 
  x"54",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"6F",x"6B",x"3E",x"20",x"2F",x"6F", -- 3310-331F 
  x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"46",x"4F",x"52",x"54", -- 3320-332F 
  x"59",x"2D",x"46",x"4F",x"52",x"54",x"48",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"20",x"28", -- 3330-333F 
  x"49",x"4D",x"4D",x"45",x"44",x"49",x"41",x"54",x"45",x"3A",x"29",x"20",x"28",x"43",x"4F",x"4D", -- 3340-334F 
  x"50",x"49",x"4C",x"45",x"3A",x"29",x"20",x"28",x"3A",x"29",x"20",x"49",x"4D",x"4D",x"45",x"44", -- 3350-335F 
  x"49",x"41",x"54",x"45",x"3A",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"3A",x"20",x"3A", -- 3360-336F 
  x"20",x"3B",x"20",x"4C",x"47",x"2E",x"20",x"4E",x"47",x"2E",x"20",x"78",x"20",x"2C",x"20",x"44", -- 3370-337F 
  x"55",x"4D",x"50",x"5A",x"20",x"27",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"20",x"44",x"55", -- 3380-338F 
  x"4D",x"50",x"5A",x"3E",x"20",x"20",x"20",x"20",x"20",x"2D",x"2D",x"20",x"20",x"2D",x"20",x"2F", -- 3390-339F 
  x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"52",x"41",x"4D",x"50",x"31",x"20",x"56",x"41",x"52", -- 33A0-33AF 
</DUMPZ></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Variablen"> 
2F20 CONSTANT RAMP1 RAMP1 1+ RAMP1 ! ( bis 2F17 sind neu BASE TIB ... ) <ok></ok><fl>0837 33A7 </fl><fr>083C 33AD </fr>
: VARIABLE RAMP1 @ DUP CONSTANT DUP 1+ RAMP1 ! ! ; <ok></ok><fl>083C 33AD </fl><fr>084A 33B6 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="noch paar hilfreiche Funktionen"> 
: MOVE ( adr1 adr2 n --> ) <ok></ok><fl>084A 33B6 </fl><fr>084E 33BB </fr>
  BEGIN DUP WHILE >R OVER @ OVER ! SWAP 1+ SWAP 1+ R> 1 - REPEAT DROP 2DROP ; <ok></ok><fl>084E 33BB </fl><fr>0860 33BB </fr>
: FILL ( adr n b --> ) <ok></ok><fl>0860 33BB </fl><fr>0864 33C0 </fr>
  ROT ROT BEGIN DUP WHILE >R 2DUP ! 1 + R> 1 - REPEAT DROP 2DROP ; <ok></ok><fl>0864 33C0 </fl><fr>0874 33C0 </fr>
 <ok></ok>
: DUMP ( addr n --> ) <ok></ok><fl>0874 33C0 </fl><fr>0878 33C5 </fr>
  BEGIN SWAP ( CR DUP . ) DUP @ . 1 + SWAP 1 - DUP 0= UNTIL DROP ; <ok></ok><fl>0878 33C5 </fl><fr>0886 33C5 </fr>
 <ok></ok>
: MAX ( a b --> c ) <ok></ok><fl>0886 33C5 </fl><fr>088A 33C9 </fr>
  2DUP LT IF SWAP END_IF DROP ; <ok></ok><fl>088A 33C9 </fl><fr>0890 33C9 </fr>
: MIN ( a b --> c ) <ok></ok><fl>0890 33C9 </fl><fr>0894 33CD </fr>
  2DUP > IF SWAP END_IF DROP ; <ok></ok><fl>0894 33CD </fl><fr>089A 33CD </fr>
: ABS DUP 0LT IF MINUS END_IF ; <ok></ok><fl>089A 33CD </fl><fr>08A3 33D1 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Multiplikation"> 
A017 MCODE MULT_I <ok></ok><fl>08A3 33D1 </fl><fr>08A9 33D8 </fr>
A018 MCODE MULT_II <ok></ok><fl>08A9 33D8 </fl><fr>08AF 33E0 </fr>
: SUPERMULT ( a u adrc adrb n --> a u' adrc' adrb' ) <ok></ok><fl>08AF 33E0 </fl><fr>08B3 33EA </fr>
  >R <ok></ok><fl>08B3 33EA </fl><fr>08B4 33EA </fr>
  BEGIN MULT_I MULT_II UNTIL <ok></ok><fl>08B4 33EA </fl><fr>08B7 33EA </fr>
  R> DROP ; ( /;> ) <ok></ok><fl>08B7 33EA </fl><fr>08BA 33EA </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
1401 CONSTANT A <ok></ok><fl>08BA 33EA </fl><fr>08BF 33EC </fr>
1601 CONSTANT B <ok></ok><fl>08BF 33EC </fl><fr>08C4 33EE </fr>
1801 CONSTANT C <ok></ok><fl>08C4 33EE </fl><fr>08C9 33F0 </fr>
A 1FF 1111 FILL <ok></ok>
B 1FF 1111 FILL <ok></ok>
C 3FF 0000 FILL <ok></ok>
 <ok></ok>
1111 0 C B 4 SUPERMULT . . . . <ok>1605 1805 0123 1111 </ok>
C 8 DUMP <ok>4321 4444 4444 4444 0000 0000 0000 0000 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SMUL ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3) <ok></ok><fl>08C9 33F0 </fl><fr>08CD 33F5 </fr>
       ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>08CD 33F5 </fl><fr>08CD 33F5 </fr>
  7 LOCAL <ok></ok><fl>08CD 33F5 </fl><fr>08CF 33F5 </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>08CF 33F5 </fl><fr>08DD 33F5 </fr>
  L0 @ L3 @ IF NOT END_IF <ok></ok><fl>08DD 33F5 </fl><fr>08E3 33F5 </fr>
  L1 @ L4 @ + 1+ <ok></ok><fl>08E3 33F5 </fl><fr>08E9 33F5 </fr>
  L6 @ OVER 0 FILL <ok></ok><fl>08E9 33F5 </fl><fr>08EE 33F5 </fr>
  L6 @  <ok></ok><fl>08EE 33F5 </fl><fr>08F0 33F5 </fr>
  DUP L2 @ L1 @ BEGIN <ok></ok><fl>08F0 33F5 </fl><fr>08F5 33F5 </fr>
    0 2OVER @ ROT ROT L5 @ L4 @ ( ... a u  adrc  adrb n ) <ok></ok><fl>08F5 33F5 </fl><fr>08FE 33F5 </fr>
    SUPERMULT                   ( ... a u' adrc' adrb' ) <ok></ok><fl>08FE 33F5 </fl><fr>08FF 33F5 </fr>
    DROP ! DROP <ok></ok><fl>08FF 33F5 </fl><fr>0902 33F5 </fr>
 <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(    vorher: ) <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(    L4 @ 0  <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(    BEGIN OVER WHILE SWAP -1 + SWAP <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(      0 SWAP  <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(      L6 @ @ L5 @ @ L2 @ @ U* D+  <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(      L6 @ DUP 1 + L6 ! ! <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(      L5 @ 1 + L5 ! <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(      REPEAT <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
(    L6 @ ! DROP <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
 <ok></ok><fl>0902 33F5 </fl><fr>0902 33F5 </fr>
    ROT 1 + ROT 1 + ROT -1 + ( 1 L2 +! 1 L6 +! <ok></ok><fl>0902 33F5 </fl><fr>090B 33F5 </fr>
    DUP 0= UNTIL DROP 2DROP <ok></ok><fl>090B 33F5 </fl><fr>0910 33F5 </fr>
  END_LOCAL <ok></ok><fl>0910 33F5 </fl><fr>0911 33F5 </fr>
  ; <ok></ok><fl>0911 33F5 </fl><fr>0912 33F5 </fr>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C SMUL . . . <ok>1801 0005 0000 </ok>
C 8 DUMP <ok>4321 8765 4567 0123 0000 0000 0000 0000 </ok>
 <ok></ok>
C 201 0 FILL <ok></ok>
0 100 A 0 100 B C SMUL . . . <ok>1801 0201 0000 </ok>
C 8 DUMP <ok>4321 8765 CBA9 0FED 5432 9876 DCBA 20FE </ok>
 <ok></ok>
C 101 0 FILL <ok></ok>
0 80 A 0 80 B C SMUL . . . <ok>1801 0101 0000 </ok>
C 8 DUMP <ok>4321 8765 CBA9 0FED 5432 9876 DCBA 20FE </ok>
 <ok></ok>
( C 2001 0 FILL <ok></ok>
( 0 1000 A 0 1000 B C SMUL . . . <ok></ok>
( C 8 DUMP <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Addition">  
: ADDIER ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3 ) <ok></ok><fl>0912 33F5 </fl><fr>0916 33FC </fr>
         ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>0916 33FC </fl><fr>0916 33FC </fr>
  7 LOCAL <ok></ok><fl>0916 33FC </fl><fr>0918 33FC </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>0918 33FC </fl><fr>0926 33FC </fr>
  L0 @ L1 @ L4 @ MAX 1+ L6 @ <ok></ok><fl>0926 33FC </fl><fr>0930 33FC </fr>
  L0 @ L3 @ = IF <ok></ok><fl>0930 33FC </fl><fr>0936 33FC </fr>
    0 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>0936 33FC </fl><fr>093E 33FC </fr>
                 ( hier ist mal ! @ gewesen!!! ) <ok></ok><fl>093E 33FC </fl><fr>093E 33FC </fr>
      OVER DUP L1 @ LT IF L2 @ DUP @ SWAP 1+ L2 ! ELSE 0 END_IF <ok></ok><fl>093E 33FC </fl><fr>094E 33FC </fr>
      SWAP L4 @ LT IF L5 @ DUP @ SWAP 1+ L5 ! ELSE 0 END_IF <ok></ok><fl>094E 33FC </fl><fr>095D 33FC </fr>
      U+ L6 @ DUP 1+ L6 ! ! <ok></ok><fl>095D 33FC </fl><fr>0965 33FC </fr>
      ROT ROT 1 + 2DUP - 0= UNTIL 2DROP L6 @ ! <ok></ok><fl>0965 33FC </fl><fr>0971 33FC </fr>
    ELSE SWAP 1 - SWAP <ok></ok><fl>0971 33FC </fl><fr>0976 33FC </fr>
      1 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>0976 33FC </fl><fr>097E 33FC </fr>
        OVER DUP L1 @ LT IF L2 @ DUP @ SWAP 1+ L2 ! ELSE 0 END_IF <ok></ok><fl>097E 33FC </fl><fr>098E 33FC </fr>
        SWAP L4 @ LT IF L5 @ DUP @ SWAP 1+ L5 ! NOT ELSE -1 END_IF <ok></ok><fl>098E 33FC </fl><fr>099E 33FC </fr>
        U+ L6 @ DUP 1+ L6 ! ! <ok></ok><fl>099E 33FC </fl><fr>09A6 33FC </fr>
        ROT ROT 1 + 2DUP - 0= UNTIL 2DROP ( DUP . <ok></ok><fl>09A6 33FC </fl><fr>09AF 33FC </fr>
        0= IF DUP L6 ! <ok></ok><fl>09AF 33FC </fl><fr>09B4 33FC </fr>
          ROT NOT ROT ROT <ok></ok><fl>09B4 33FC </fl><fr>09B8 33FC </fr>
          1 L1 @ L4 @ MAX 0 BEGIN ROT <ok></ok><fl>09B8 33FC </fl><fr>09C0 33FC </fr>
            0 L6 @ @ NOT U+  <ok></ok><fl>09C0 33FC </fl><fr>09C6 33FC </fr>
            L6 @ DUP 1+ L6 ! ! <ok></ok><fl>09C6 33FC </fl><fr>09CD 33FC </fr>
            ROT ROT 1 + 2DUP - 0= UNTIL 2DROP DROP <ok></ok><fl>09CD 33FC </fl><fr>09D7 33FC </fr>
          END_IF <ok></ok><fl>09D7 33FC </fl><fr>09D7 33FC </fr>
      END_IF  <ok></ok><fl>09D7 33FC </fl><fr>09D7 33FC </fr>
  END_LOCAL ; <ok></ok><fl>09D7 33FC </fl><fr>09D9 33FC </fr>
 <ok></ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C ADDIER . . . <ok>1801 0003 0000 </ok>
C 8 DUMP <ok>2222 2222 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 5 A 0 7 B C ADDIER . . . <ok>1801 0008 0000 </ok>
C 8 DUMP <ok>2222 2222 2222 2222 2222 1111 1111 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 7 A 0 3 B C ADDIER . . . <ok>1801 0008 0000 </ok>
C 8 DUMP <ok>2222 2222 2222 1111 1111 1111 1111 0000 </ok>
 <ok></ok>
A 8 FFFF FILL <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A 0 2 B C ADDIER . . . <ok>1801 0003 0000 </ok>
C 8 DUMP ( 1110 1111 0001 0000 ) <ok>1110 1111 0001 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
 <ok></ok>
A 8 2222 FILL <ok></ok>
C 8 0 FILL <ok></ok>
0 2 A -1 2 B C ADDIER . . . <ok>1801 0002 0000 </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
-1 2 A 0 2 B C ADDIER . . . <ok>1801 0002 FFFF </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
0 2 B -1 2 A C ADDIER . . . <ok>1801 0002 FFFF </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
 <ok></ok>
C 8 0 FILL <ok></ok>
-1 2 B 0 2 A C ADDIER . . . <ok>1801 0002 0000 </ok>
C 8 DUMP <ok>1111 1111 0000 0000 0000 0000 0000 0000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Division"> 
A014 MCODE DI32  <ok></ok><fl>09D9 33FC </fl><fr>09DF 3401 </fr>
: DIV32 ( a b d --> r q ) <ok></ok><fl>09DF 3401 </fl><fr>09E3 3407 </fr>
  10 BEGIN >R DI32 R> 1 - DUP 0= UNTIL 2DROP ; <ok></ok><fl>09E3 3407 </fl><fr>09EE 3407 </fr>
: /MOD ( b d --> r q ) 0 ROT ROT DIV32 ; <ok></ok><fl>09EE 3407 </fl><fr>09F7 340C </fr>
: /MOD ( a b --> r q ) <ok></ok><fl>09F7 340C </fl><fr>09FB 3411 </fr>
  OVER 0LT IF SWAP MINUS SWAP <ok></ok><fl>09FB 3411 </fl><fr>0A01 3411 </fr>
    DUP 0LT IF MINUS /MOD SWAP MINUS SWAP <ok></ok><fl>0A01 3411 </fl><fr>0A09 3411 </fr>
      ELSE /MOD MINUS SWAP MINUS SWAP END_IF <ok></ok><fl>0A09 3411 </fl><fr>0A0F 3411 </fr>
    ELSE DUP 0LT IF MINUS /MOD MINUS <ok></ok><fl>0A0F 3411 </fl><fr>0A16 3411 </fr>
      ELSE /MOD END_IF END_IF <ok></ok><fl>0A16 3411 </fl><fr>0A18 3411 </fr>
  ; <ok></ok><fl>0A18 3411 </fl><fr>0A19 3411 </fr>
: / ( b d --> q ) /MOD SWAP DROP ; <ok></ok><fl>0A19 3411 </fl><fr>0A21 3413 </fr>
: MOD ( b d --> r ) /MOD DROP ; <ok></ok><fl>0A21 3413 </fl><fr>0A28 3417 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SDIV ( s1 l1 x1 s2 l2 x2 x3 --> s3 l3 x3 s4 l4 r4 ) <ok></ok><fl>0A28 3417 </fl><fr>0A2C 341C </fr>
       ( L0 L1 L2 L3 L4 L5 L6 ) <ok></ok><fl>0A2C 341C </fl><fr>0A2C 341C </fr>
  7 LOCAL <ok></ok><fl>0A2C 341C </fl><fr>0A2E 341C </fr>
  L6 ! L5 ! L4 ! L3 ! L2 ! L1 ! L0 ! <ok></ok><fl>0A2E 341C </fl><fr>0A3C 341C </fr>
L1 @ L4 @ LT IF L0 @ L1 @ L2 @ 0 0 0 ELSE <ok></ok><fl>0A3C 341C </fl><fr>0A4C 341C </fr>
  L1 @ 0 BEGIN <ok></ok><fl>0A4C 341C </fl><fr>0A4F 341C </fr>
    L2 @ OVER + @ NOT OVER L6 @ + ! <ok></ok><fl>0A4F 341C </fl><fr>0A5A 341C </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0A5A 341C </fl><fr>0A61 341C </fr>
  L6 @ L1 @ + L4 @ - L2 ! <ok></ok><fl>0A61 341C </fl><fr>0A6B 341C </fr>
  -1 L6 @ L1 @ + ! 1 L1 +! <ok></ok><fl>0A6B 341C </fl><fr>0A75 341C </fr>
  L1 @ L4 @ - 0 BEGIN <ok></ok><fl>0A75 341C </fl><fr>0A7B 341C </fr>
    L2 @ L4 @ + @ NOT <ok></ok><fl>0A7B 341C </fl><fr>0A82 341C </fr>
    L2 @ L4 @ + 1 - @ NOT <ok></ok><fl>0A82 341C </fl><fr>0A8B 341C </fr>
    L5 @ L4 @ + 1 - @      ( a b c ) <ok></ok><fl>0A8B 341C </fl><fr>0A93 341C </fr>
    DIV32  <ok></ok><fl>0A93 341C </fl><fr>0A94 341C </fr>
    SWAP DROP              ( q ) <ok></ok><fl>0A94 341C </fl><fr>0A96 341C </fr>
    DUP L2 @ L4 @ + 1+ ! <ok></ok><fl>0A96 341C </fl><fr>0A9E 341C </fr>
    0 L2 @ L5 @ L4 @       ( c ü adrc adrb n ) <ok></ok><fl>0A9E 341C </fl><fr>0AA5 341C </fr>
    SUPERMULT <ok></ok><fl>0AA5 341C </fl><fr>0AA6 341C </fr>
    2DROP SWAP DROP <ok></ok><fl>0AA6 341C </fl><fr>0AA9 341C </fr>
    0 L2 @ L4 @ + @ U+ L2 @ L4 @ + ! <ok></ok><fl>0AA9 341C </fl><fr>0AB7 341C </fr>
BEGIN WHILE <ok></ok><fl>0AB7 341C </fl><fr>0AB8 341C </fr>
 1 L4 @ 0 BEGIN ROT <ok></ok><fl>0AB8 341C </fl><fr>0ABD 341C </fr>
   OVER L2 @ OVER + @ <ok></ok><fl>0ABD 341C </fl><fr>0AC3 341C </fr>
   SWAP L5 @ + @ NOT <ok></ok><fl>0AC3 341C </fl><fr>0AC9 341C </fr>
   U+ SWAP >R OVER L2 @ + ! R> <ok></ok><fl>0AC9 341C </fl><fr>0AD2 341C </fr>
   ROT ROT 1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0AD2 341C </fl><fr>0ADB 341C </fr>
(   0 L2 @ L4 @ + @ U+ L2 @ L4 @ + ! <ok></ok><fl>0ADB 341C </fl><fr>0ADB 341C </fr>
(   DUP . 7 EMIT <ok></ok><fl>0ADB 341C </fl><fr>0ADB 341C </fr>
 -1 L2 @ L4 @ + 1+ +! <ok></ok><fl>0ADB 341C </fl><fr>0AE3 341C </fr>
REPEAT <ok></ok><fl>0AE3 341C </fl><fr>0AE4 341C </fr>
    -1 L2 +! <ok></ok><fl>0AE4 341C </fl><fr>0AE7 341C </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0AE7 341C </fl><fr>0AEE 341C </fr>
  L4 @ 0 BEGIN <ok></ok><fl>0AEE 341C </fl><fr>0AF1 341C </fr>
    L6 @ OVER + @ NOT OVER L6 @ + ! <ok></ok><fl>0AF1 341C </fl><fr>0AFC 341C </fr>
    1 + 2DUP - 0= UNTIL 2DROP <ok></ok><fl>0AFC 341C </fl><fr>0B03 341C </fr>
  L4 @ L6 @ 1 - ! <ok></ok><fl>0B03 341C </fl><fr>0B0A 341C </fr>
  L1 @ L4 @ - L6 @ L4 @ + ! <ok></ok><fl>0B0A 341C </fl><fr>0B15 341C </fr>
( CR ." ++" L6 @ L1 @ 1 + DUMP ." ++" <ok></ok><fl>0B15 341C </fl><fr>0B15 341C </fr>
  L0 @ L4 @ L6 @ <ok></ok><fl>0B15 341C </fl><fr>0B1B 341C </fr>
  L0 @ L3 @ IF NOT END_IF <ok></ok><fl>0B1B 341C </fl><fr>0B21 341C </fr>
  L1 @ L4 @ - <ok></ok><fl>0B21 341C </fl><fr>0B26 341C </fr>
  L6 @ L4 @ + 1 + <ok></ok><fl>0B26 341C </fl><fr>0B2D 341C </fr>
 END_IF <ok></ok><fl>0B2D 341C </fl><fr>0B2D 341C </fr>
  END_LOCAL <ok></ok><fl>0B2D 341C </fl><fr>0B2E 341C </fr>
  ; <ok></ok><fl>0B2E 341C </fl><fr>0B2F 341C </fr>
 <ok></ok>
( 333333 4 N^ 10 N* VARIABLE NA <ok></ok>
( 333333 DUP N* 10 N* VARIABLE NB <ok></ok>
( NA @ 10 DUMP <ok></ok>
( NA @ NB @ 2OPERANDEN->2SLX OVER . DUP . SDIV <ok></ok>
 <ok></ok>
654321 A ! <ok></ok>
234567 A 1+ ! <ok></ok>
000001 A 2 + ! <ok></ok>
432101 B ! <ok></ok>
A98765 B 1+ ! <ok></ok>
 <ok></ok>
0 3 A 0 2 B C SMUL . . . <ok>1801 0006 0000 </ok>
C 8 DUMP <ok>8421 7813 0017 AC1A 0000 0000 0000 0000 </ok>
 <ok></ok>
0 4 C 0 2 B A SDIV . . . . . . <ok>1404 0003 0000 1401 0002 0000 </ok>
A 8 DUMP <ok>0000 0000 0003 4321 4567 0001 2222 2222 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Zahlenspeicher"> 
0 VARIABLE OPERAND1 <ok></ok><fl>0B2F 341C </fl><fr>0B34 3425 </fr>
0 VARIABLE OPERAND2 <ok></ok><fl>0B34 3425 </fl><fr>0B39 342E </fr>
1400 VARIABLE ERGEBNIS <ok></ok><fl>0B39 342E </fl><fr>0B3E 3437 </fr>
1400 VARIABLE ZAHLENSPEICHER <ok></ok><fl>0B3E 3437 </fl><fr>0B43 3446 </fr>
2000 VARIABLE SPEICHERENDE <ok></ok><fl>0B43 3446 </fl><fr>0B48 3453 </fr>
0 VARIABLE SCHIEB <ok></ok><fl>0B48 3453 </fl><fr>0B4D 345A </fr>
 <ok></ok>
 <ok></ok>
: SLX->ERGEBNIS ( sz lz az --> z ) <ok></ok><fl>0B4D 345A </fl><fr>0B51 3468 </fr>
  OVER 0= IF 2DROP DROP 0 ELSE ( 0 bei 1/7 ) <ok></ok><fl>0B51 3468 </fl><fr>0B58 3468 </fr>
    2DUP + BEGIN 1 - DUP @ 0= NOT UNTIL  <ok></ok><fl>0B58 3468 </fl><fr>0B61 3468 </fr>
    1 + OVER MAX ( sz lz az ez ) <ok></ok><fl>0B61 3468 </fl><fr>0B65 3468 </fr>
    ( DUP ERGEBNIS ! ( nicht wegen 0 1 OPERAND1 ) <ok></ok><fl>0B65 3468 </fl><fr>0B65 3468 </fr>
    2DUP = IF 2DROP 2DROP 0 ELSE <ok></ok><fl>0B65 3468 </fl><fr>0B6C 3468 </fr>
      OVER - ( sz lz az lneu ) <ok></ok><fl>0B6C 3468 </fl><fr>0B6E 3468 </fr>
      OVER @ C000 AND 0= <ok></ok><fl>0B6E 3468 </fl><fr>0B73 3468 </fr>
      OVER 1 = AND IF <ok></ok><fl>0B73 3468 </fl><fr>0B78 3468 </fr>
        DROP @ ELSE ( warum war da -1 ERGEBNIS +! ) <ok></ok><fl>0B78 3468 </fl><fr>0B7B 3468 </fr>
          OVER 1 - ! <ok></ok><fl>0B7B 3468 </fl><fr>0B7F 3468 </fr>
          1 - 4000 OR <ok></ok><fl>0B7F 3468 </fl><fr>0B84 3468 </fr>
          END_IF  <ok></ok><fl>0B84 3468 </fl><fr>0B84 3468 </fr>
      SWAP DROP  <ok></ok><fl>0B84 3468 </fl><fr>0B86 3468 </fr>
      SWAP IF MINUS END_IF <ok></ok><fl>0B86 3468 </fl><fr>0B89 3468 </fr>
      END_IF <ok></ok><fl>0B89 3468 </fl><fr>0B89 3468 </fr>
    END_IF <ok></ok><fl>0B89 3468 </fl><fr>0B89 3468 </fr>
  ; <ok></ok><fl>0B89 3468 </fl><fr>0B8A 3468 </fr>
0 8 C SLX->ERGEBNIS . <ok>5800 </ok>
 <ok></ok>
: OPERAND->SLX ( op --> sx lx ax ) <ok></ok><fl>0B8A 3468 </fl><fr>0B8E 3475 </fr>
  DUP @ ( op x ) <ok></ok><fl>0B8E 3475 </fl><fr>0B90 3475 </fr>
  DUP 0LT IF MINUS -1 ELSE 0 END_IF <ok></ok><fl>0B90 3475 </fl><fr>0B97 3475 </fr>
  ROT ROT ( sx op xabs ) <ok></ok><fl>0B97 3475 </fl><fr>0B99 3475 </fr>
  DUP 4000 AND IF <ok></ok><fl>0B99 3475 </fl><fr>0B9E 3475 </fr>
    SWAP DROP <ok></ok><fl>0B9E 3475 </fl><fr>0BA0 3475 </fr>
    3FFF AND <ok></ok><fl>0BA0 3475 </fl><fr>0BA2 3475 </fr>
    DUP @ SWAP 1+ <ok></ok><fl>0BA2 3475 </fl><fr>0BA6 3475 </fr>
    ELSE <ok></ok><fl>0BA6 3475 </fl><fr>0BA7 3475 </fr>
      OVER ! 1 SWAP  <ok></ok><fl>0BA7 3475 </fl><fr>0BAB 3475 </fr>
      END_IF <ok></ok><fl>0BAB 3475 </fl><fr>0BAB 3475 </fr>
  ; <ok></ok><fl>0BAB 3475 </fl><fr>0BAC 3475 </fr>
 <ok></ok>
77 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>2F21 0001 0000 </ok>
-77 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>2F21 0001 FFFF </ok>
5800 OPERAND1 ! <ok></ok>
OPERAND1 OPERAND->SLX . . . <ok>1801 0004 0000 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: SPEICHERHOL ( l --> addr ) <ok></ok><fl>0BAC 3475 </fl><fr>0BB0 3481 </fr>
  ERGEBNIS @ 2DUP ! <ok></ok><fl>0BB0 3481 </fl><fr>0BB4 3481 </fr>
  1+ 2DUP + ERGEBNIS ! <ok></ok><fl>0BB4 3481 </fl><fr>0BB9 3481 </fr>
  2DUP SWAP 0 FILL <ok></ok><fl>0BB9 3481 </fl><fr>0BBD 3481 </fr>
  SWAP DROP <ok></ok><fl>0BBD 3481 </fl><fr>0BBF 3481 </fr>
ERGEBNIS @ SPEICHERENDE @ LT NOT IF 0369 ERROR END_IF <ok></ok><fl>0BBF 3481 </fl><fr>0BC8 3481 </fr>
  ; <ok></ok><fl>0BC8 3481 </fl><fr>0BC9 3481 </fr>
 <ok></ok>
 <ok></ok>
: 2OPERANDEN->2SLX ( op1 op2 --> sx lx ax sy ly ay az ) <ok></ok><fl>0BC9 3481 </fl><fr>0BCD 3492 </fr>
  OPERAND2 ! <ok></ok><fl>0BCD 3492 </fl><fr>0BCF 3492 </fr>
  OPERAND1 ! <ok></ok><fl>0BCF 3492 </fl><fr>0BD1 3492 </fr>
  OPERAND1 OPERAND->SLX <ok></ok><fl>0BD1 3492 </fl><fr>0BD3 3492 </fr>
  OVER >R <ok></ok><fl>0BD3 3492 </fl><fr>0BD5 3492 </fr>
  OPERAND2 OPERAND->SLX <ok></ok><fl>0BD5 3492 </fl><fr>0BD7 3492 </fr>
  OVER R> + 1+ <ok></ok><fl>0BD7 3492 </fl><fr>0BDB 3492 </fr>
  SPEICHERHOL <ok></ok><fl>0BDB 3492 </fl><fr>0BDC 3492 </fr>
  ; <ok></ok><fl>0BDC 3492 </fl><fr>0BDD 3492 </fr>
 <ok></ok>
77 88 2OPERANDEN->2SLX . . . . . . . <ok>1401 2F22 0001 0000 2F21 0001 0000 </ok>
77 5800 2OPERANDEN->2SLX . . . . . . . <ok>1405 1801 0004 0000 2F21 0001 0000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="N+ N- N* N/MOD N."> 
: N+ ( x y --> z ) <ok></ok><fl>0BDD 3492 </fl><fr>0BE1 3495 </fr>
  2OPERANDEN->2SLX ADDIER SLX->ERGEBNIS ; <ok></ok><fl>0BE1 3495 </fl><fr>0BE5 3495 </fr>
: N- ( x y --> z ) <ok></ok><fl>0BE5 3495 </fl><fr>0BE9 3498 </fr>
  MINUS N+ ; <ok></ok><fl>0BE9 3498 </fl><fr>0BEC 3498 </fr>
: N* ( x y --> z ) <ok></ok><fl>0BEC 3498 </fl><fr>0BF0 349B </fr>
  2OPERANDEN->2SLX SMUL SLX->ERGEBNIS ; <ok></ok><fl>0BF0 349B </fl><fr>0BF4 349B </fr>
 <ok></ok>
 <ok></ok>
IMMEDIATE: RECURSE LFA @ 4 + COMPILE, ; <ok></ok><fl>0BF4 349B </fl><fr>0BFE 34A3 </fr>
: N/MOD ( x y --> r q ) <ok></ok><fl>0BFE 34A3 </fl><fr>0C02 34A9 </fr>
  DUP 0= IF 0 ERROR END_IF <ok></ok><fl>0C02 34A9 </fl><fr>0C07 34A9 </fr>
  DUP OPERAND1 ! <ok></ok><fl>0C07 34A9 </fl><fr>0C0A 34A9 </fr>
  OPERAND1 OPERAND->SLX  <ok></ok><fl>0C0A 34A9 </fl><fr>0C0C 34A9 </fr>
  ROT DROP OVER + 1 - @ ( ly ty ) <ok></ok><fl>0C0C 34A9 </fl><fr>0C13 34A9 </fr>
  SWAP 1 > IF <ok></ok><fl>0C13 34A9 </fl><fr>0C17 34A9 </fr>
    1 BEGIN OVER 0LT NOT WHILE  <ok></ok><fl>0C17 34A9 </fl><fr>0C1C 34A9 </fr>
      SWAP DUP + SWAP DUP N+ REPEAT <ok></ok><fl>0C1C 34A9 </fl><fr>0C23 34A9 </fr>
    SWAP DROP DUP SCHIEB ! <ok></ok><fl>0C23 34A9 </fl><fr>0C28 34A9 </fr>
    ROT OVER N* <ok></ok><fl>0C28 34A9 </fl><fr>0C2B 34A9 </fr>
    ROT ROT N* <ok></ok><fl>0C2B 34A9 </fl><fr>0C2E 34A9 </fr>
    ELSE DROP 1 SCHIEB ! END_IF  <ok></ok><fl>0C2E 34A9 </fl><fr>0C33 34A9 </fr>
  2OPERANDEN->2SLX SDIV <ok></ok><fl>0C33 34A9 </fl><fr>0C35 34A9 </fr>
  SLX->ERGEBNIS >R  <ok></ok><fl>0C35 34A9 </fl><fr>0C37 34A9 </fr>
  SLX->ERGEBNIS R> <ok></ok><fl>0C37 34A9 </fl><fr>0C39 34A9 </fr>
  SCHIEB @ 1 - IF  <ok></ok><fl>0C39 34A9 </fl><fr>0C3E 34A9 </fr>
    SWAP SCHIEB @ RECURSE SWAP DROP <ok></ok><fl>0C3E 34A9 </fl><fr>0C44 34A9 </fr>
    SWAP END_IF <ok></ok><fl>0C44 34A9 </fl><fr>0C45 34A9 </fr>
  ; <ok></ok><fl>0C45 34A9 </fl><fr>0C46 34A9 </fr>
 <ok></ok>
: HG0. ( n -->  /hexstring/ ) <ok></ok><fl>0C46 34A9 </fl><fr>0C4A 34AE </fr>
  0 >R <ok></ok><fl>0C4A 34AE </fl><fr>0C4C 34AE </fr>
  SHL16 DUP IF DIG EMIT R> DROP -1 >R ELSE DROP END_IF <ok></ok><fl>0C4C 34AE </fl><fr>0C57 34AE </fr>
  SHL16 DUP R OR IF DIG EMIT R> DROP -1 >R ELSE DROP END_IF <ok></ok><fl>0C57 34AE </fl><fr>0C64 34AE </fr>
  SHL16 DUP R OR IF DIG EMIT ELSE DROP END_IF <ok></ok><fl>0C64 34AE </fl><fr>0C6D 34AE </fr>
  SHL16 DIG EMIT DROP R> DROP ; <ok></ok><fl>0C6D 34AE </fl><fr>0C74 34AE </fr>
 <ok></ok>
: N. ( n --> ) ( erstmal nur hexadezimale Ausgabe ) <ok></ok><fl>0C74 34AE </fl><fr>0C78 34B1 </fr>
  OPERAND1 ! <ok></ok><fl>0C78 34B1 </fl><fr>0C7A 34B1 </fr>
  OPERAND1 OPERAND->SLX ( sx lx ax ) <ok></ok><fl>0C7A 34B1 </fl><fr>0C7C 34B1 </fr>
  ROT IF ." -" END_IF <ok></ok><fl>0C7C 34B1 </fl><fr>0C81 34B3 </fr>
  OVER +  <ok></ok><fl>0C81 34B3 </fl><fr>0C83 34B3 </fr>
  1 - DUP @ HG0. SWAP 1 - SWAP <ok></ok><fl>0C83 34B3 </fl><fr>0C8C 34B3 </fr>
  BEGIN OVER WHILE 1 - DUP @ HG. SWAP 1 - SWAP REPEAT DROP <ok></ok><fl>0C8C 34B3 </fl><fr>0C99 34B3 </fr>
  DROP  <ok></ok><fl>0C99 34B3 </fl><fr>0C9A 34B3 </fr>
  20 EMIT <ok></ok><fl>0C9A 34B3 </fl><fr>0C9C 34B3 </fr>
  ; <ok></ok><fl>0C9C 34B3 </fl><fr>0C9D 34B3 </fr>
 <ok></ok>
1111 1111 N* N. <ok>1234321 </ok>
 <ok></ok>
: NB. SWAP N. N. ; <ok></ok><fl>0C9D 34B3 </fl><fr>0CA5 34B7 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
7 3 N/MOD N. N.  <ok>2 1 </ok>
3333 DUP N* DUP N* 10 N* DUP N. <ok>68D9E840B77E910 </ok>
3333 DUP N* 10 N* DUP N. <ok>A3D5C290 </ok>
N/MOD NB. <ok>0 A3D5C29 </ok>
3333 DUP N* N. <ok>A3D5C29 </ok>
 <ok></ok>
1111 DUP N* 8 N* DUP N. <ok>91A1908 </ok>
1111 8 N* DUP N. <ok>8888 </ok>
N/MOD NB. <ok>0 1111 </ok>
 <ok></ok>
1111 DUP N* DUP N. <ok>1234321 </ok>
1111 DUP N. <ok>1111 </ok>
N/MOD NB. <ok>0 1111 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Zwischenergebnisse nicht unnötig speichern"> 
ZAHLENSPEICHER @ VARIABLE BLOCKANFANG <ok></ok><fl>0CA5 34B7 </fl><fr>0CAA 34C3 </fr>
ZAHLENSPEICHER @ VARIABLE BLOCKENDE <ok></ok><fl>0CAA 34C3 </fl><fr>0CAF 34CD </fr>
: NEBENRECHNUNG ( --> erg ) ERGEBNIS @ ; <ok></ok><fl>0CAF 34CD </fl><fr>0CB6 34DB </fr>
: HAUPTRECHNUNG ( erg --> ) ERGEBNIS ! ; <ok></ok><fl>0CB6 34DB </fl><fr>0CBD 34E9 </fr>
: RECHENBLOCK BLOCKENDE @ BLOCKANFANG ! <ok></ok><fl>0CBD 34E9 </fl><fr>0CC5 34F5 </fr>
  ERGEBNIS @ BLOCKENDE ! ; <ok></ok><fl>0CC5 34F5 </fl><fr>0CCA 34F5 </fr>
: INIT ZAHLENSPEICHER @ ERGEBNIS ! RECHENBLOCK RECHENBLOCK ; <ok></ok><fl>0CCA 34F5 </fl><fr>0CD5 34FA </fr>
INIT <ok></ok>
 <ok></ok>
: A+0 ( a --> a+0 )  <ok></ok><fl>0CD5 34FA </fl><fr>0CD9 34FE </fr>
  DUP OPERAND1 ! <ok></ok><fl>0CD9 34FE </fl><fr>0CDC 34FE </fr>
  OPERAND1 OPERAND->SLX <ok></ok><fl>0CDC 34FE </fl><fr>0CDE 34FE </fr>
  DUP OPERAND1 - DROP 1 IF <ok></ok><fl>0CDE 34FE </fl><fr>0CE4 34FE </fr>
    OVER ERGEBNIS @ 1+ SWAP MOVE ( SPEICHERHOL will hier nicht gehen ) <ok></ok><fl>0CE4 34FE </fl><fr>0CEA 34FE </fr>
    ERGEBNIS @ 1+ OVER 1+ ERGEBNIS +! ( noch nicht ganz ) <ok></ok><fl>0CEA 34FE </fl><fr>0CF1 34FE </fr>
    ERGEBNIS @ SPEICHERENDE @ LT NOT IF 0369 ERROR END_IF ( da ist es passiert ) <ok></ok><fl>0CF1 34FE </fl><fr>0CFA 34FE </fr>
    SLX->ERGEBNIS SWAP DROP <ok></ok><fl>0CFA 34FE </fl><fr>0CFD 34FE </fr>
    ELSE 2DROP DROP END_IF <ok></ok><fl>0CFD 34FE </fl><fr>0D00 34FE </fr>
  ; <ok></ok><fl>0D00 34FE </fl><fr>0D01 34FE </fr>
: B+0 ( a b --> a+0 b+0 ) <ok></ok><fl>0D01 34FE </fl><fr>0D05 3502 </fr>
  SWAP A+0 SWAP A+0 ; <ok></ok><fl>0D05 3502 </fl><fr>0D0A 3502 </fr>
</sekt> 
 <ok></ok>
 <ok></ok>
 <ok></ok>
<sekt inhalt="Anwenden in N/ NMOD NGGT NBK..."> 
: N/ ( b d --> q ) <ok></ok><fl>0D0A 3502 </fl><fr>0D0E 3505 </fr>
  NEBENRECHNUNG ROT ROT  <ok></ok><fl>0D0E 3505 </fl><fr>0D11 3505 </fr>
  N/MOD SWAP DROP <ok></ok><fl>0D11 3505 </fl><fr>0D14 3505 </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0D14 3505 </fl><fr>0D17 3505 </fr>
  ; <ok></ok><fl>0D17 3505 </fl><fr>0D18 3505 </fr>
: NMOD ( b d --> r )  <ok></ok><fl>0D18 3505 </fl><fr>0D1C 350A </fr>
  NEBENRECHNUNG ROT ROT  <ok></ok><fl>0D1C 350A </fl><fr>0D1F 350A </fr>
  N/MOD DROP  <ok></ok><fl>0D1F 350A </fl><fr>0D21 350A </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0D21 350A </fl><fr>0D24 350A </fr>
  ; <ok></ok><fl>0D24 350A </fl><fr>0D25 350A </fr>
 <ok></ok>
: NGGT ( a b --> ggt ) <ok></ok><fl>0D25 350A </fl><fr>0D29 350F </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D29 350F </fl><fr>0D2C 350F </fr>
  BEGIN DUP WHILE <ok></ok><fl>0D2C 350F </fl><fr>0D2E 350F </fr>
    SWAP OVER NMOD REPEAT DROP  <ok></ok><fl>0D2E 350F </fl><fr>0D33 350F </fr>
  SWAP HAUPTRECHNUNG A+0 ; <ok></ok><fl>0D33 350F </fl><fr>0D37 350F </fr>
: NBK ( a b --> a/ggt b/ggt )  <ok></ok><fl>0D37 350F </fl><fr>0D3B 3513 </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D3B 3513 </fl><fr>0D3E 3513 </fr>
  2DUP NGGT ROT OVER N/ ROT ROT N/  <ok></ok><fl>0D3E 3513 </fl><fr>0D46 3513 </fr>
  ROT HAUPTRECHNUNG B+0 ; <ok></ok><fl>0D46 3513 </fl><fr>0D4A 3513 </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
777 99 NBK NB. <ok>27D 33 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( je einmal N* und N+ in NNUMBER ) <ok></ok>
: NNUMBER ( baddr n --> a faddr ) <ok></ok><fl>0D4A 3513 </fl><fr>0D4E 351B </fr>
  NEBENRECHNUNG ROT ROT <ok></ok><fl>0D4E 351B </fl><fr>0D51 351B </fr>
  7 LOCAL ( L3 L4 nicht verwendet <ok></ok><fl>0D51 351B </fl><fr>0D53 351B </fr>
  L1 ! L0 ! <ok></ok><fl>0D53 351B </fl><fr>0D57 351B </fr>
  0 L1 @ IF <ok></ok><fl>0D57 351B </fl><fr>0D5B 351B </fr>
    DUP L2 ! 1 L5 ! ( Vorzeichen ) <ok></ok><fl>0D5B 351B </fl><fr>0D61 351B </fr>
    BEGIN ( M23 Vorzeichen gucken ) <ok></ok><fl>0D61 351B </fl><fr>0D61 351B </fr>
      -1 L6 !  <ok></ok><fl>0D61 351B </fl><fr>0D64 351B </fr>
      L0 @ L2 @ + C@ <ok></ok><fl>0D64 351B </fl><fr>0D6A 351B </fr>
      2B ( 43 2B ) = IF L2 @ 1+ L2 ! 0 L6 ! ELSE <ok></ok><fl>0D6A 351B </fl><fr>0D76 351B </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>0D76 351B </fl><fr>0D7C 351B </fr>
        2D ( 45 2D ) = IF L2 @ 1+ L2 ! <ok></ok><fl>0D7C 351B </fl><fr>0D84 351B </fr>
          0 L6 ! <ok></ok><fl>0D84 351B </fl><fr>0D87 351B </fr>
          L5 @ MINUS L5 ! END_IF <ok></ok><fl>0D87 351B </fl><fr>0D8C 351B </fr>
        END_IF <ok></ok><fl>0D8C 351B </fl><fr>0D8C 351B </fr>
      L6 @ UNTIL <ok></ok><fl>0D8C 351B </fl><fr>0D8F 351B </fr>
    L2 @ L1 @ LT IF <ok></ok><fl>0D8F 351B </fl><fr>0D95 351B </fr>
      BEGIN <ok></ok><fl>0D95 351B </fl><fr>0D95 351B </fr>
        L0 @ L2 @ + C@ <ok></ok><fl>0D95 351B </fl><fr>0D9B 351B </fr>
        DUP IF ( oo L1 auf Bytes ) <ok></ok><fl>0D9B 351B </fl><fr>0D9D 351B </fr>
          DIGIT NOT IF DROP L1 @ MINUS L1 ! ELSE <ok></ok><fl>0D9D 351B </fl><fr>0DA7 351B </fr>
            SWAP BASE @ N* N+ <ok></ok><fl>0DA7 351B </fl><fr>0DAC 351B </fr>
            L2 @ 1+ L2 !  <ok></ok><fl>0DAC 351B </fl><fr>0DB1 351B </fr>
            END_IF <ok></ok><fl>0DB1 351B </fl><fr>0DB1 351B </fr>
          ELSE DROP L2 @ L1 ! END_IF <ok></ok><fl>0DB1 351B </fl><fr>0DB7 351B </fr>
        L2 @ L1 @ LT NOT UNTIL <ok></ok><fl>0DB7 351B </fl><fr>0DBE 351B </fr>
      END_IF ( M19 ) <ok></ok><fl>0DBE 351B </fl><fr>0DBE 351B </fr>
    END_IF ( M19 ) <ok></ok><fl>0DBE 351B </fl><fr>0DBE 351B </fr>
  L5 @ 0LT IF MINUS END_IF <ok></ok><fl>0DBE 351B </fl><fr>0DC3 351B </fr>
  L2 @ L1 @ - ( oo noch kein fadr !!!!!!!!!!!! siehe NNUMBER ) <ok></ok><fl>0DC3 351B </fl><fr>0DC8 351B </fr>
  DUP IF DROP L0 @ L2 @ + END_IF ( jetzt faddr ) <ok></ok><fl>0DC8 351B </fl><fr>0DD0 351B </fr>
  END_LOCAL <ok></ok><fl>0DD0 351B </fl><fr>0DD1 351B </fr>
  ROT HAUPTRECHNUNG SWAP A+0 SWAP <ok></ok><fl>0DD1 351B </fl><fr>0DD6 351B </fr>
  ; <ok></ok><fl>0DD6 351B </fl><fr>0DD7 351B </fr>
 <ok></ok>
22 WORD: N" ( /number/  --> n ) NNUMBER DROP ; <ok></ok><fl>0DD7 351B </fl><fr>0DDF 351E </fr>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( REPLACE: NUMBER NNUMBER ; <ok></ok>
 <ok></ok>
N" 111111111111111" DUP N* DUP N. DUP . <ok>123456789ABCDEFEDCBA987654321 5409 </ok>
N" 111111111111111" DUP N. DUP . <ok>111111111111111 5413 </ok>
N/MOD OVER . DUP . NB. <ok>0000 544B 0 111111111111111 </ok>
 <ok></ok>
N" 0026D4346A00" DUP N. <ok>26D4346A00 </ok>
N" 00000FC82800" DUP N. <ok>FC82800 </ok>
2DUP N/MOD NB. <ok>D6A2200 275 </ok>
2DUP NBK NB.  <ok>3135 14 </ok>
( richtig wäre D6A2200 275 bei N/MOD ) <ok></ok>
( richtig wäre 3135 14 bei NBK ) <ok></ok>
 <ok></ok>
N" 00A7426290A8C945E959A780" DUP N. <ok>A7426290A8C945E959A780 </ok>
N" 000002330657FDD698" DUP N. <ok>2330657FDD698 </ok>
N/MOD NB.  <ok>158B5843D5ED0 4C0CF598D2 </ok>
( richtig wäre 158B5843D5ED0 4C0CF598D2 ) <ok></ok>
( und nicht   0325AF2C3F8838 4C0CF598D3 ) <ok></ok>
 <ok></ok>
( als vorlaeufigen Abschluss nochmal ) <ok></ok>
" 111111111111111" NNUMBER DROP DUP N* N. <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
N" 000002330657FDD698" N" 4C0CF598D3" N* N. <ok>A7426290A9A396BD1A1F48 </ok>
N" 000002330657FDD698" N" 4C0CF598D2" N* N. <ok>A7426290A77090651C48B0 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
: N^ ( a n --> a^n ) <ok></ok><fl>0DDF 351E </fl><fr>0DE3 3521 </fr>
  NEBENRECHNUNG ROT ROT ( erg a n ) <ok></ok><fl>0DE3 3521 </fl><fr>0DE6 3521 </fr>
  4 LOCAL <ok></ok><fl>0DE6 3521 </fl><fr>0DE8 3521 </fr>
  DUP 0LT IF 12 ERROR END_IF     <ok></ok><fl>0DE8 3521 </fl><fr>0DED 3521 </fr>
  2           ( a n 2 )         <ok></ok><fl>0DED 3521 </fl><fr>0DEE 3521 </fr>
  L3 ! L2 ! L1 !    (  R1-3: a  n  2 ) <ok></ok><fl>0DEE 3521 </fl><fr>0DF4 3521 </fr>
  1           ( p=1          a  n  2 ) <ok></ok><fl>0DF4 3521 </fl><fr>0DF5 3521 </fr>
  BEGIN       ( p            a  n  2 ) <ok></ok><fl>0DF5 3521 </fl><fr>0DF5 3521 </fr>
    L2 @ L3 @ ( p n 2        a  n  2 ) <ok></ok><fl>0DF5 3521 </fl><fr>0DF9 3521 </fr>
    /MOD      ( p r n/2      a  n  2 ) <ok></ok><fl>0DF9 3521 </fl><fr>0DFA 3521 </fr>
    L2 !      ( p r          a n/2 2 ) <ok></ok><fl>0DFA 3521 </fl><fr>0DFC 3521 </fr>
    IF        ( p            a n/2 2 ) <ok></ok><fl>0DFC 3521 </fl><fr>0DFD 3521 </fr>
      L1 @    ( p a          a n/2 2 ) <ok></ok><fl>0DFD 3521 </fl><fr>0DFF 3521 </fr>
      N*      ( p*a          a n/2 2 ) <ok></ok><fl>0DFF 3521 </fl><fr>0E00 3521 </fr>
      END_IF  ( p*a          a n/2 2 ) <ok></ok><fl>0E00 3521 </fl><fr>0E00 3521 </fr>
    L2 @      ( p*a n/2      a n/2 2 ) <ok></ok><fl>0E00 3521 </fl><fr>0E02 3521 </fr>
    WHILE     ( p*a          a n/2 2 ) <ok></ok><fl>0E02 3521 </fl><fr>0E03 3521 </fr>
      L1 @    ( p*a a        a n/2 2 ) <ok></ok><fl>0E03 3521 </fl><fr>0E05 3521 </fr>
      L1 @    ( p*a a a      a n/2 2 ) <ok></ok><fl>0E05 3521 </fl><fr>0E07 3521 </fr>
      N*      ( p*a a*a      a n/2 2 ) <ok></ok><fl>0E07 3521 </fl><fr>0E08 3521 </fr>
      L1 !    ( p*a        a*a n/2 2 ) <ok></ok><fl>0E08 3521 </fl><fr>0E0A 3521 </fr>
      REPEAT  ( p*a        a*a n/2 2 ) <ok></ok><fl>0E0A 3521 </fl><fr>0E0B 3521 </fr>
  END_LOCAL   ( a^n ) <ok></ok><fl>0E0B 3521 </fl><fr>0E0C 3521 </fr>
  SWAP HAUPTRECHNUNG A+0 <ok></ok><fl>0E0C 3521 </fl><fr>0E0F 3521 </fr>
  ;           ( a^n ) <ok></ok><fl>0E0F 3521 </fl><fr>0E10 3521 </fr>
 <ok></ok>
 <ok></ok>
3333 2 N^ 10 N* N. <ok>A3D5C290 </ok>
1111 2 N^ N. <ok>1234321 </ok>
 <ok></ok>
 <ok></ok>
10 20 N^ 10 10 N^ DUP -1 N+ SWAP 1 N+ N* N- N. <ok>1 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="nochmal N. für beliebige Zahlenbasis"> 
: N. ( a -->  /zahl/ ) <ok></ok><fl>0E10 3521 </fl><fr>0E14 3524 </fr>
  BASE @ 10 = IF N. ELSE <ok></ok><fl>0E14 3524 </fl><fr>0E1B 3524 </fr>
    NEBENRECHNUNG SWAP <ok></ok><fl>0E1B 3524 </fl><fr>0E1D 3524 </fr>
    DUP 0LT IF MINUS ." -" END_IF <ok></ok><fl>0E1D 3524 </fl><fr>0E24 3526 </fr>
    DUP 0= IF ." 0 " DROP ELSE <ok></ok><fl>0E24 3526 </fl><fr>0E2C 3529 </fr>
      -1 SWAP ( Stapelmarkierung ) <ok></ok><fl>0E2C 3529 </fl><fr>0E2E 3529 </fr>
      BEGIN DUP WHILE BASE @ N/MOD REPEAT DROP <ok></ok><fl>0E2E 3529 </fl><fr>0E35 3529 </fr>
      BEGIN DUP 0LT NOT WHILE 30 + DUP 39 > IF 7 + END_IF EMIT REPEAT <ok></ok><fl>0E35 3529 </fl><fr>0E43 3529 </fr>
      20 EMIT DROP END_IF <ok></ok><fl>0E43 3529 </fl><fr>0E46 3529 </fr>
    HAUPTRECHNUNG <ok></ok><fl>0E46 3529 </fl><fr>0E47 3529 </fr>
    END_IF <ok></ok><fl>0E47 3529 </fl><fr>0E47 3529 </fr>
  ; <ok></ok><fl>0E47 3529 </fl><fr>0E48 3529 </fr>
 <ok></ok>
: NB. SWAP N. N. ; <ok></ok><fl>0E48 3529 </fl><fr>0E50 352D </fr>
 <ok></ok>
777 99 NBK NB. <ok>27D 33 </ok>
INIT <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Array-Objekte"> 
: ZERLEG ( a --> adr i ) <ok></ok><fl>0E50 352D </fl><fr>0E54 3534 </fr>
  3FFF AND DUP 1+ SWAP @ ; <ok></ok><fl>0E54 3534 </fl><fr>0E5B 3534 </fr>
 <ok></ok>
N" 111111111111111" DUP N* DUP N. <ok>123456789ABCDEFEDCBA987654321 </ok>
DUP ZERLEG SWAP . . <ok>1406 0008 </ok>
 <ok></ok>
: OBJ? ( a --> flag ) <ok></ok><fl>0E5B 3534 </fl><fr>0E5F 3539 </fr>
  ABS DUP 4000 LT IF DROP 0 ELSE <ok></ok><fl>0E5F 3539 </fl><fr>0E68 3539 </fr>
    ZERLEG SWAP DROP 4000 LT IF 0 ELSE -1  <ok></ok><fl>0E68 3539 </fl><fr>0E72 3539 </fr>
      END_IF END_IF <ok></ok><fl>0E72 3539 </fl><fr>0E72 3539 </fr>
  ; <ok></ok><fl>0E72 3539 </fl><fr>0E73 3539 </fr>
 <ok></ok>
: L ( a i -> b ) OVER OBJ? IF <ok></ok><fl>0E73 3539 </fl><fr>0E7A 353B </fr>
    SWAP ZERLEG 3FFF AND ( i adr j ) <ok></ok><fl>0E7A 353B </fl><fr>0E7E 353B </fr>
    ROT 2DUP ( adr j i j i ) <ok></ok><fl>0E7E 353B </fl><fr>0E80 353B </fr>
    > IF SWAP DROP + @ ELSE 2DROP DROP 0 END_IF <ok></ok><fl>0E80 353B </fl><fr>0E8A 353B </fr>
    ELSE IF DROP 0 END_IF END_IF ; <ok></ok><fl>0E8A 353B </fl><fr>0E8F 353B </fr>
 <ok></ok>
: G ( a i -> a i b ) 2DUP L ; <ok></ok><fl>0E8F 353B </fl><fr>0E96 353D </fr>
 <ok></ok>
: H ( a i b --> a' ) <ok></ok><fl>0E96 353D </fl><fr>0E9A 353F </fr>
  DUP >R <ok></ok><fl>0E9A 353F </fl><fr>0E9C 353F </fr>
  ROT ROT ( b a i ) <ok></ok><fl>0E9C 353F </fl><fr>0E9E 353F </fr>
  OVER OBJ? 0= OVER 0= AND R> OBJ? 0= AND IF 2DROP ELSE <ok></ok><fl>0E9E 353F </fl><fr>0EAB 353F </fr>
    OVER OBJ? 0= IF  <ok></ok><fl>0EAB 353F </fl><fr>0EAF 353F </fr>
      DUP 1+ SPEICHERHOL ( b a i addrneu ) <ok></ok><fl>0EAF 353F </fl><fr>0EB2 353F </fr>
      ROT OVER ! ( b i addrneu ) <ok></ok><fl>0EB2 353F </fl><fr>0EB5 353F </fr>
(      OVER 1+ OVER 1 - ! ( b i addrneu ( aha, macht schon SPEICHERHOL ) <ok></ok><fl>0EB5 353F </fl><fr>0EB5 353F </fr>
      4000 OVER 1 - +! ( das ist jetzt neu fuer OBJ? ) <ok></ok><fl>0EB5 353F </fl><fr>0EBB 353F </fr>
      DUP >R + ! R> ( addrneu ) <ok></ok><fl>0EBB 353F </fl><fr>0EC0 353F </fr>
      1 - 4000 + <ok></ok><fl>0EC0 353F </fl><fr>0EC5 353F </fr>
      ELSE <ok></ok><fl>0EC5 353F </fl><fr>0EC6 353F </fr>
        OVER                 ( b a i a ) <ok></ok><fl>0EC6 353F </fl><fr>0EC7 353F </fr>
        ZERLEG 3FFF AND      ( b a i addr j ) <ok></ok><fl>0EC7 353F </fl><fr>0ECA 353F </fr>
        ROT                  ( b a addr j i ) <ok></ok><fl>0ECA 353F </fl><fr>0ECB 353F </fr>
        2DUP > IF SWAP DROP ROT >R + ! R> ELSE <ok></ok><fl>0ECB 353F </fl><fr>0ED6 353F </fr>
          DUP 1+ SPEICHERHOL ( b a addr j i addrneu ) <ok></ok><fl>0ED6 353F </fl><fr>0ED9 353F </fr>
          SWAP >R DUP >R     ( b a addr j addrneu      addrneu i ) <ok></ok><fl>0ED9 353F </fl><fr>0EDD 353F </fr>
          SWAP MOVE DROP R>  ( b addrneu            i ) <ok></ok><fl>0EDD 353F </fl><fr>0EE1 353F </fr>
(          R 1+ OVER 1 - !    ( b addrneu                i ) <ok></ok><fl>0EE1 353F </fl><fr>0EE1 353F </fr>
          4000 OVER 1 - +!   ( das ist jetzt neu fuer OBJ? ) <ok></ok><fl>0EE1 353F </fl><fr>0EE7 353F </fr>
          SWAP OVER R> + !   ( addrneu ) <ok></ok><fl>0EE7 353F </fl><fr>0EEC 353F </fr>
          1 - 4000 +         ( a' ) <ok></ok><fl>0EEC 353F </fl><fr>0EF1 353F </fr>
          END_IF <ok></ok><fl>0EF1 353F </fl><fr>0EF1 353F </fr>
        ZERLEG 3FFF AND      ( adr l ) <ok></ok><fl>0EF1 353F </fl><fr>0EF4 353F </fr>
        BEGIN 2DUP + 1 - @ 0= OVER 1 > AND WHILE 1 - REPEAT ( adr lneu ) <ok></ok><fl>0EF4 353F </fl><fr>0F02 353F </fr>
        OVER @ OBJ? 0= OVER 1 = AND IF DROP @ ELSE <ok></ok><fl>0F02 353F </fl><fr>0F0E 353F </fr>
          SWAP 1 - SWAP      ( addr-1 lneu ) <ok></ok><fl>0F0E 353F </fl><fr>0F12 353F </fr>
          4000 + OVER ! 4000 + <ok></ok><fl>0F12 353F </fl><fr>0F1A 353F </fr>
          END_IF   <ok></ok><fl>0F1A 353F </fl><fr>0F1A 353F </fr>
        END_IF <ok></ok><fl>0F1A 353F </fl><fr>0F1A 353F </fr>
    END_IF <ok></ok><fl>0F1A 353F </fl><fr>0F1A 353F </fr>
  ; <ok></ok><fl>0F1A 353F </fl><fr>0F1B 353F </fr>
   <ok></ok>
: O. ( obj --> ) <ok></ok><fl>0F1B 353F </fl><fr>0F1F 3542 </fr>
  DUP OBJ? IF <ok></ok><fl>0F1F 3542 </fl><fr>0F22 3542 </fr>
    ." [ " <ok></ok><fl>0F22 3542 </fl><fr>0F25 3545 </fr>
    ZERLEG 3FFF AND OVER + SWAP ( eadr+1 aadr ) <ok></ok><fl>0F25 3545 </fl><fr>0F2B 3545 </fr>
    BEGIN 2DUP > WHILE DUP @ RECURSE 1 + REPEAT 2DROP <ok></ok><fl>0F2B 3545 </fl><fr>0F35 3545 </fr>
     ." ] " <ok></ok><fl>0F35 3545 </fl><fr>0F38 3548 </fr>
    ELSE N. END_IF <ok></ok><fl>0F38 3548 </fl><fr>0F3A 3548 </fr>
  ; <ok></ok><fl>0F3A 3548 </fl><fr>0F3B 3548 </fr>
 <ok></ok>
7 DUP O. <ok>7 </ok>
2 9 H DUP O. <ok>[ 7 0 9 ] </ok>
3 11 H DUP O. <ok>[ 7 0 9 11 ] </ok>
1 4 1 6 H H DUP O. <ok>[ 7 [ 4 6 ] 9 11 ] </ok>
1 G 2 88 H H DUP O.  <ok>[ 7 [ 4 6 88 ] 9 11 ] </ok>
1 G 2 0 H H DUP O. <ok>[ 7 [ 4 6 ] 9 11 ] </ok>
0 G 2 1987 H H DUP O. <ok>[ [ 7 0 1987 ] [ 4 6 ] 9 11 ] </ok>
1 0 H DUP O. <ok>[ [ 7 0 1987 ] 0 9 11 ] </ok>
3 0 H DUP O. <ok>[ [ 7 0 1987 ] 0 9 ] </ok>
2 0 H DUP O. <ok>[ [ 7 0 1987 ] ] </ok>
2 2444 H DUP O. <ok>[ [ 7 0 1987 ] 0 2444 ] </ok>
0 N" 7777777" H DUP O. <ok>[ 7777777 0 2444 ] </ok>
2 0 H DUP O. <ok>7777777 </ok>
 <ok></ok>
 <ok></ok>
0 <ok></ok>
0 0 0 1 H 1 2 H 2 5 H H DUP O. <ok>[ [ 1 2 5 ] ] </ok>
1 0 0 3 H 1 4 H 2 8 H H DUP O. <ok>[ [ 1 2 5 ] [ 3 4 8 ] ] </ok>
2 0 0 9 H 1 2 H 2 1 H H CR DUP O. <ok>
[ [ 1 2 5 ] [ 3 4 8 ] [ 9 2 1 ] ] </ok>
 <ok></ok>
0 1 4 H DUP O. <ok>[ 0 4 ] </ok>
0 0 0 1 4 H H O. <ok>[ [ 0 4 ] ] </ok>
 <ok></ok>
0  <ok></ok>
0 0 0 60 H 1 30 H 2 20 H H DUP O. <ok>[ [ 60 30 20 ] ] </ok>
1 0 0 30 H 1 20 H 2 15 H H DUP O. <ok>[ [ 60 30 20 ] [ 30 20 15 ] ] </ok>
2 0 0 20 H 1 15 H 2 12 H H CR DUP O. <ok>
[ [ 60 30 20 ] [ 30 20 15 ] [ 20 15 12 ] ] </ok>
 <ok></ok>
0 VARIABLE SPMERK <ok></ok><fl>0F3B 3548 </fl><fr>0F40 354F </fr>
: [ ( ---> spmerk ) <ok></ok><fl>0F40 354F </fl><fr>0F44 3551 </fr>
  SPMERK @ SP @ SPMERK ! <ok></ok><fl>0F44 3551 </fl><fr>0F4A 3551 </fr>
  ; <ok></ok><fl>0F4A 3551 </fl><fr>0F4B 3551 </fr>
 <ok></ok>
: ] ( spmerk a b c d ... z --> matrix ) <ok></ok><fl>0F4B 3551 </fl><fr>0F4F 3553 </fr>
  0 BEGIN SP @ 1 - SPMERK @ - WHILE <ok></ok><fl>0F4F 3553 </fl><fr>0F58 3553 </fr>
    SP @ 2 - SPMERK @ - ROT H REPEAT <ok></ok><fl>0F58 3553 </fl><fr>0F62 3553 </fr>
  SWAP SPMERK ! <ok></ok><fl>0F62 3553 </fl><fr>0F65 3553 </fr>
  ; <ok></ok><fl>0F65 3553 </fl><fr>0F66 3553 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Matrix invertieren"> 
: OBJ+0 ( obj --> obj+0 ) <ok></ok><fl>0F66 3553 </fl><fr>0F6A 3559 </fr>
  DUP OBJ? IF DUP >R <ok></ok><fl>0F6A 3559 </fl><fr>0F6F 3559 </fr>
    ZERLEG 3FFF AND          ( adr n ) <ok></ok><fl>0F6F 3559 </fl><fr>0F72 3559 </fr>
    SWAP OVER + -1 + SWAP    ( eadr-1 n ) <ok></ok><fl>0F72 3559 </fl><fr>0F78 3559 </fr>
      BEGIN DUP WHILE SWAP   ( n eadr-1 ) <ok></ok><fl>0F78 3559 </fl><fr>0F7B 3559 </fr>
        DUP @ RECURSE OVER ! ( n eadr-1 ) <ok></ok><fl>0F7B 3559 </fl><fr>0F80 3559 </fr>
        -1 + SWAP -1 +       ( eadr-1 n-1 ) <ok></ok><fl>0F80 3559 </fl><fr>0F85 3559 </fr>
        REPEAT               ( adr-1 0 ) <ok></ok><fl>0F85 3559 </fl><fr>0F86 3559 </fr>
    2DROP R>                 ( obj ) <ok></ok><fl>0F86 3559 </fl><fr>0F88 3559 </fr>
    ELSE A+0 END_IF <ok></ok><fl>0F88 3559 </fl><fr>0F8A 3559 </fr>
  ; <ok></ok><fl>0F8A 3559 </fl><fr>0F8B 3559 </fr>
 <ok></ok>
[ 12 18 1B ] OBJ+0 O. <ok>[ 12 18 1B ] </ok>
 <ok></ok>
: OBJDUMP ( obj --> ) <ok></ok><fl>0F8B 3559 </fl><fr>0F8F 3561 </fr>
  DUP OBJ? IF <ok></ok><fl>0F8F 3561 </fl><fr>0F92 3561 </fr>
    ZERLEG 3FFF AND                ( adr n ) <ok></ok><fl>0F92 3561 </fl><fr>0F95 3561 </fr>
      BEGIN DUP WHILE SWAP         ( n adr ) <ok></ok><fl>0F95 3561 </fl><fr>0F98 3561 </fr>
        CR OVER . DUP . DUP @  <ok></ok><fl>0F98 3561 </fl><fr>0F9F 3561 </fr>
        DUP . DUP ABS 4000 LT IF -1 . -1 . ELSE DUP ABS ZERLEG . . END_IF <ok></ok><fl>0F9F 3561 </fl><fr>0FB1 3561 </fr>
        DUP O. RECURSE             ( n adr ) <ok></ok><fl>0FB1 3561 </fl><fr>0FB4 3561 </fr>
        1 + SWAP -1 +              ( adr+1 n-1 ) <ok></ok><fl>0FB4 3561 </fl><fr>0FB9 3561 </fr>
        REPEAT                     ( adr+n 0 ) <ok></ok><fl>0FB9 3561 </fl><fr>0FBA 3561 </fr>
    2DROP                          ( ) <ok></ok><fl>0FBA 3561 </fl><fr>0FBB 3561 </fr>
    ELSE DROP END_IF <ok></ok><fl>0FBB 3561 </fl><fr>0FBD 3561 </fr>
  ; <ok></ok><fl>0FBD 3561 </fl><fr>0FBE 3561 </fr>
 <ok></ok>
[ 12 18 1B ] OBJDUMP <ok>
0003 1479 0012 FFFF FFFF 12 
0002 147A 0018 FFFF FFFF 18 
0001 147B 001B FFFF FFFF 1B </ok>
[ [ 12 18 1B ] [ 1E 21 24 ] ] OBJDUMP <ok>
0002 1485 547C 4003 147D [ 12 18 1B ] 
0003 147D 0012 FFFF FFFF 12 
0002 147E 0018 FFFF FFFF 18 
0001 147F 001B FFFF FFFF 1B 
0001 1486 5480 4003 1481 [ 1E 21 24 ] 
0003 1481 001E FFFF FFFF 1E 
0002 1482 0021 FFFF FFFF 21 
0001 1483 0024 FFFF FFFF 24 </ok>
 <ok></ok>
: INVERTIEREN ( matrix dim --> invmat nenner ) <ok></ok><fl>0FBE 3561 </fl><fr>0FC2 356D </fr>
  ( L0=nr L1=N L2=i L3=j L4=k L5=Y L6=Z L7=alternenner ) <ok></ok><fl>0FC2 356D </fl><fr>0FC2 356D </fr>
  8 LOCAL NEBENRECHNUNG L0 ! <ok></ok><fl>0FC2 356D </fl><fr>0FC7 356D </fr>
  L1 ! 1 ( mat nenner ) <ok></ok><fl>0FC7 356D </fl><fr>0FCA 356D </fr>
  L1 @ L2 ! BEGIN -1 L2 +! ( CR L2 ? ERGEBNIS ? <ok></ok><fl>0FCA 356D </fl><fr>0FD1 356D </fr>
    L7 ! ( mat ) 0 L5 ! 0 L6 ! <ok></ok><fl>0FD1 356D </fl><fr>0FD9 356D </fr>
    DUP L2 @ L L2 @ L ( mat neuernenner ) <ok></ok><fl>0FD9 356D </fl><fr>0FE0 356D </fr>
    L1 @ L3 ! BEGIN -1 L3 +! <ok></ok><fl>0FE0 356D </fl><fr>0FE7 356D </fr>
      OVER L3 @ L L2 @ L L5 @ L3 @ ROT H L5 ! <ok></ok><fl>0FE7 356D </fl><fr>0FF6 356D </fr>
      OVER L2 @ L L3 @ L L6 @ L3 @ ROT H L6 ! <ok></ok><fl>0FF6 356D </fl><fr>1005 356D </fr>
      L3 @ 0= UNTIL <ok></ok><fl>1005 356D </fl><fr>1009 356D </fr>
    L5 @ L2 @ L L7 @ N+ L5 @ L2 @ ROT H L5 ! <ok></ok><fl>1009 356D </fl><fr>1019 356D </fr>
    L6 @ L2 @ L L7 @ N- L6 @ L2 @ ROT H L6 ! <ok></ok><fl>1019 356D </fl><fr>1029 356D </fr>
    L1 @ L3 ! BEGIN -1 L3 +! <ok></ok><fl>1029 356D </fl><fr>1030 356D </fr>
      OVER L3 @ L ( mat nenner mat[L3] ) <ok></ok><fl>1030 356D </fl><fr>1034 356D </fr>
      L1 @ L4 ! BEGIN -1 L4 +! ( CR L3 ? L4 ? ERGEBNIS ? <ok></ok><fl>1034 356D </fl><fr>103B 356D </fr>
        NEBENRECHNUNG ROT ROT SWAP ( mat erg mat[L3] nenner ) <ok></ok><fl>103B 356D </fl><fr>103F 356D </fr>
        OVER L4 @ L OVER N* <ok></ok><fl>103F 356D </fl><fr>1045 356D </fr>
        L5 @ L3 @ L L6 @ L4 @ L N* N- <ok></ok><fl>1045 356D </fl><fr>1051 356D </fr>
        L7 @ N/ ( mat erg mat[L3] nenner bijneu ) <ok></ok><fl>1051 356D </fl><fr>1054 356D </fr>
        2SWAP SWAP ( mat nenner bijneu mat[L3] erg ) <ok></ok><fl>1054 356D </fl><fr>1056 356D </fr>
        HAUPTRECHNUNG SWAP A+0 ( mat nenner mat[L3] bijneu+0 ) <ok></ok><fl>1056 356D </fl><fr>1059 356D </fr>
        SWAP L4 @ ROT H ( mat nenner mat[L3]neu ) <ok></ok><fl>1059 356D </fl><fr>105E 356D </fr>
        L4 @ 0= UNTIL <ok></ok><fl>105E 356D </fl><fr>1062 356D </fr>
      ROT L3 @ ROT H SWAP ( matneu nenner ) <ok></ok><fl>1062 356D </fl><fr>1068 356D </fr>
      L3 @ 0= UNTIL <ok></ok><fl>1068 356D </fl><fr>106C 356D </fr>
    A+0 ( verschiebt nenner hinter matneu ) <ok></ok><fl>106C 356D </fl><fr>106D 356D </fr>
    ( RECHENBLOCK ) <ok></ok><fl>106D 356D </fl><fr>106D 356D </fr>
    ( CR ." vor 1. OBJ+0 " ERGEBNIS ? ( OVER OBJDUMP DUP N. DUP ABS . <ok></ok><fl>106D 356D </fl><fr>106D 356D </fr>
    L0 @ HAUPTRECHNUNG SWAP OBJ+0 SWAP A+0 <ok></ok><fl>106D 356D </fl><fr>1074 356D </fr>
    ( ." nach 1. OBJ+0 " ERGEBNIS ? ( OVER OBJDUMP DUP N. DUP ABS . <ok></ok><fl>1074 356D </fl><fr>1074 356D </fr>
    L2 @ 0= UNTIL <ok></ok><fl>1074 356D </fl><fr>1078 356D </fr>
  END_LOCAL <ok></ok><fl>1078 356D </fl><fr>1079 356D </fr>
  ; <ok></ok><fl>1079 356D </fl><fr>107A 356D </fr>
 <ok></ok>
( so und jetzt anwenden ) <ok></ok>
 <ok></ok>
[ [ 3C 1E 14 ] ( dezimal 60 30 20 ) <ok></ok>
  [ 1E 14 0F ] ( dezimal 30 20 15 ) <ok></ok>
  [ 14 0F 0C ] ( dezimal 20 15 12 ) <ok></ok>
  ] 3 <ok></ok>
OVER O. DUP . <ok>[ [ 3C 1E 14 ] [ 1E 14 F ] [ 14 F C ] ] 0003 </ok>
INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ F -3C 32 ] [ -3C 140 -12C ] [ 32 -12C 12C ] ] 64 </ok>
( herauskommen muss dabei ) <ok></ok>
(             [ [ F -3C 32 ] [ -3C 140 -12C ] [ 32 -12C 12C ] ] 0064 ) <ok></ok>
( dezimal        15 -60 ...                                      100 ) <ok></ok>
 <ok></ok>
 <ok></ok>
( paar Vandermonde-Matrizen invertieren: ) <ok></ok>
INIT <ok></ok>
[ [ 1 1 1 1 ] <ok></ok>
  [ 2 1 N^ 2 2 N^ 2 3 N^ 2 4 N^ ] <ok></ok>
  [ 3 1 N^ 3 2 N^ 3 3 N^ 3 4 N^ ] <ok></ok>
  [ 4 1 N^ 4 2 N^ 4 3 N^ 4 4 N^ ] <ok></ok>
  ] <ok></ok>
4 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 </ok>
ERGEBNIS ? <ok>1453 </ok>
( herauskommen soll [ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] ) <ok></ok>
 <ok></ok>
INIT <ok></ok>
[ [ 1 1 1 1 1 ] <ok></ok>
  [ 2 1 N^ 2 2 N^ 2 3 N^ 2 4 N^ 2 5 N^ ] <ok></ok>
  [ 3 1 N^ 3 2 N^ 3 3 N^ 3 4 N^ 3 5 N^ ] <ok></ok>
  [ 4 1 N^ 4 2 N^ 4 3 N^ 4 4 N^ 4 5 N^ ] <ok></ok>
  [ 5 1 N^ 5 2 N^ 5 3 N^ 5 4 N^ 5 5 N^ ] <ok></ok>
  ] <ok></ok>
5 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 </ok>
ERGEBNIS ? <ok>148A </ok>
( herauskommen soll  [ [ 2A300 -2A300 ... ] ] 8700 ) <ok></ok>
 <ok></ok>
: VANDERMONDEMATRIX ( n --> mat ) <ok></ok><fl>107A 356D </fl><fr>107E 357F </fr>
  3 LOCAL <ok></ok><fl>107E 357F </fl><fr>1080 357F </fr>
  L0 ! <ok></ok><fl>1080 357F </fl><fr>1082 357F </fr>
  0  <ok></ok><fl>1082 357F </fl><fr>1083 357F </fr>
  L0 @ L1 ! BEGIN L1 @ DUP WHILE 1 - L1 ! <ok></ok><fl>1083 357F </fl><fr>108F 357F </fr>
    L1 @ G <ok></ok><fl>108F 357F </fl><fr>1092 357F </fr>
    L0 @ L2 ! BEGIN L2 @ DUP WHILE 1 - L2 ! <ok></ok><fl>1092 357F </fl><fr>109E 357F </fr>
      L2 @ L1 @ 1 + L2 @ 1 + N^  <ok></ok><fl>109E 357F </fl><fr>10A9 357F </fr>
      H <ok></ok><fl>10A9 357F </fl><fr>10AA 357F </fr>
      REPEAT DROP <ok></ok><fl>10AA 357F </fl><fr>10AC 357F </fr>
    H <ok></ok><fl>10AC 357F </fl><fr>10AD 357F </fr>
    REPEAT DROP <ok></ok><fl>10AD 357F </fl><fr>10AF 357F </fr>
  END_LOCAL <ok></ok><fl>10AF 357F </fl><fr>10B0 357F </fr>
  ; <ok></ok><fl>10B0 357F </fl><fr>10B1 357F </fr>
 <ok></ok>
( 4 VANDERMONDEMATRIX DUP O. <ok></ok>
 <ok></ok>
INIT <ok></ok>
4 VANDERMONDEMATRIX <ok></ok>
4 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 </ok>
ERGEBNIS ? <ok>145B </ok>
( herauskommen soll [ [ 480 -360 180 -48 ] [ -4E0 558 -2A0 84 ] [ 1B0 -240 150 -48 ] [ -30 48 -30 C ] ] 120 <ok></ok>
( gekürzt [ [ 60 -48 20 -6 ] [ -68 72 -38 B ] [ 24 -30 1C -6 ] [ -4 6 -4 1 ] ] 18 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
5 VANDERMONDEMATRIX <ok></ok>
5 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 </ok>
ERGEBNIS ? <ok>1494 </ok>
( herauskommen soll [ [ 2A300 -2A300 1C200 -A8C0 1B00 ] [ -36240 4B3C0 -36D80 15720 -3840 ] [ 18F60 -297C0 22740 -E6A0 2760 ] [ -4EC0 9240 -8700 3DE0 -B40 ] [ 5A0 -B40 B40 -5A0 120 ] ] 8700 <ok></ok>
( gekürzt [ [ 258 -258 190 -96 18 ] [ -302 42E -30C 131 -32 ] ... [ 5 -A A -5 1 ] ] 78 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
6 VANDERMONDEMATRIX <ok></ok>
6 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 8E62000 -B1FA800 9E34000 -58FD400 1C7A000 -3F4800 ] [ -CE74800 15B0EE00 -14EDD000 C3C6C00 -4012800 907E00 ] [ 72B2800 -E3E9500 F537000 -97C6B00 336A800 -76A700 ] [ -1EA6E00 43BB100 -4FC2C00 34E6300 -12C9600 2CD300 ] [ 3F4800 -964B00 BDD800 -867900 32A000 -7E900 ] [ -32A00 7E900 -A8C00 7E900 -32A00 8700 ] ] 17BB000 </ok>
ERGEBNIS ? <ok>14E7 </ok>
( herauskommen soll [ [ 8E62000 -B1FA800 9E34000 ... -32A00 8700 ] ] 17BB000 <ok></ok>
( gekürzt [ [ -10E0 1518 -12C0 A8C -360 78 ] ... [ 6 -F 14 -F 6 -1 ] ] -2D0 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
7 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>14A6 </ok>
7 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ CC65AF0000 -13298868000 154A9790000 -FF7F1AC000 7AA3690000 -2210F28000 42BDF0000 ] [ -1459356C000 281A9456000 -301BBE14000 25697808000 -12574BB4000 52A6ADE000 -A3848C000 ] [ CEFE230000 -1DE0593F000 277092A8000 -2040FF81000 104D98A0000 -4AFC775000 968A48000 ] [ -438629D000 ACC3A94000 -F72EC73000 D621620000 -708A45B000 21414E4000 -4421E5000 ] [ BF6B6B000 -20D97C2000 3215DE7000 -2DD3C02000 192F459000 -7B4986000 1038D5000 ] [ -11850F000 329CD6000 -511C29000 4DDD98000 -2CC5D1000 E467E000 -1F257000 ] [ A61D000 -1F257000 33E91000 -33E91000 1F257000 -A61D000 17BB000 ] ] 1D33190000 </ok>
ERGEBNIS ? <ok>1565 </ok>
( herauskommen soll [ [ CC65AF0000 -13298868000 ... 17BB000 ] ] 1D33190000  <ok></ok>
( gekürzt [ [ -89D0 CEB8 -E5B0 AC44 -52B0 16F8 -2D0 ]  ... [ -7 15 -23 23 -15 7 -1 ] ] -13B0 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
8 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>14DC </ok>
8 INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 8FB77F0C000000 -FB811E55000000 14F56D31C000000 -13A6165EA400000 C9341844000000 -53D5B4C7000000 1487ED94000000 -23EDDFC300000 ] [ -F6E288E0800000 22DCCFEB3600000 -31F9FCC1E800000 307D897DAC80000 -1FA9A063D800000 D5E0E67E200000 -34DE03C3800000 5D28C602C0000 ] [ AE2823BBE00000 -1C9EC2EB7F80000 2CBE3A40D600000 -2D711339F600000 1E82356CEA00000 -D1F6139B880000 3498AA68200000 -5D9D9266C0000 ] [ -41ABAB79C00000 BEBC9341DC0000 -140F7ACCE000000 156DB085D760000 -EE217721C00000 68E7E0455C0000 -1ABF4E66800000 3041418090000 ] [ E58C320880000 -2CA977ED100000 4FB7C878A80000 -5952EFDA200000 4065E96AD80000 -1D3145CE700000 79C292BF80000 -DF8F37680000 ] [ -1D247F7380000 5F69773080000 -B272C64880000 D096C4D6C0000 -9C17A72480000 490E580C80000 -138FBB3F80000 24BA45720000 ] [ 1FEFE3580000 -6C9604F80000 D2C8DC780000 -FF7F1AC00000 C60281880000 -5FCFAA080000 1A764EA80000 -33196BC0000 ] [ -E998C80000 33196BC0000 -6632D780000 7FBF8D60000 -6632D780000 33196BC0000 -E998C80000 1D33190000 ] ] 11F6EFE1800000 </ok>
ERGEBNIS ? <ok>160F </ok>
( herauskommen soll [ [ 8FB77F0C000000 -FB811E55000000 ... 1D33190000 ] ] 11F6EFE1800000 <ok></ok>
( gekürzt [ [ 4EC00 -89D00 B7C00 -AC440 6E400 -2DF00 B400 -13B0 ] ... [ -( 1C -38 46 -38 1C -8 1 ] ] 9D80 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
9 VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>151A </ok>
9 INVERTIEREN <ok></ok>
OVER O. DUP N. <okok>
ERGEBNIS ? <ok>16F5 </ok>
( herauskommen soll [ [ 37F3F5B381040000000 ... 11F6EFE1800000 ] ] 6378D13F1E40000000 <ok></ok>
( gekürzt [ [ 31D580 -63AB00 9B0A00 -AE6B40 8B8900 -4D8500 1C7A00 -63AB0 9D80 ] ... [ 9 -24 54 -7E 7E -54 24 -9 1 ] ] 58980 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0A VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>1562 </ok>
0A INVERTIEREN <ok></ok>
OVER O. DUP N. <okok>
ERGEBNIS ? <ok>1838 </ok>
( herauskommen soll [ [ D726B3E61B37C18000000000 ... 6378D13F1E40000000 ] ] 1583DECA35EBF9C000000000 <ok></ok>
( gekürzt [ [ -229B600 4DDD980 -8A6D800 B5AFB80 ... -D2 78 -2D A -1 ] ] -375F00 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0B VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>15B7 </ok>
0B INVERTIEREN <ok></ok>
OVER O. DUP N. <ok>[ [ 2331530F3797CA8619C400000000000 -57FB4FA60AFB7A4F406A00000000000 AFF69F4C15F6F49E80D400000000000 -107F1EEF220F26EEDC13E00000000000 1279E534C9FC7D866720800000000000 -F659456A852689AAB45C00000000000 96D363F812D3AD1A254800000000000 -41FC7BBC883C9BBB704F80000000000 138D2E24E5FEFEBC473400000000000 -384EEB4B8C2610D68FA00000000000 4A750CD1E9FB539EE400000000000 ] [ -4715BAF84A661AABC5E780000000000 DDB3FB3FBF7CFFD50EF7C0000000000 -1D8BBBBB6D7F87DC488BD80000000000 2DB186D7BC6B39B3A9D36C0000000000 -3419B9862F0C659F4D99F00000000000 2BEE2814D77C02D6B54F680000000000 -1B1EDC0214EFD4FD2026700000000000 BF05AAD682B47A461557A0000000000 -38DEE638F5C60DB1745980000000000 A469CBB7A85F39D3F11C0000000000 -DA1535E7A4E4B2FDFB80000000000 ] [ 3DF8D857A5CFD1F64BFA60000000000 -DDCA72A7F8C84FAAA538D0000000000 1FBB4F752BE65753E2BD4E0000000000 -32F27357897E787F0DED060000000000 3B6F4EA254B36E4ED377CC0000000000 -32E4046F7FD841B87445960000000000 1FC4112BF8C79C62ADE94C0000000000 -E19A9EDB120E8C671EDC90000000000 4399FF5EF85D490D6EC8E0000000000 -C4732420BC4CC1A1514D0000000000 105AEE47CCB5F69A99660000000000 ] [ -1ED42C6791809466012A50000000000 791B528A0DE4D8116E3F50000000000 -126C4C54B2A702E0E1DC5D0000000000 1EC37D63BF8E11DB80ADF10000000000 -24D55F90B8E652E0B1681A0000000000 201E5C0112E47729A3B4740000000000 -1451C363CB46BBEF32AD120000000000 91CD150B2574EE602CC938000000000 -2C0B747C1F94144E3AFE10000000000 80D61D951278F6D059B30000000000 -AC8CB3AF4B44565D1F10000000000 ] [ 9B92E5EE41DE07CC04758000000000 -28D3B9AB1F19B82E2C7C7C000000000 68812EC73DF2E3BE67F658000000000 -B516334173EC2536A81CA8000000000 DEC5624D8C51FFD4EE0730000000000 -C63730BFAF9E9F19958FB8000000000 7F59C66E7097B516C936F0000000000 -39CF6792B7DA7D5D251BF4000000000 11A2974404F23EAE2C0678000000000 -33FFF4AEA0BE3BEF92F0C000000000 461C28503E2B6A27ADB8000000000 ] [ -209961347C25D9695CE34000000000 8FD0E47DE23BF1940F7A0000000000 -17F81BF871659521366EF4000000000 2AEF3487EC16C8435B9A70000000000 -363C91AF87B1A311704D28000000000 314A2C5495DC980316FEE0000000000 -2035E46BD086CB98C1E6C8000000000 ED34363BB4924B89CC4E8000000000 -49306FEFB61A9BE804424000000000 D9E083ECFBA2A2094A40000000000 -12823CBFF19F79AED2C4000000000 ] [ 49B7A728030D078528C4000000000 -151BB2E285BAAFEA2ED9C000000000 3A325FC090E8E0B74ADDC000000000 -6B4F9D44B42ED90F355A8000000000 8AFA2FAF623922C98D7E8000000000 -81018B5A0167BA78E40F8000000000 55D510F9CA88746A10178000000000 -281C9511A2903515EF674000000000 C89C2ECCD49A26399E14000000000 -25BE1F0D142D9934F7AC000000000 33CBC8C0949208F01EC000000000 ] [ -6F4328BA38054655D48000000000 20D0092CF28BE678D850000000000 -5CF941D4913E1D186448000000000 AFCA6BB09068CD2217F0000000000 -E8E958E709862E603AD0000000000 DCAED5A434C8E77C9F80000000000 -958BC75944015B43D090000000000 47090E0D9328A22BDC88000000000 -168701F7B6AF2ED138E8000000000 44AF910A83CC6ABC170000000000 -5F56365746AF84CE28000000000 ] [ 6B78751C90D879C7D0000000000 -20726EB66E4FCF17094000000000 5E096678FEBD6A8ED60000000000 -B5AE7997C669D411038000000000 F5B5771B1DBD60BF8A0000000000 -ED5DEBF37AC13853E68000000000 A3CE4F676928EB2A5C0000000000 -4F23EDFB5BB1FDCE9FC000000000 197ED015667DAD68010000000000 -4EDE9802620A3856C4000000000 6EEFF4C2A608BFC60000000000 ] [ -3C174F3EC49A128B4000000000 127D5375C656CAA100000000000 -369A1A77CDB84E6374000000000 6B78751C90D879C7D0000000000 -9408310088C0797F68000000000 919AF13F79EB7BB3E0000000000 -664535A3711010CA88000000000 3244BAE8333BF6E5B8000000000 -10779E54E4A54C7764000000000 33C5501691BFD0F60000000000 -49F54DD7195B2A84000000000 ] [ ECAA92B05123BB4000000000 -49F54DD7195B2A84000000000 DDDFE9854C117F8C000000000 -1BBBFD30A9822FF18000000000 26D3FC10ED4FDCB88000000000 -26D3FC10ED4FDCB88000000000 1BBBFD30A9822FF18000000000 -DDDFE9854C117F8C000000000 49F54DD7195B2A84000000000 -ECAA92B05123BB4000000000 1583DECA35EBF9C000000000 ] ] 333078D050DCC97D3CC00000000000 </ok>
ERGEBNIS ? <ok>19D9 </ok>
( herauskommen soll [ [ 2331530F3797CA8619C400000000000 -57FB4FA60AFB7A4F406A00000000000 ... 1583DECA35EBF9C000000000 ] ] 333078D050DCC97D3CC00000000000 <ok></ok>
( gekürzt [ [ -1A2BE700 416DC180 -82DB8300 ... -14A A5 -37 B -1 ] ] -2611500 ok <ok></ok>
 <ok></ok>
INIT <ok></ok>
0C VANDERMONDEMATRIX <ok></ok>
ERGEBNIS ? <ok>1618 </ok>
( 0C INVERTIEREN OVER O. DUP N. <ok></ok>
ERGEBNIS ? <ok>1618 </ok>
( herauskommen soll  <ok></ok>
( OVER O. DUP N. [ [ 1569BD000 -3AE2C7C00 82DB83000 ... -318 1EF -DC 42 -C 1 ] ] 1C8CFC00 ok <ok></ok>
 <ok></ok>
( mehr geht erstmal nicht weil nicht mehr Platz ) <ok></ok>
 <ok></ok>
 <ok></ok>
INIT <ok></ok>
[ [ 112  431  199 764 987 434 ] <ok></ok>
  [ 543 45 33 41 789 566 ] <ok></ok>
  [ 543 145 33 42 789 566 ] <ok></ok>
  [ 875 687 098 675 677 574 ] <ok></ok>
  [ 875 66B 0987 675 678 634 ] <ok></ok>
  [ 454 33 555 934 655 633 ] <ok></ok>
  ]  <ok></ok>
DUP O. <ok>[ [ 112 431 199 764 987 434 ] [ 543 45 33 41 789 566 ] [ 543 145 33 42 789 566 ] [ 875 687 98 675 677 574 ] [ 875 66B 987 675 678 634 ] [ 454 33 555 934 655 633 ] ] </ok>
6 INVERTIEREN ( mat dim --> invmat nenner ) <ok></ok>
OVER O. <ok>[ [ 27276428B0E9 -33FD2E9C83CD0A 36525A21D36B67 -5B6695B4D77EA -3093457A10166 5ED85D6D5A12A ] [ 14B8624C29F 23F0A37B21A650 -23F54B966E2DB2 320EE615E87 -1418992AE6F 1AE8B369C60 ] [ -CAC1A9F7ECEA -8AB9A28A74D8F 9744B3E45C16A 38CEFB41B368B -4A47D9FEA5ECC 160664B6AA45E ] [ -14B8624C29F00 -C363E60F784F1 10DE59AD7EE6F1 -320EE615E8700 1418992AE6F00 -1AE8B369C6000 ] [ -6D3C9FC72F7E6 -2F0698EAD8D33F 2F2624E1612412 32C45F0508E -324A2228B7DBF 7A7E4DA446B7E ] [ 9786AE2C87255 6CC328E4C18686 -761A88CE3376B2 590EB00BDB612 7756E029B7354 -106F8E3727FCF1 ] ] </ok>
DUP O. <ok>-23E46D3CC0AECB0F </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="Reste die auch weggelassen werden können, wenn alles geht"> 
: VLIST <ok></ok><fl>10B1 357F </fl><fr>10B5 3585 </fr>
  LFA @ BEGIN  <ok></ok><fl>10B5 3585 </fl><fr>10B7 3585 </fr>
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT  <ok></ok><fl>10B7 3585 </fl><fr>10C1 3585 </fr>
    DUP @ WHILE DUP @ + REPEAT <ok></ok><fl>10C1 3585 </fl><fr>10C8 3585 </fr>
  DROP ; <ok></ok><fl>10C8 3585 </fl><fr>10CA 3585 </fr>
 <ok></ok>
: WLIST <ok></ok><fl>10CA 3585 </fl><fr>10CE 358B </fr>
  LFA @ BEGIN ( CR ) DUP . <ok></ok><fl>10CE 358B </fl><fr>10D2 358B </fr>
    DUP 1+ @ OVER 2 + @ TYPE 20 EMIT  <ok></ok><fl>10D2 358B </fl><fr>10DC 358B </fr>
    DUP @ WHILE DUP @ + REPEAT <ok></ok><fl>10DC 358B </fl><fr>10E3 358B </fr>
  DROP <ok></ok><fl>10E3 358B </fl><fr>10E4 358B </fr>
  ; <ok></ok><fl>10E4 358B </fl><fr>10E5 358B </fr>
 <ok></ok>
A003 CONSTANT RETURN <ok></ok><fl>10E5 358B </fl><fr>10EA 3592 </fr>
: REPLACE: ( /name/ )  <ok></ok><fl>10EA 3592 </fl><fr>10EE 359B </fr>
  CSP! ( oo ) <ok></ok><fl>10EE 359B </fl><fr>10EF 359B </fr>
  20 WORD FIND DUP IF  <ok></ok><fl>10EF 359B </fl><fr>10F4 359B </fr>
    LCFA DROP 1+ ( pfa <ok></ok><fl>10F4 359B </fl><fr>10F7 359B </fr>
(    HERE OVER - 1 - JRBIT XSETBT SWAP ! <ok></ok><fl>10F7 359B </fl><fr>10F7 359B </fr>
    HERE SWAP DP ! DUP COMPILE, RETURN , DP ! <ok></ok><fl>10F7 359B </fl><fr>1102 359B </fr>
    1 STAT ! <ok></ok><fl>1102 359B </fl><fr>1105 359B </fr>
    ELSE 2DROP 3 ERROR END_IF ; <ok></ok><fl>1105 359B </fl><fr>110A 359B </fr>
 <ok></ok>
: FORGET ( /name/ ) <ok></ok><fl>110A 359B </fl><fr>110E 35A2 </fr>
  20 WORD FIND IF  <ok></ok><fl>110E 35A2 </fl><fr>1112 35A2 </fr>
    DP ! <ok></ok><fl>1112 35A2 </fl><fr>1114 35A2 </fr>
    HERE DUP @ + LFA ! <ok></ok><fl>1114 35A2 </fl><fr>111A 35A2 </fr>
    HERE 1+ @ BZEIG ! <ok></ok><fl>111A 35A2 </fl><fr>111F 35A2 </fr>
    ELSE DROP ." nicht gefunden " END_IF <ok></ok><fl>111F 35A2 </fl><fr>1124 35B2 </fr>
  ; <ok></ok><fl>1124 35B2 </fl><fr>1125 35B2 </fr>
 <ok></ok>
: FEHLERTEXT ( n --> n ) <ok></ok><fl>1125 35B2 </fl><fr>1129 35BD </fr>
  CR <ok></ok><fl>1129 35BD </fl><fr>112A 35BD </fr>
  DUP 0 = IF ." Division durch Null" END_IF <ok></ok><fl>112A 35BD </fl><fr>1131 35D1 </fr>
  DUP 3 = IF ." Wort nicht definiert" END_IF <ok></ok><fl>1131 35D1 </fl><fr>1138 35E6 </fr>
  DUP 6 = IF ." Eingabezeile zu lang" END_IF <ok></ok><fl>1138 35E6 </fl><fr>113F 35FB </fr>
  DUP 9 = IF ." Strukturfehler in IF END_IF BEGIN UNTIL DO LOOP " END_IF <ok></ok><fl>113F 35FB </fl><fr>1146 362C </fr>
  DUP 12 = IF ." negativer Exponent" END_IF <ok></ok><fl>1146 362C </fl><fr>114D 363F </fr>
  DUP 369 = IF ." Zahlenspeicher voll" END_IF <ok></ok><fl>114D 363F </fl><fr>1154 3653 </fr>
  DUP 1234 = IF ." große ganze Zahlen kompilieren geht momentan nicht, siehe TESTFUERNEUES.TXT" END_IF <ok></ok><fl>1154 3653 </fl><fr>115B 36A0 </fr>
  ; <ok></ok><fl>115B 36A0 </fl><fr>115C 36A0 </fr>
 <ok></ok>
( ganz neu: Steuerungstasten: ^A bis ^G, weiter ^H=^A ^L=^B ... ) <ok></ok>
2F18 8 0 FILL <ok></ok>
: STRG: : HERE 3 - DUP . @ 1+ DUP . @ DUP . 40 - HERE SWAP 7 AND 2F18 + ! ; <ok></ok><fl>115C 36A0 </fl><fr>1177 36A6 </fr>
STRG: ^G 7 EMIT ." /1xPIEP/" ; <ok>1178 36A7 0047 </ok><fl>1177 36A6 </fl><fr>1181 36B2 </fr>
STRG: ^F 7 EMIT ." QUIT" QUIT ; <ok>1182 36B3 0046 </ok><fl>1181 36B2 </fl><fr>118C 36BA </fr>
STRG: ^A ." Angehalten für genau eine Eingabezeile: " <ok>118D 36BB 0041 </ok><fl>118C 36BA </fl><fr>1193 36E7 </fr>
  CR FA00 100 EXPECT INTERPRET ." ok"; <ok></ok><fl>1193 36E7 </fl><fr>119C 36EA </fr>
 <ok></ok>
: QUERY ( adr --> n ) TIB @ 100 EXPECT ; <ok></ok><fl>119C 36EA </fl><fr>11A5 36F0 </fr>
 <ok></ok>
IMMEDIATE: (*REM*)  <ok></ok><fl>11A5 36F0 </fl><fr>11A9 36F8 </fr>
  3C EMIT ." /ok>" <ok></ok><fl>11A9 36F8 </fl><fr>11AE 36FD </fr>
  BEGIN CR QUERY " (*END*)" Z= UNTIL <ok></ok><fl>11AE 36FD </fl><fr>11B5 3705 </fr>
  3C EMIT ." ok>" <ok></ok><fl>11B5 3705 </fl><fr>11BA 3709 </fr>
  ; <ok></ok><fl>11BA 3709 </fl><fr>11BB 3709 </fr>
</sekt> 
 <ok></ok>
<sekt inhalt="Reste, die schon weggelassen sind"> 
(*REM*) <ok></ok>
  RAMP1 VARIABLE RAMP3 ( RAMP3 TIB RAMP1 
: RAMBUF ( /name/  n --> ) 
  MINUS RAMP3 +! RAMP3 @ CONSTANT ; ( oo INDVAR muss da her ) 
 
( - LOOP's - sind aber sehr langsam ) 
: I RP @ 1 + @ ; 
: J RP @ 3 + @ ; 
: K RP @ 5 + @ ; 
: (DO) SWAP R> ROT ROT >R >R >R ; 
: (LOOP) R> R> 1+ DUP R LT IF >R 0  
  ELSE R> DROP DROP -1 END_IF SWAP >R ; 
: (+LOOP) R> R>  ROT DUP  0LT IF + R OVER 
  ELSE + DUP R END_IF LT IF >R 0  
  ELSE R> DROP DROP -1 END_IF SWAP >R  ; 
IMMEDIATE: DO COMPILE (DO) HERE ; 
IMMEDIATE: LOOP COMPILE (LOOP) 0BRANCH, ; 
IMMEDIATE: +LOOP COMPILE (+LOOP) 0BRANCH, ; 
( : LL 0 DO I . LOOP ; 7 LL ( ok geht ) 
 
 
IMMEDIATE: () 0 WORD 2DROP ; 
: B. ( a b --> ) SWAP . . ; 
: 2@ ( adr --> a b ) 
  DUP 1+ @ SWAP @ ; 
: 2! ( a b adr --> ) 
  SWAP OVER ! 1+ ! ; 
: 2? 2@ B. ; 
 
: LDUMP LFA @ HERE OVER - DUMP ; 
 
A012 MCODE D+ 
A013 MCODE D- 
 
 
( - paar Geraeteadressen: ) 
D004 CONSTANT UHR 
D005 CONSTANT SWTI 
D00D CONSTANT UHRL 
2D05 CONSTANT XOFFINPUT 
 
( - "Platinen befestigen und entfernen" ) 
20 RAMBUF TLISTE 
TLISTE VARIABLE TLISTENZEIGER 
: TLISTY  
  TLISTENZEIGER @ TLISTE BEGIN  
    DUP @ CR DUP . 3 - 2@ SWAP TYPE  
    1 + 2DUP = UNTIL 2DROP ; 
 
0 VARIABLE REMOPFA 
0 VARIABLE STATMERK 
0 VARIABLE EXXIUHR 
: EXXI 
  UHRL @ >R 
  STAT @ STATMERK ! 0 STAT ! ( eigentlich >R ) 
  TLISTE 
  BEGIN DUP TLISTENZEIGER @ LT WHILE 
    DUP >R @ EXECUTE R> 1+ REPEAT DROP 
  STATMERK @ STAT !  
  UHRL @ R> - EXXIUHR !  
  ; 
( ' EXXI 6 1+ - 6000 OR 6 ! 
' EXXI 4000 + 16 ! ( CR geht momentan +F9XX ) 
 
: ENTFERNE  
  20 WORD FIND LCFA DROP 1+ 
  ( DUP 0= IF 3 ERROR END_IF ) 
  0 REMOPFA ! 
  TLISTENZEIGER @ TLISTE > IF 
    TLISTENZEIGER @ TLISTE DO 
      DUP I @ = IF 
        1 REMOPFA ! 
        -1 TLISTENZEIGER +! 
        END_IF 
      REMOPFA @ IF 
        I 1+ @ I ! 
        END_IF 
      LOOP END_IF 
  REMOPFA ! 
  ; 
   
: BEFESTIGE ENTFERNE 
  REMOPFA @ TLISTENZEIGER @ ! 
  1 TLISTENZEIGER +!  
  ; 
 
 
: DABS ( h l --> h' l' ) 
  OVER 0LT IF 0 0 2SWAP D- END_IF ; 
 
 
( CASEOFS aus'm PSION: ) 
: CASEOFS ( n  /name/ --> ) 
  DUP RAMBUF 
  0 DO 
    0 I RAMP3 @ + ! 
    LOOP 
  ; 
 
: CASEOF: ( fn en --> ) 
  + HERE DPMERK @ - SWAP ! 
  CSP! 1 STAT ! 
  ; 
 
: CASEOF ( fn en --> ) 
  + @ DUP IF 
    DPMERK @ + EXECUTE 
    ELSE DROP END_IF ; 
 
( - CASE ) 
( : BIT ( i n --> bit ) 
(   2 ROT DUP 0LT IF 99 ERROR ELSE  
(   ^ AND 0= 1 + END_IF ;  
 
: (OF) ( n r i --> f r' ) 
  ROT = DUP ROT OR ; 
: (RANGE-OF) ( n1 n2 r i --> f r' ) 
  DUP >R ROT > ROT R> > OR 0= DUP ROT OR ; 
( : (BIT-OF) ( n r i --> f r' ) 
(   ROT BIT DUP ROT OR ; 
 
IMMEDIATE: CASE ( n --> ) 
  " >R 0 >R"  
  INTERPRET ; 
IMMEDIATE: END_CASE ( --> ) 
  " R> R> 2DROP"  
  INTERPRET ; 
IMMEDIATE: OF ( n --> ) 
  " R> R (OF) >R IF"  
  INTERPRET ;               
IMMEDIATE: RANGE-OF ( n1 n2 --> ) 
  " R> R (RANGE-OF) >R IF"  
  INTERPRET ; 
IMMEDIATE: BIT-OF ( m --> ) 
  " R> R (BIT-OF) >R IF"  
  INTERPRET ; 
IMMEDIATE: ELSEOF ( --> ) 
  " R 0= IF" INTERPRET ; 
IMMEDIATE: END_OF ( --> ) 
  " END_IF" INTERPRET ; 
: ERR ." keine gültige RAM-Adresse" QUIT ; 
' ERR 4000 OR 22 ! 
' ERR 4000 OR 20 ! 
 
IMMEDIATE: /; 0 STAT ! CSP? HERE 1 - @ 800 OR HERE 1 - ! SMUDGE [ SMUDGE ] ;  
( : T 77 88 DROP /;  
( ' T 8 DUMP 
( : W PAUSENBIT ! /; 
( ' W 8 DUMP 
 
 
( Ausgabe von ESCAPE-Sequenzen: sie vertragen sich aber nicht mit xml, besser CSI nehmen ) 
20 WORD: ESC 1B EMIT BEGIN OVER C@ EMIT SWAP 1 + SWAP 1 - DUP 0= UNTIL DROP ; 
ESC ]0;FORTY-FORTH 07 EMIT ( 07 EMIT schließt ] 
: FESTPOSITION ESC [s ESC [1;1H ESC [31m ; ( saveC Pos1,1 redcolor 
: RUCKPOSITION ESC [u ESC [39m ; ( restoreC defaultcolor 
 
( Alternativer Start mit ESCAPE-Sequenzen ) 
 
: QUIT2  
  RP0 @ RP ! 
  BEGIN  
    STAT @ 0= IF ESC [34m ." ok" END_IF CR ESC [39m  
    TIB @ 100 EXPECT ESC [36m INTERPRET  
    AGAIN ; 
 
( REPLACE: QUIT QUIT2 ; 
( QUIT 
 
: QUIT3 
  RP0 @ RP ! 
  BEGIN  
    STAT @ 0= IF ."   " END_IF 
    CR   
    CRBIT @ 2 AND IF 3C EMIT ." /ok>" END_IF 
    CRBIT @ 4 AND IF C2 EMIT 9B EMIT 33 EMIT 36 EMIT 6D EMIT END_IF 
    TIB @ 100 EXPECT  
    CRBIT @ 4 AND IF C2 EMIT 9B EMIT 33 EMIT 39 EMIT 6D EMIT END_IF 
    CRBIT @ 2 AND IF 3C EMIT ." ok>" END_IF 
    INTERPRET 
    AGAIN ; 
 
 
: IOSTART 
  2C40 2C00 DO I @ I ! LOOP 
  2D30 2D14 DO I @ I ! LOOP 
  ; 
IOSTART 
 
( wozu das RBIT war? für relatives CR ) 
: COMPILE, ( adr --> ) 
  RBIT @ IF 4000 ELSE  
    DP @ 1+ - 0FFF AND 3000 END_IF 
    0000 + + , ; 
 
: a*a;;  
  A 2000 111111 FILL 
  B 2000 111111 FILL 
  C 4001 000000 FILL 
  0 2000 A 0 2000 B C SMUL 7 EMIT ; 
(*END*) <ok></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="DEMO"> 
56 89 * . <ok>2E06 </ok>
77 88 + . <ok>00FF </ok>
 <ok></ok>
( aktuelles Vokabular <ok></ok>
 <ok></ok>
VLIST <ok>(*REM*) QUERY ^A ^F ^G STRG: FEHLERTEXT FORGET REPLACE: RETURN WLIST VLIST VANDERMONDEMATRIX INVERTIEREN OBJDUMP OBJ+0 ] [ SPMERK O. H G L OBJ? ZERLEG NB. N. N^ N" NNUMBER NBK NGGT NMOD N/ B+0 A+0 INIT RECHENBLOCK HAUPTRECHNUNG NEBENRECHNUNG BLOCKENDE BLOCKANFANG NB. N. HG0. N/MOD RECURSE N* N- N+ 2OPERANDEN->2SLX SPEICHERHOL OPERAND->SLX SLX->ERGEBNIS SCHIEB SPEICHERENDE ZAHLENSPEICHER ERGEBNIS OPERAND2 OPERAND1 SDIV MOD / /MOD /MOD DIV32 DI32 ADDIER SMUL C B A SUPERMULT MULT_II MULT_I ABS MIN MAX DUMP FILL MOVE VARIABLE RAMP1 DUMPZ NG. LG. ; : COMPILE: IMMEDIATE: (:) (COMPILE:) (IMMEDIATE:) SMUDGE START QUIT INTERPRET CREATE COMPILE, LCFA FIND Z= WORD NUMBER DIGIT EXPECT KEYCODE2 KEY_INT INCR4 ' L7 L6 L5 L4 L3 L2 L1 L0 END_LOCAL LOCAL CSP? CSP! ERROR DISABLE FEHLERTEXT CR ? . H. HG. TYPE DIG SHL16 EMIT KEY EXECUTE , R >R R> +! BYE * > LT = - 1+ C! C@ REPEAT WHILE ELSE END_IF IF UNTIL AGAIN BEGIN 0BRANCH, BRANCH, ALLOT XSETBT JR0BIT JRBIT HERE ." " WORD: (WORD:) Z, B, NOOP 2DROP 2DUP 2OVER 2SWAP DROP ROT DUP OVER SWAP @ ! + OR AND NOT EMITCODE 0LT 0= U* U+ MINUS MCODE (MCODE:) RETURN VERSION LOCALADRESSE DUBIT CSP DPMERK BZEIG BANF LFA STAT DP ERRORNR IN4 IN3 IN2 IN1 TIB BASE CRDP CRBZEIG XOFF JRAMADR IRAMADR RP0 SMUDGEBIT XBIT PC RP SP KEYADR CONSTANT (CONSTANT:) LIT, (LIT,) COMPILE } { ( </ok>
 <ok></ok>
( nochmal mit Speicheradressen, vor jedem Wort steht dessen "Linkfeld"_Adresse=Aufruf_Adresse-4 ) <ok></ok>
 <ok></ok>
WLIST <ok>11A5 (*REM*) 119C QUERY 118C ^A 1181 ^F 1177 ^G 115C STRG: 1125 FEHLERTEXT 110A FORGET 10EA REPLACE: 10E5 RETURN 10CA WLIST 10B1 VLIST 107A VANDERMONDEMATRIX 0FBE INVERTIEREN 0F8B OBJDUMP 0F66 OBJ+0 0F4B ] 0F40 [ 0F3B SPMERK 0F1B O. 0E96 H 0E8F G 0E73 L 0E5B OBJ? 0E50 ZERLEG 0E48 NB. 0E10 N. 0DDF N^ 0DD7 N" 0D4A NNUMBER 0D37 NBK 0D25 NGGT 0D18 NMOD 0D0A N/ 0D01 B+0 0CD5 A+0 0CCA INIT 0CBD RECHENBLOCK 0CB6 HAUPTRECHNUNG 0CAF NEBENRECHNUNG 0CAA BLOCKENDE 0CA5 BLOCKANFANG 0C9D NB. 0C74 N. 0C46 HG0. 0BFE N/MOD 0BF4 RECURSE 0BEC N* 0BE5 N- 0BDD N+ 0BC9 2OPERANDEN->2SLX 0BAC SPEICHERHOL 0B8A OPERAND->SLX 0B4D SLX->ERGEBNIS 0B48 SCHIEB 0B43 SPEICHERENDE 0B3E ZAHLENSPEICHER 0B39 ERGEBNIS 0B34 OPERAND2 0B2F OPERAND1 0A28 SDIV 0A21 MOD 0A19 / 09F7 /MOD 09EE /MOD 09DF DIV32 09D9 DI32 0912 ADDIER 08C9 SMUL 08C4 C 08BF B 08BA A 08AF SUPERMULT 08A9 MULT_II 08A3 MULT_I 089A ABS 0890 MIN 0886 MAX 0874 DUMP 0860 FILL 084A MOVE 083C VARIABLE 0837 RAMP1 07E1 DUMPZ 07D1 NG. 07B7 LG. 07AA ; 07A0 : 0796 COMPILE: 078C IMMEDIATE: 0780 (:) 0779 (COMPILE:) 0772 (IMMEDIATE:) 076A SMUDGE 075F START 0712 QUIT 06C5 INTERPRET 06B0 CREATE 06A7 COMPILE, 069E LCFA 065E FIND 062A Z= 05E4 WORD 0567 NUMBER 053E DIGIT 04D2 EXPECT 04AC KEYCODE2 047D KEY_INT 046A INCR4 045B ' 0452 L7 0449 L6 0440 L5 0437 L4 042E L3 0425 L2 041C L1 0413 L0 0407 END_LOCAL 03F8 LOCAL 03EB CSP? 03E2 CSP! 03BE ERROR 03AD DISABLE 03A8 FEHLERTEXT 0369 CR 0362 ? 035C . 0354 H. 0342 HG. 0331 TYPE 0323 DIG 0319 SHL16 0312 EMIT 0307 KEY 0300 EXECUTE 02F5 , 02EC R 02D5 >R 02C2 R> 02B7 +! 02AE BYE 02A3 * 029C > 028A LT 0283 = 027C - 0275 1+ 026F C! 0269 C@ 0261 REPEAT 025B WHILE 0251 ELSE 0243 END_IF 023A IF 0234 UNTIL 022E AGAIN 0228 BEGIN 021D 0BRANCH, 0212 BRANCH, 020B ALLOT 0200 XSETBT 01FA JR0BIT 01F4 JRBIT 01ED HERE 01E6 ." 01E0 " 01D2 WORD: 01C6 (WORD:) 01AE Z, 01A3 B, 019D NOOP 0197 2DROP 0191 2DUP 018B 2OVER 0185 2SWAP 017F DROP 0179 ROT 0173 DUP 016D OVER 0167 SWAP 0161 @ 015B ! 0155 + 014F OR 0149 AND 0143 NOT 013D EMITCODE 0137 0LT 0131 0= 012B U* 0125 U+ 011F MINUS 0113 MCODE 0106 (MCODE:) 0101 RETURN 00FC VERSION 00F7 LOCALADRESSE 00F2 DUBIT 00ED CSP 00E8 DPMERK 00E3 BZEIG 00DE BANF 00D9 LFA 00D4 STAT 00CF DP 00CA ERRORNR 00C5 IN4 00C0 IN3 00BB IN2 00B6 IN1 00B1 TIB 00AC BASE 00A7 CRDP 00A2 CRBZEIG 009D XOFF 0098 JRAMADR 0093 IRAMADR 008E RP0 0089 SMUDGEBIT 0084 XBIT 007F PC 007A RP 0075 SP 0070 KEYADR 0067 CONSTANT 005C (CONSTANT:) 004D LIT, 0043 (LIT,) 0038 COMPILE 0030 } 0028 { 0020 ( </ok>
 <ok></ok>
( LED's zum Leuchten bringen, also auf Adresse 2D04 ausgeben ) <ok></ok>
 <ok></ok>
2D04 CONSTANT LEDS <ok></ok><fl>11BB 3709 </fl><fr>11C0 370E </fr>
55 LEDS ! <ok></ok>
 <ok></ok>
( erreichte Programmdresse in 0000-1FFF ) <ok></ok>
 <ok></ok>
HERE . <ok>11C0 </ok>
 <ok></ok>
( erreichte Adresse in Textspeicher E000-FFFF ) <ok></ok>
 <ok></ok>
BZEIG ? <ok>370E </ok>
 <ok></ok>
( aktuelle Stapelhoehe ) <ok></ok>
 <ok></ok>
SP ? <ok>0063 </ok>
 <ok></ok>
SP ? <ok>0063 </ok>
 <ok></ok>
( Ein neues Wort definieren ) <ok></ok>
 <ok></ok>
: H ." Hallo Welt " ; <ok></ok><fl>11C0 370E </fl><fr>11C8 371C </fr>
 <ok></ok>
H <ok>Hallo Welt </ok>
 <ok></ok>
( Bedingung IF ) <ok></ok>
 <ok></ok>
: W ( n --> )  <ok></ok><fl>11C8 371C </fl><fr>11CC 371E </fr>
  ." Das ist eine "  <ok></ok><fl>11CC 371E </fl><fr>11CF 372C </fr>
  1 AND IF ." un" END_IF  <ok></ok><fl>11CF 372C </fl><fr>11D5 372F </fr>
  ." gerade Zahl " ;  <ok></ok><fl>11D5 372F </fl><fr>11D9 373C </fr>
 <ok></ok>
7 W <ok>Das ist eine ungerade Zahl </ok>
8 W <ok>Das ist eine gerade Zahl </ok>
 <ok></ok>
( Programmschleifen, die für DO LOOP ist aber momentan stillgelegt. ) <ok></ok>
 <ok></ok>
( : X ( n --> ) <ok></ok>
(   0 DO I . LOOP ; <ok></ok>
( 13 X  <ok></ok>
 <ok></ok>
( oder ) <ok></ok>
 <ok></ok>
: Y ( n --> ) <ok></ok><fl>11D9 373C </fl><fr>11DD 373E </fr>
  0 BEGIN DUP . 1+ 2DUP = UNTIL 2DROP ; <ok></ok><fl>11DD 373E </fl><fr>11E6 373E </fr>
 <ok></ok>
13 Y <ok>0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F 0010 0011 0012 </ok>
 <ok></ok>
( oder ) <ok></ok>
 <ok></ok>
: Z ( n --> ) <ok></ok><fl>11E6 373E </fl><fr>11EA 3740 </fr>
  0 BEGIN 2DUP > WHILE DUP . 1+ REPEAT 2DROP ; <ok></ok><fl>11EA 3740 </fl><fr>11F4 3740 </fr>
 <ok></ok>
13 Z <ok>0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F 0010 0011 0012 </ok>
 <ok></ok>
( alles ab LEDS wieder vergessen ) <ok></ok>
 <ok></ok>
HERE . BZEIG ? <ok>11F4 3740 </ok>
FORGET LEDS <ok></ok><fl>11F4 3740 </fl><fr>11BB 3709 </fr>
HERE . BZEIG ? <ok>11BB 3709 </ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
 <ok></ok>
( Also an der Stelle nach FFINIT1SMUL.TXT hab ich jetzt ) <ok></ok>
( N" ( /number/  -> n        liest bis " eine grosse ganze Zahl ein <ok></ok>
(                            kleine ganze Zahlen wie bisher eingeben <ok></ok>
( N+ N- N* N/ N/MOD NMOD N^  und rechnet damit <ok></ok>
( N.   a -->                 und gibt sie aus <ok></ok>
( NBK  a b --> a' b'         Kürzen <ok></ok>
( NGGT a b --> ggt           groesster gemeinsamer Teiler <ok></ok>
(  <ok></ok>
( also direkt eingeben und mit + - * / rechnen geht hier noch nicht <ok></ok>
 <ok></ok>
 <ok></ok>
( ERGEBNIS ist unpassend gewählter Variablenname,  <ok></ok>
( bezeichnet ab welcher Adresse das nächste Ergebnis gespeichert wird, <ok></ok>
( Platz dafür ist von 1400H bis 1FFFH, aktuell erreicht: ) <ok></ok>
  <ok></ok>
ERGEBNIS ? ( Zahlenspeicher gefuellt bis )  <ok>14E3 </ok>
 <ok></ok>
ZAHLENSPEICHER @ ERGEBNIS ! ( Zahlenspeicher leeren ) <ok></ok>
 <ok></ok>
ERGEBNIS ? <ok>1400 </ok>
 <ok></ok>
N" 111111111111111" DUP N* N. <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
ERGEBNIS ? <ok>140F </ok>
 <ok></ok>
( dritte binomische Formel 10^20-{10^10+1}*{10^10-1}=1 ) <ok></ok>
10 20 N^ 10 10 N^ 1 N- 10 10 N^ 1 N+ N* N- N. <ok>1 </ok>
 <ok></ok>
ERGEBNIS ? <ok>1453 </ok>
 <ok></ok>
 <ok></ok>
( Zahlenbasis wechseln ) <ok></ok>
 <ok></ok>
: HEX 10 BASE ! ; <ok></ok><fl>11BB 3709 </fl><fr>11C3 370D </fr>
: DECIMAL 0A BASE ! ; <ok></ok><fl>11C3 370D </fl><fr>11CB 3715 </fr>
 <ok></ok>
HEX N" 10000" <ok></ok>
DECIMAL DUP N. <ok>65536 </ok>
HEX DUP N. <ok>10000 </ok>
 <ok></ok>
HEX N" 100000000" <ok></ok>
DECIMAL DUP N. <ok>4294967296 </ok>
HEX DUP N. <ok>100000000 </ok>
</sekt> 
 <ok></ok>
<sekt inhalt="in den Zustand für Step_11 bringen und wieder RAM generieren"> 
: NLIT, ( a --> ) DUP 3FFF > OVER C000 LT OR IF 1234 ERROR END_IF , ; <ok></ok><fl>11CB 3715 </fl><fr>11DB 371B </fr>
REPLACE: LIT, NLIT, ;  <ok></ok><fl>11DB 371B </fl><fr>11DD 371B </fr>
REPLACE: NUMBER NNUMBER ; <ok></ok><fl>11DD 371B </fl><fr>11DF 371B </fr>
: M. . ; : M+ + ; : M- - ; : M* * ; : M/ / ; : M/MOD /MOD ; : MMOD MOD ; <ok></ok><fl>11DF 371B </fl><fr>1209 3735 </fr>
: . O. ; : + N+ ; : - N- ; : * N* ; : / N/ ; : /MOD N/MOD : : MOD NMOD ;  <ok></ok><fl>1209 3735 </fl><fr>1231 3744 </fr>
: GGT NGGT ; : BK NBK ; : ^ N^ ; : ? @ . ; <ok></ok><fl>1231 3744 </fl><fr>124A 374F </fr>
 <ok></ok>
( jetzt rechnen auch + - * / mit großen ganzen Zahlen,  <ok></ok>
( allerdings beim Compilieren von großen ganzen Zahlen im Moment noch 1234 ERROR <ok></ok>
 <ok></ok>
 <ok></ok>
111111111111111 DUP * . <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
( an der Stelle Programm-VHDL-Quelltext für Step_11 ausgeben ) <ok></ok>
HEX INIT  <ok></ok>
HERE 0 0 DUMPZ           ( generiert progRAM für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"4010",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 0000-000F 
  x"4763",x"A003",x"4481",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"4000",x"A003",x"0010",x"A003", -- 0010-001F 
  x"0000",x"3000",x"0001",x"4776",x"0029",x"45E8",x"B200",x"A003",x"FFF8",x"3002",x"0001",x"4776",x"0000",x"2F10",x"A009",x"A003", -- 0020-002F 
  x"FFF8",x"3004",x"0001",x"4784",x"0001",x"2F10",x"A009",x"A003",x"FFF8",x"3006",x"0007",x"4776",x"0020",x"45E8",x"4662",x"46A2", -- 0030-003F 
  x"B300",x"46AB",x"A003",x"FFF5",x"300E",x"0006",x"477D",x"42C6",x"B501",x"4279",x"42D9",x"A00A",x"A003",x"FFF6",x"3015",x"0004", -- 0040-004F 
  x"4784",x"51DB",x"A003",x"42A0",x"B502",x"C000",x"428E",x"A00E",x"9001",x"4046",x"42F9",x"A003",x"FFF1",x"301A",x"000B",x"477D", -- 0050-005F 
  x"42C6",x"A00A",x"2F10",x"A00A",x"9001",x"4051",x"A003",x"FFF5",x"3026",x"0008",x"4784",x"46B4",x"405F",x"42F9",x"476E",x"A003", -- 0060-006F 
  x"FFF7",x"302F",x"0006",x"4060",x"2800",x"FFFB",x"3036",x"0002",x"4060",x"2801",x"FFFB",x"3039",x"0002",x"4060",x"2802",x"FFFB", -- 0070-007F 
  x"303C",x"0002",x"4060",x"2803",x"FFFB",x"303F",x"0004",x"4060",x"2F00",x"FFFB",x"3044",x"0009",x"4060",x"2F01",x"FFFB",x"304E", -- 0080-008F 
  x"0003",x"4060",x"2F02",x"FFFB",x"3052",x"0007",x"4060",x"2F03",x"FFFB",x"305A",x"0007",x"4060",x"2F04",x"FFFB",x"3062",x"0004", -- 0090-009F 
  x"4060",x"2F05",x"FFFB",x"3067",x"0007",x"4060",x"2F06",x"FFFB",x"306F",x"0004",x"4060",x"2F07",x"FFFB",x"3074",x"0004",x"4060", -- 00A0-00AF 
  x"2F08",x"FFFB",x"3079",x"0003",x"4060",x"2F09",x"FFFB",x"307D",x"0003",x"4060",x"2F0A",x"FFFB",x"3081",x"0003",x"4060",x"2F0B", -- 00B0-00BF 
  x"FFFB",x"3085",x"0003",x"4060",x"2F0C",x"FFFB",x"3089",x"0003",x"4060",x"2F0D",x"FFFB",x"308D",x"0007",x"4060",x"2F0E",x"FFFB", -- 00C0-00CF 
  x"3095",x"0002",x"4060",x"2F0F",x"FFFB",x"3098",x"0004",x"4060",x"2F10",x"FFFB",x"309D",x"0003",x"4060",x"2F11",x"FFFB",x"30A1", -- 00D0-00DF 
  x"0004",x"4060",x"2F12",x"FFFB",x"30A6",x"0005",x"4060",x"2F13",x"FFFB",x"30AC",x"0006",x"4060",x"2F14",x"FFFB",x"30B3",x"0003", -- 00E0-00EF 
  x"4060",x"2F15",x"FFFB",x"30B7",x"0005",x"4060",x"2F16",x"FFFB",x"30BD",x"000C",x"4060",x"2F17",x"FFFB",x"30CA",x"0007",x"4060", -- 00F0-00FF 
  x"01BE",x"FFFB",x"30D2",x"0006",x"4060",x"A003",x"FFFB",x"30D9",x"0008",x"477D",x"42C6",x"2F10",x"A00A",x"9003",x"A00A",x"42F9", -- 0100-010F 
  x"8001",x"4304",x"A003",x"FFF3",x"30E2",x"0005",x"4784",x"46B4",x"4109",x"42F9",x"4047",x"A003",x"42F9",x"476E",x"A003",x"FFF4", -- 0110-011F 
  x"30E8",x"0005",x"410A",x"A000",x"A003",x"FFFA",x"30EE",x"0002",x"410A",x"A001",x"A003",x"FFFA",x"30F1",x"0002",x"410A",x"A002", -- 0120-012F 
  x"A003",x"FFFA",x"30F4",x"0002",x"410A",x"A00D",x"A003",x"FFFA",x"30F7",x"0003",x"410A",x"A00F",x"A003",x"FFFA",x"30FB",x"0008", -- 0130-013F 
  x"410A",x"A005",x"A003",x"FFFA",x"3104",x"0003",x"410A",x"A00B",x"A003",x"FFFA",x"3108",x"0003",x"410A",x"A008",x"A003",x"FFFA", -- 0140-014F 
  x"310C",x"0002",x"410A",x"A00E",x"A003",x"FFFA",x"310F",x"0001",x"410A",x"A007",x"A003",x"FFFA",x"3111",x"0001",x"410A",x"A009", -- 0150-015F 
  x"A003",x"FFFA",x"3113",x"0001",x"410A",x"A00A",x"A003",x"FFFA",x"3115",x"0004",x"410A",x"B412",x"A003",x"FFFA",x"311A",x"0004", -- 0160-016F 
  x"410A",x"B502",x"A003",x"FFFA",x"311F",x"0003",x"410A",x"B501",x"A003",x"FFFA",x"3123",x"0003",x"410A",x"B434",x"A003",x"FFFA", -- 0170-017F 
  x"3127",x"0004",x"410A",x"B300",x"A003",x"FFFA",x"312C",x"0005",x"410A",x"B43C",x"A003",x"FFFA",x"3132",x"0005",x"410A",x"B60C", -- 0180-018F 
  x"A003",x"FFFA",x"3138",x"0004",x"410A",x"B603",x"A003",x"FFFA",x"313D",x"0005",x"410A",x"B200",x"A003",x"FFFA",x"3143",x"0004", -- 0190-019F 
  x"410A",x"8000",x"A003",x"FFFA",x"3148",x"0002",x"4784",x"2F13",x"A00A",x"A009",x"0001",x"2F13",x"42BB",x"A003",x"FFF5",x"314B", -- 01A0-01AF 
  x"0002",x"4784",x"2F13",x"A00A",x"4051",x"B501",x"42F9",x"B412",x"B501",x"A00A",x"41A7",x"4279",x"B412",x"0001",x"4280",x"B501", -- 01B0-01BF 
  x"A00D",x"9FF5",x"B200",x"0020",x"41A7",x"A003",x"FFE8",x"314E",x"0007",x"477D",x"45E8",x"2F10",x"A00A",x"9003",x"41B2",x"42C6", -- 01C0-01CF 
  x"46AB",x"A003",x"FFF4",x"3156",x"0005",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"42F9",x"41C9",x"FFFF",x"2F15",x"42BB",x"A003", -- 01D0-01DF 
  x"FFF2",x"315C",x"0001",x"0022",x"41CA",x"A003",x"FFFA",x"315E",x"0002",x"0022",x"41CA",x"4335",x"A003",x"FFF9",x"3161",x"0004", -- 01E0-01EF 
  x"4784",x"2F0F",x"A00A",x"A003",x"FFF9",x"3166",x"0005",x"4784",x"0008",x"A003",x"FFFA",x"316C",x"0006",x"4784",x"0009",x"A003", -- 01F0-01FF 
  x"FFFA",x"3173",x"0006",x"4784",x"1000",x"42A7",x"B412",x"0FFF",x"A008",x"A00E",x"A003",x"FFF5",x"317A",x"0005",x"4784",x"2F0F", -- 0200-020F 
  x"42BB",x"A003",x"FFF9",x"3180",x"0007",x"4784",x"41F1",x"4279",x"4280",x"41F8",x"4204",x"42F9",x"A003",x"FFF5",x"3188",x"0008", -- 0210-021F 
  x"4784",x"41F1",x"4279",x"4280",x"41FE",x"4204",x"42F9",x"A003",x"FFF5",x"3191",x"0005",x"4776",x"41F1",x"A003",x"FFFA",x"3197", -- 0220-022F 
  x"0005",x"4776",x"4216",x"A003",x"FFFA",x"319D",x"0005",x"4776",x"4221",x"A003",x"FFFA",x"31A3",x"0002",x"4776",x"41FE",x"0001", -- 0230-023F 
  x"420F",x"41F1",x"A003",x"FFF7",x"31A6",x"0006",x"4776",x"41F1",x"B502",x"4280",x"B434",x"4204",x"B412",x"0001",x"4280",x"A009", -- 0240-024F 
  x"A003",x"FFF2",x"31AD",x"0004",x"4776",x"0001",x"420F",x"4246",x"41F8",x"41F1",x"A003",x"FFF6",x"31B2",x"0005",x"4776",x"423D", -- 0250-025F 
  x"A003",x"FFFA",x"31B8",x"0006",x"4776",x"B434",x"4231",x"4246",x"A003",x"FFF8",x"31BF",x"0002",x"4784",x"A00A",x"A003",x"FFFA", -- 0260-026F 
  x"31C2",x"0002",x"4784",x"A009",x"A003",x"FFFA",x"31C5",x"0002",x"4784",x"0001",x"A007",x"A003",x"FFF9",x"31C8",x"0001",x"4784", -- 0270-027F 
  x"A000",x"A007",x"A003",x"FFF9",x"31CA",x"0001",x"4784",x"4280",x"A00D",x"A003",x"FFF9",x"31CC",x"0002",x"4784",x"4047",x"8000", -- 0280-028F 
  x"A007",x"B412",x"A00B",x"4047",x"8000",x"A007",x"0000",x"A001",x"B300",x"A00D",x"A00B",x"A003",x"FFEE",x"31CF",x"0001",x"4784", -- 0290-029F 
  x"B412",x"428E",x"A003",x"FFF9",x"31D1",x"0001",x"4784",x"0000",x"B434",x"B434",x"A002",x"B412",x"B300",x"A003",x"FFF5",x"31D3", -- 02A0-02AF 
  x"0003",x"4784",x"31D7",x"0004",x"41EB",x"8FFC",x"A003",x"FFF7",x"31DC",x"0002",x"4784",x"B412",x"B502",x"A00A",x"A007",x"B412", -- 02B0-02BF 
  x"A009",x"A003",x"FFF5",x"31DF",x"0002",x"4784",x"2802",x"A00A",x"4279",x"A00A",x"2802",x"A00A",x"4279",x"2802",x"B603",x"A00A", -- 02C0-02CF 
  x"A00A",x"B412",x"A009",x"A009",x"A003",x"FFED",x"31E2",x"0002",x"4784",x"2802",x"A00A",x"B501",x"FFFF",x"A007",x"2802",x"B603", -- 02D0-02DF 
  x"A00A",x"A00A",x"B412",x"B501",x"FFFF",x"A007",x"2802",x"A009",x"A009",x"A009",x"A009",x"A003",x"FFE9",x"31E5",x"0001",x"4784", -- 02E0-02EF 
  x"2802",x"A00A",x"4279",x"A00A",x"A003",x"FFF7",x"31E7",x"0001",x"4784",x"2F0F",x"A00A",x"A009",x"0001",x"2F0F",x"42BB",x"A003", -- 02F0-02FF 
  x"FFF5",x"31E9",x"0007",x"4784",x"2803",x"A009",x"A003",x"FFF9",x"31F1",x"0003",x"4784",x"8000",x"44B0",x"A00B",x"9002",x"B300", -- 0300-030F 
  x"8FFA",x"A003",x"FFF5",x"31F5",x"0004",x"4784",x"0141",x"4304",x"A003",x"FFF9",x"31FA",x"0005",x"4784",x"0000",x"B412",x"0010", -- 0310-031F 
  x"A002",x"B412",x"A003",x"FFF6",x"3200",x"0003",x"4784",x"B501",x"000A",x"428E",x"9001",x"8002",x"0007",x"A007",x"0030",x"A007", -- 0320-032F 
  x"A003",x"FFF2",x"3204",x"0004",x"4784",x"B501",x"9009",x"B412",x"B501",x"426D",x"4316",x"4279",x"B412",x"0001",x"4280",x"8FF5", -- 0330-033F 
  x"B200",x"A003",x"FFEF",x"3209",x"0003",x"4784",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D", -- 0340-034F 
  x"4327",x"4316",x"B300",x"A003",x"FFEE",x"320D",x"0002",x"4784",x"4346",x"0020",x"4316",x"A003",x"FFF8",x"3210",x"0001",x"4784", -- 0350-035F 
  x"4358",x"A003",x"FFFA",x"3212",x"0001",x"4784",x"A00A",x"4360",x"A003",x"FFF9",x"3214",x"0002",x"4784",x"2F07",x"A00A",x"2F0F", -- 0360-036F 
  x"A00A",x"4280",x"2F10",x"A00A",x"A00D",x"A00B",x"A00E",x"2F00",x"A00A",x"A00D",x"A00B",x"A008",x"9028",x"003C",x"4316",x"3217", -- 0370-037F 
  x"0003",x"41EB",x"2F07",x"A00A",x"4360",x"2F06",x"A00A",x"4360",x"003C",x"4316",x"321B",x"0004",x"41EB",x"003C",x"4316",x"3220", -- 0380-038F 
  x"0003",x"41EB",x"2F0F",x"A00A",x"4360",x"2F13",x"A00A",x"4360",x"003C",x"4316",x"3224",x"0004",x"41EB",x"2F0F",x"A00A",x"2F07", -- 0390-039F 
  x"A009",x"2F13",x"A00A",x"2F06",x"A009",x"000A",x"4316",x"A003",x"FFC1",x"3229",x"000A",x"4784",x"A003",x"FFFB",x"3234",x"0007", -- 03A0-03AF 
  x"4784",x"436D",x"323C",x"0019",x"41EB",x"0020",x"4316",x"0008",x"4316",x"430B",x"001B",x"4287",x"9FF8",x"A003",x"FFEF",x"3256", -- 03B0-03BF 
  x"0005",x"4784",x"B501",x"2F0E",x"A009",x"0000",x"2F10",x"A009",x"436D",x"2F0A",x"A00A",x"2F0C",x"A00A",x"2F0A",x"A00A",x"4280", -- 03C0-03CF 
  x"0001",x"4280",x"4335",x"325C",x"0003",x"41EB",x"3260",x"000A",x"41E5",x"46C9",x"436D",x"326B",x"0016",x"41EB",x"4360",x"43B1", -- 03D0-03DF 
  x"4716",x"A003",x"FFDC",x"3282",x"0004",x"4784",x"2801",x"A00A",x"2F15",x"A009",x"A003",x"FFF7",x"3287",x"0004",x"4784",x"2801", -- 03E0-03EF 
  x"A00A",x"2F15",x"A00A",x"4280",x"9002",x"0009",x"43C2",x"A003",x"FFF3",x"328C",x"0005",x"4784",x"0001",x"A007",x"2F17",x"A00A", -- 03F0-03FF 
  x"B502",x"4280",x"B501",x"2F17",x"A009",x"A009",x"A003",x"FFF1",x"3292",x"0009",x"4784",x"2F17",x"A00A",x"B501",x"A00A",x"A007", -- 0400-040F 
  x"2F17",x"A009",x"A003",x"FFF4",x"329C",x"0002",x"4784",x"2F17",x"A00A",x"0001",x"A007",x"A003",x"FFF7",x"329F",x"0002",x"4784", -- 0410-041F 
  x"2F17",x"A00A",x"0002",x"A007",x"A003",x"FFF7",x"32A2",x"0002",x"4784",x"2F17",x"A00A",x"0003",x"A007",x"A003",x"FFF7",x"32A5", -- 0420-042F 
  x"0002",x"4784",x"2F17",x"A00A",x"0004",x"A007",x"A003",x"FFF7",x"32A8",x"0002",x"4784",x"2F17",x"A00A",x"0005",x"A007",x"A003", -- 0430-043F 
  x"FFF7",x"32AB",x"0002",x"4784",x"2F17",x"A00A",x"0006",x"A007",x"A003",x"FFF7",x"32AE",x"0002",x"4784",x"2F17",x"A00A",x"0007", -- 0440-044F 
  x"A007",x"A003",x"FFF7",x"32B1",x"0002",x"4784",x"2F17",x"A00A",x"0008",x"A007",x"A003",x"FFF7",x"32B4",x"0001",x"4776",x"0020", -- 0450-045F 
  x"45E8",x"4662",x"46A2",x"B300",x"4279",x"2F10",x"A00A",x"9001",x"4051",x"A003",x"FFF1",x"32B6",x"0005",x"4784",x"B501",x"A00A", -- 0460-046F 
  x"0001",x"A007",x"B501",x"03FF",x"A008",x"0000",x"4287",x"9002",x"0400",x"4280",x"B412",x"A009",x"A003",x"FFED",x"32BC",x"0007", -- 0470-047F 
  x"4784",x"2800",x"A00A",x"B501",x"0008",x"428E",x"9009",x"0018",x"A007",x"A00A",x"B501",x"9002",x"B501",x"4304",x"B300",x"8018", -- 0480-048F 
  x"2F03",x"A00A",x"A009",x"2F03",x"446E",x"2F03",x"A00A",x"2F04",x"A00A",x"4280",x"03FF",x"A008",x"0080",x"42A0",x"9009",x"2F05", -- 0490-049F 
  x"A00A",x"A00D",x"9005",x"FFFF",x"2F05",x"A009",x"0013",x"4316",x"0000",x"2800",x"A009",x"A003",x"FFD1",x"32C4",x"0008",x"4784", -- 04A0-04AF 
  x"2F04",x"A00A",x"2F03",x"A00A",x"4287",x"9003",x"0000",x"0000",x"8018",x"2F04",x"A00A",x"A00A",x"FFFF",x"2F04",x"446E",x"2F03", -- 04B0-04BF 
  x"A00A",x"2F04",x"A00A",x"4280",x"03FF",x"A008",x"0020",x"428E",x"9008",x"2F05",x"A00A",x"9005",x"0000",x"2F05",x"A009",x"0011", -- 04C0-04CF 
  x"4316",x"A003",x"FFDA",x"32CD",x"0006",x"4784",x"0005",x"43FC",x"4429",x"A009",x"4420",x"A009",x"4420",x"A00A",x"443B",x"A009", -- 04D0-04DF 
  x"430B",x"B501",x"0014",x"4287",x"9004",x"B300",x"4420",x"A00A",x"426D",x"B501",x"007F",x"4287",x"9002",x"B300",x"0008",x"B501", -- 04E0-04EF 
  x"0008",x"4287",x"9012",x"443B",x"A00A",x"4420",x"A00A",x"428E",x"900C",x"FFFF",x"4420",x"42BB",x"0001",x"4429",x"42BB",x"0008", -- 04F0-04FF 
  x"4316",x"0020",x"4316",x"0008",x"4316",x"B501",x"0020",x"428E",x"9001",x"8012",x"FFFF",x"4429",x"42BB",x"4429",x"A00A",x"A00F", -- 0500-050F 
  x"9002",x"0006",x"43C2",x"B501",x"4316",x"B501",x"4420",x"A00A",x"4273",x"0001",x"4420",x"42BB",x"B501",x"0020",x"428E",x"B502", -- 0510-051F 
  x"0008",x"4287",x"A00B",x"A008",x"B412",x"001B",x"4287",x"A00B",x"A008",x"4429",x"A00A",x"A00D",x"A00E",x"9FB2",x"0020",x"4316", -- 0520-052F 
  x"443B",x"A00A",x"4420",x"A00A",x"443B",x"A00A",x"4280",x"B603",x"A007",x"0000",x"B412",x"4273",x"440B",x"A003",x"FF94",x"32D4", -- 0530-053F 
  x"0005",x"4784",x"B501",x"0030",x"428E",x"A00B",x"B502",x"003A",x"428E",x"A008",x"B502",x"0041",x"428E",x"A00B",x"A00E",x"B501", -- 0540-054F 
  x"9015",x"B412",x"0030",x"4280",x"B501",x"000A",x"428E",x"A00B",x"9002",x"0007",x"4280",x"B501",x"2F08",x"A00A",x"428E",x"A00B", -- 0550-055F 
  x"9004",x"B300",x"B300",x"0000",x"0000",x"B412",x"A003",x"FFD7",x"32DA",x"0006",x"4784",x"51DD",x"A003",x"4420",x"A009",x"4417", -- 0560-056F 
  x"A009",x"0000",x"4420",x"A00A",x"9063",x"B501",x"4429",x"A009",x"0001",x"4444",x"A009",x"FFFF",x"444D",x"A009",x"4417",x"A00A", -- 0570-057F 
  x"4429",x"A00A",x"A007",x"426D",x"002B",x"4287",x"9009",x"4429",x"A00A",x"4279",x"4429",x"A009",x"0000",x"444D",x"A009",x"8016", -- 0580-058F 
  x"4417",x"A00A",x"4429",x"A00A",x"A007",x"426D",x"002D",x"4287",x"900D",x"4429",x"A00A",x"4279",x"4429",x"A009",x"0000",x"444D", -- 0590-059F 
  x"A009",x"4444",x"A00A",x"A000",x"4444",x"A009",x"444D",x"A00A",x"9FD2",x"4429",x"A00A",x"4420",x"A00A",x"428E",x"9029",x"4417", -- 05A0-05AF 
  x"A00A",x"4429",x"A00A",x"A007",x"426D",x"B501",x"9015",x"4542",x"A00B",x"9007",x"B300",x"4420",x"A00A",x"A000",x"4420",x"A009", -- 05B0-05BF 
  x"800A",x"B412",x"2F08",x"A00A",x"42A7",x"A007",x"4429",x"A00A",x"4279",x"4429",x"A009",x"8005",x"B300",x"4429",x"A00A",x"4420", -- 05C0-05CF 
  x"A009",x"4429",x"A00A",x"4420",x"A00A",x"428E",x"A00B",x"9FD7",x"4444",x"A00A",x"A00F",x"9001",x"A000",x"4429",x"A00A",x"4420", -- 05D0-05DF 
  x"A00A",x"4280",x"440B",x"A003",x"FF83",x"32E1",x"0004",x"4784",x"42D9",x"2F0C",x"A00A",x"2F0B",x"A009",x"2F0C",x"A00A",x"426D", -- 05E0-05EF 
  x"42F0",x"4287",x"2F0C",x"A00A",x"2F0D",x"A00A",x"428E",x"A008",x"9004",x"0001",x"2F0C",x"42BB",x"8FF0",x"2F0C",x"A00A",x"2F0B", -- 05F0-05FF 
  x"A009",x"2F0C",x"A00A",x"426D",x"003C",x"4287",x"9004",x"2F0C",x"A00A",x"2F0D",x"A009",x"2F0C",x"A00A",x"426D",x"42F0",x"4287", -- 0600-060F 
  x"A00B",x"2F0C",x"A00A",x"2F0D",x"A00A",x"428E",x"A008",x"9004",x"0001",x"2F0C",x"42BB",x"8FE5",x"2F0B",x"A00A",x"2F0C",x"A00A", -- 0610-061F 
  x"B502",x"4280",x"B501",x"9003",x"0001",x"2F0C",x"42BB",x"42C6",x"B300",x"A003",x"FFBA",x"32E6",x"0002",x"4784",x"42D9",x"B502", -- 0620-062F 
  x"42F0",x"4280",x"9007",x"42C6",x"B300",x"B300",x"B300",x"B300",x"0000",x"8023",x"42C6",x"B300",x"B412",x"0000",x"B603",x"4280", -- 0630-063F 
  x"9016",x"42D9",x"42D9",x"B502",x"426D",x"B502",x"426D",x"4280",x"9004",x"B300",x"B300",x"0000",x"0000",x"B501",x"9004",x"4279", -- 0640-064F 
  x"B412",x"4279",x"B412",x"42C6",x"42C6",x"4279",x"8FE7",x"B200",x"B300",x"9002",x"FFFF",x"8001",x"0000",x"A003",x"FFCC",x"32E9", -- 0650-065F 
  x"0004",x"4784",x"42D9",x"42D9",x"0000",x"2F11",x"A00A",x"2F01",x"A00A",x"9003",x"B501",x"A00A",x"A007",x"B501",x"4279",x"B501", -- 0660-066F 
  x"A00A",x"B412",x"4279",x"A00A",x"42C6",x"42C6",x"B603",x"42D9",x"42D9",x"462E",x"9003",x"B412",x"A00D",x"B412",x"B502",x"A00D", -- 0670-067F 
  x"B502",x"A00A",x"A00D",x"A00B",x"A008",x"B502",x"B501",x"A00A",x"A007",x"2F11",x"A00A",x"4287",x"A00B",x"A008",x"9004",x"B501", -- 0680-068F 
  x"A00A",x"A007",x"8FDA",x"42C6",x"B300",x"42C6",x"B434",x"A00D",x"9004",x"B300",x"B300",x"0000",x"0000",x"A003",x"FFC0",x"32EE", -- 0690-069F 
  x"0004",x"4784",x"B412",x"0003",x"A007",x"B412",x"A003",x"FFF7",x"32F3",x"0008",x"4784",x"4047",x"4000",x"A007",x"42F9",x"A003", -- 06A0-06AF 
  x"FFF7",x"32FC",x"0006",x"4784",x"43E6",x"2F0F",x"A00A",x"2F11",x"A00A",x"B502",x"4280",x"42F9",x"2F11",x"A009",x"0020",x"45E8", -- 06B0-06BF 
  x"41B2",x"0001",x"2F01",x"A009",x"A003",x"FFEB",x"3303",x"0009",x"4784",x"2F0A",x"A00A",x"42D9",x"2F0B",x"A00A",x"42D9",x"2F0C", -- 06C0-06CF 
  x"A00A",x"42D9",x"2F0D",x"A00A",x"42D9",x"B502",x"A007",x"2F0D",x"A009",x"B501",x"2F0A",x"A009",x"B501",x"2F0B",x"A009",x"2F0C", -- 06D0-06DF 
  x"A009",x"0020",x"45E8",x"B501",x"901F",x"B603",x"4662",x"B501",x"9009",x"42D9",x"42D9",x"B200",x"42C6",x"42C6",x"46A2",x"B300", -- 06E0-06EF 
  x"4304",x"8011",x"B200",x"B603",x"456B",x"9005",x"B200",x"B300",x"0003",x"43C2",x"8008",x"B434",x"B300",x"B412",x"B300",x"2F10", -- 06F0-06FF 
  x"A00A",x"9001",x"4051",x"8FDD",x"B200",x"42C6",x"2F0D",x"A009",x"42C6",x"2F0C",x"A009",x"42C6",x"2F0B",x"A009",x"42C6",x"2F0A", -- 0700-070F 
  x"A009",x"A003",x"FFB3",x"330D",x"0004",x"4784",x"2F02",x"A00A",x"2802",x"A009",x"2F00",x"A00A",x"9006",x"003C",x"4316",x"3312", -- 0710-071F 
  x"0004",x"41EB",x"8003",x"3317",x"0002",x"41EB",x"436D",x"2F09",x"A00A",x"0100",x"44D6",x"B502",x"A00A",x"003C",x"4287",x"9002", -- 0720-072F 
  x"B200",x"802B",x"2F00",x"A00A",x"900C",x"003C",x"4316",x"331A",x"0003",x"41EB",x"46C9",x"003C",x"4316",x"331E",x"0004",x"41EB", -- 0730-073F 
  x"801C",x"001B",x"4316",x"005B",x"4316",x"0033",x"4316",x"0036",x"4316",x"006D",x"4316",x"46C9",x"2F10",x"A00A",x"A00D",x"9003", -- 0740-074F 
  x"3323",x"0002",x"41EB",x"001B",x"4316",x"005B",x"4316",x"0033",x"4316",x"0039",x"4316",x"006D",x"4316",x"8FC8",x"A003",x"FFB3", -- 0750-075F 
  x"3326",x"0005",x"4784",x"332C",x"000B",x"41EB",x"436D",x"436D",x"4716",x"A003",x"FFF5",x"3338",x"0006",x"4784",x"0000",x"2F01", -- 0760-076F 
  x"A009",x"A003",x"FFF8",x"333F",x"000C",x"4784",x"42C6",x"42D9",x"A003",x"FFF9",x"334C",x"000A",x"4784",x"42C6",x"46AB",x"A003", -- 0770-077F 
  x"FFF9",x"3357",x"0003",x"4784",x"42C6",x"2F10",x"A00A",x"9002",x"46AB",x"8001",x"42D9",x"A003",x"FFF4",x"335B",x"000A",x"4784", -- 0780-078F 
  x"46B4",x"0001",x"2F10",x"A009",x"4775",x"A003",x"FFF6",x"3366",x"0008",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"477C",x"A003", -- 0790-079F 
  x"FFF6",x"336F",x"0001",x"4784",x"46B4",x"0001",x"2F10",x"A009",x"4783",x"A003",x"FFF6",x"3371",x"0001",x"4776",x"0000",x"2F10", -- 07A0-07AF 
  x"A009",x"43EF",x"4047",x"A003",x"42F9",x"476E",x"A003",x"FFF3",x"3373",x"0003",x"4784",x"2F16",x"A00A",x"9005",x"431D",x"B300", -- 07B0-07BF 
  x"431D",x"B300",x"8006",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"431D",x"4327",x"4316",x"B300", -- 07C0-07CF 
  x"A003",x"FFE6",x"3377",x"0003",x"4784",x"337B",x"0001",x"41EB",x"0022",x"4316",x"47BB",x"0022",x"4316",x"337D",x"0001",x"41EB", -- 07D0-07DF 
  x"A003",x"FFF0",x"337F",x"0005",x"4784",x"2F16",x"A009",x"2F00",x"A00A",x"42D9",x"0000",x"2F00",x"A009",x"3385",x"0008",x"41E5", -- 07E0-07EF 
  x"46C9",x"4047",x"4000",x"A007",x"0010",x"A009",x"436D",x"003C",x"4316",x"338E",x"0006",x"41EB",x"436D",x"3395",x"0002",x"41EB", -- 07F0-07FF 
  x"0000",x"B603",x"A007",x"B501",x"2F03",x"4287",x"9002",x"B300",x"2F04",x"B501",x"2F17",x"4287",x"9005",x"B300",x"2F00",x"2F80", -- 0800-080F 
  x"A009",x"2F80",x"A00A",x"47D5",x"4279",x"B501",x"0010",x"4287",x"9FE8",x"B300",x"3398",x"0004",x"41EB",x"B501",x"4346",x"339D", -- 0810-081F 
  x"0001",x"41EB",x"B501",x"000F",x"A007",x"4360",x"0010",x"A007",x"B603",x"42A0",x"A00B",x"9FD0",x"B200",x"436D",x"003C",x"4316", -- 0820-082F 
  x"339F",x"0007",x"41EB",x"42C6",x"2F00",x"A009",x"A003",x"FFAA",x"33A7",x"0005",x"4060",x"2F20",x"FFFB",x"33AD",x"0008",x"4784", -- 0830-083F 
  x"2F20",x"A00A",x"B501",x"406B",x"B501",x"4279",x"2F20",x"A009",x"A009",x"A003",x"FFF2",x"33B6",x"0004",x"4784",x"B501",x"900D", -- 0840-084F 
  x"42D9",x"B502",x"A00A",x"B502",x"A009",x"B412",x"4279",x"B412",x"4279",x"42C6",x"0001",x"4280",x"8FF1",x"B300",x"B200",x"A003", -- 0850-085F 
  x"FFEA",x"33BB",x"0004",x"4784",x"B434",x"B434",x"B501",x"9009",x"42D9",x"B603",x"A009",x"0001",x"A007",x"42C6",x"0001",x"4280", -- 0860-086F 
  x"8FF5",x"B300",x"B200",x"A003",x"FFEC",x"33C0",x"0004",x"4784",x"B412",x"B501",x"A00A",x"4360",x"0001",x"A007",x"B412",x"0001", -- 0870-087F 
  x"4280",x"B501",x"A00D",x"9FF4",x"B300",x"A003",x"FFEE",x"33C5",x"0003",x"4784",x"B603",x"428E",x"9001",x"B412",x"B300",x"A003", -- 0880-088F 
  x"FFF6",x"33C9",x"0003",x"4784",x"B603",x"42A0",x"9001",x"B412",x"B300",x"A003",x"FFF6",x"33CD",x"0003",x"4784",x"B501",x"A00F", -- 0890-089F 
  x"9001",x"A000",x"A003",x"FFF7",x"33D1",x"0006",x"410A",x"A017",x"A003",x"FFFA",x"33D8",x"0007",x"410A",x"A018",x"A003",x"FFFA", -- 08A0-08AF 
  x"33E0",x"0009",x"4784",x"42D9",x"A017",x"A018",x"9FFD",x"42C6",x"B300",x"A003",x"FFF5",x"33EA",x"0001",x"4060",x"1401",x"FFFB", -- 08B0-08BF 
  x"33EC",x"0001",x"4060",x"1601",x"FFFB",x"33EE",x"0001",x"4060",x"1801",x"FFFB",x"33F0",x"0004",x"4784",x"0007",x"43FC",x"444D", -- 08C0-08CF 
  x"A009",x"4444",x"A009",x"443B",x"A009",x"4432",x"A009",x"4429",x"A009",x"4420",x"A009",x"4417",x"A009",x"4417",x"A00A",x"4432", -- 08D0-08DF 
  x"A00A",x"9001",x"A00B",x"4420",x"A00A",x"443B",x"A00A",x"A007",x"4279",x"444D",x"A00A",x"B502",x"0000",x"4864",x"444D",x"A00A", -- 08E0-08EF 
  x"B501",x"4429",x"A00A",x"4420",x"A00A",x"0000",x"B60C",x"A00A",x"B434",x"B434",x"4444",x"A00A",x"443B",x"A00A",x"48B3",x"B300", -- 08F0-08FF 
  x"A009",x"B300",x"B434",x"0001",x"A007",x"B434",x"0001",x"A007",x"B434",x"FFFF",x"A007",x"B501",x"A00D",x"9FE7",x"B300",x"B200", -- 0900-090F 
  x"440B",x"A003",x"FFB7",x"33F5",x"0006",x"4784",x"0007",x"43FC",x"444D",x"A009",x"4444",x"A009",x"443B",x"A009",x"4432",x"A009", -- 0910-091F 
  x"4429",x"A009",x"4420",x"A009",x"4417",x"A009",x"4417",x"A00A",x"4420",x"A00A",x"443B",x"A00A",x"488A",x"4279",x"444D",x"A00A", -- 0920-092F 
  x"4417",x"A00A",x"4432",x"A00A",x"4287",x"903C",x"0000",x"4420",x"A00A",x"443B",x"A00A",x"488A",x"0000",x"B434",x"B502",x"B501", -- 0930-093F 
  x"4420",x"A00A",x"428E",x"9009",x"4429",x"A00A",x"B501",x"A00A",x"B412",x"4279",x"4429",x"A009",x"8001",x"0000",x"B412",x"443B", -- 0940-094F 
  x"A00A",x"428E",x"9009",x"4444",x"A00A",x"B501",x"A00A",x"B412",x"4279",x"4444",x"A009",x"8001",x"0000",x"A001",x"444D",x"A00A", -- 0950-095F 
  x"B501",x"4279",x"444D",x"A009",x"A009",x"B434",x"B434",x"0001",x"A007",x"B603",x"4280",x"A00D",x"9FD0",x"B200",x"444D",x"A00A", -- 0960-096F 
  x"A009",x"8065",x"B412",x"0001",x"4280",x"B412",x"0001",x"4420",x"A00A",x"443B",x"A00A",x"488A",x"0000",x"B434",x"B502",x"B501", -- 0970-097F 
  x"4420",x"A00A",x"428E",x"9009",x"4429",x"A00A",x"B501",x"A00A",x"B412",x"4279",x"4429",x"A009",x"8001",x"0000",x"B412",x"443B", -- 0980-098F 
  x"A00A",x"428E",x"900A",x"4444",x"A00A",x"B501",x"A00A",x"B412",x"4279",x"4444",x"A009",x"A00B",x"8001",x"FFFF",x"A001",x"444D", -- 0990-099F 
  x"A00A",x"B501",x"4279",x"444D",x"A009",x"A009",x"B434",x"B434",x"0001",x"A007",x"B603",x"4280",x"A00D",x"9FCF",x"B200",x"A00D", -- 09A0-09AF 
  x"9026",x"B501",x"444D",x"A009",x"B434",x"A00B",x"B434",x"B434",x"0001",x"4420",x"A00A",x"443B",x"A00A",x"488A",x"0000",x"B434", -- 09B0-09BF 
  x"0000",x"444D",x"A00A",x"A00A",x"A00B",x"A001",x"444D",x"A00A",x"B501",x"4279",x"444D",x"A009",x"A009",x"B434",x"B434",x"0001", -- 09C0-09CF 
  x"A007",x"B603",x"4280",x"A00D",x"9FEA",x"B200",x"B300",x"440B",x"A003",x"FF39",x"33FC",x"0004",x"410A",x"A014",x"A003",x"FFFA", -- 09D0-09DF 
  x"3401",x"0005",x"4784",x"0010",x"42D9",x"A014",x"42C6",x"0001",x"4280",x"B501",x"A00D",x"9FF8",x"B200",x"A003",x"FFF1",x"3407", -- 09E0-09EF 
  x"0004",x"4784",x"0000",x"B434",x"B434",x"49E3",x"A003",x"FFF7",x"340C",x"0004",x"4784",x"B502",x"A00F",x"9012",x"B412",x"A000", -- 09F0-09FF 
  x"B412",x"B501",x"A00F",x"9006",x"A000",x"49F2",x"B412",x"A000",x"B412",x"8005",x"49F2",x"A000",x"B412",x"A000",x"B412",x"8008", -- 0A00-0A0F 
  x"B501",x"A00F",x"9004",x"A000",x"49F2",x"A000",x"8001",x"49F2",x"A003",x"FFDE",x"3411",x"0001",x"4784",x"49FB",x"B412",x"B300", -- 0A10-0A1F 
  x"A003",x"FFF8",x"3413",x"0003",x"4784",x"49FB",x"B300",x"A003",x"FFF9",x"3417",x"0004",x"4784",x"0007",x"43FC",x"444D",x"A009", -- 0A20-0A2F 
  x"4444",x"A009",x"443B",x"A009",x"4432",x"A009",x"4429",x"A009",x"4420",x"A009",x"4417",x"A009",x"4420",x"A00A",x"443B",x"A00A", -- 0A30-0A3F 
  x"428E",x"900A",x"4417",x"A00A",x"4420",x"A00A",x"4429",x"A00A",x"0000",x"0000",x"0000",x"80E1",x"4420",x"A00A",x"0000",x"4429", -- 0A40-0A4F 
  x"A00A",x"B502",x"A007",x"A00A",x"A00B",x"B502",x"444D",x"A00A",x"A007",x"A009",x"0001",x"A007",x"B603",x"4280",x"A00D",x"9FEF", -- 0A50-0A5F 
  x"B200",x"444D",x"A00A",x"4420",x"A00A",x"A007",x"443B",x"A00A",x"4280",x"4429",x"A009",x"FFFF",x"444D",x"A00A",x"4420",x"A00A", -- 0A60-0A6F 
  x"A007",x"A009",x"0001",x"4420",x"42BB",x"4420",x"A00A",x"443B",x"A00A",x"4280",x"0000",x"4429",x"A00A",x"443B",x"A00A",x"A007", -- 0A70-0A7F 
  x"A00A",x"A00B",x"4429",x"A00A",x"443B",x"A00A",x"A007",x"0001",x"4280",x"A00A",x"A00B",x"4444",x"A00A",x"443B",x"A00A",x"A007", -- 0A80-0A8F 
  x"0001",x"4280",x"A00A",x"49E3",x"B412",x"B300",x"B501",x"4429",x"A00A",x"443B",x"A00A",x"A007",x"4279",x"A009",x"0000",x"4429", -- 0A90-0A9F 
  x"A00A",x"4444",x"A00A",x"443B",x"A00A",x"48B3",x"B200",x"B412",x"B300",x"0000",x"4429",x"A00A",x"443B",x"A00A",x"A007",x"A00A", -- 0AA0-0AAF 
  x"A001",x"4429",x"A00A",x"443B",x"A00A",x"A007",x"A009",x"902C",x"0001",x"443B",x"A00A",x"0000",x"B434",x"B502",x"4429",x"A00A", -- 0AB0-0ABF 
  x"B502",x"A007",x"A00A",x"B412",x"4444",x"A00A",x"A007",x"A00A",x"A00B",x"A001",x"B412",x"42D9",x"B502",x"4429",x"A00A",x"A007", -- 0AC0-0ACF 
  x"A009",x"42C6",x"B434",x"B434",x"0001",x"A007",x"B603",x"4280",x"A00D",x"9FE2",x"B200",x"FFFF",x"4429",x"A00A",x"443B",x"A00A", -- 0AD0-0ADF 
  x"A007",x"4279",x"42BB",x"8FD3",x"FFFF",x"4429",x"42BB",x"0001",x"A007",x"B603",x"4280",x"A00D",x"9F8E",x"B200",x"443B",x"A00A", -- 0AE0-0AEF 
  x"0000",x"444D",x"A00A",x"B502",x"A007",x"A00A",x"A00B",x"B502",x"444D",x"A00A",x"A007",x"A009",x"0001",x"A007",x"B603",x"4280", -- 0AF0-0AFF 
  x"A00D",x"9FEF",x"B200",x"443B",x"A00A",x"444D",x"A00A",x"0001",x"4280",x"A009",x"4420",x"A00A",x"443B",x"A00A",x"4280",x"444D", -- 0B00-0B0F 
  x"A00A",x"443B",x"A00A",x"A007",x"A009",x"4417",x"A00A",x"443B",x"A00A",x"444D",x"A00A",x"4417",x"A00A",x"4432",x"A00A",x"9001", -- 0B10-0B1F 
  x"A00B",x"4420",x"A00A",x"443B",x"A00A",x"4280",x"444D",x"A00A",x"443B",x"A00A",x"A007",x"0001",x"A007",x"440B",x"A003",x"FEF9", -- 0B20-0B2F 
  x"341C",x"0008",x"4060",x"2F21",x"FFFB",x"3425",x"0008",x"4060",x"2F22",x"FFFB",x"342E",x"0008",x"4060",x"2F23",x"FFFB",x"3437", -- 0B30-0B3F 
  x"000E",x"4060",x"2F24",x"FFFB",x"3446",x"000C",x"4060",x"2F25",x"FFFB",x"3453",x"0006",x"4060",x"2F26",x"FFFB",x"345A",x"000D", -- 0B40-0B4F 
  x"4784",x"B502",x"A00D",x"9004",x"B200",x"B300",x"0000",x"8031",x"B603",x"A007",x"0001",x"4280",x"B501",x"A00A",x"A00D",x"A00B", -- 0B50-0B5F 
  x"9FF9",x"0001",x"A007",x"B502",x"488A",x"B603",x"4287",x"9004",x"B200",x"B200",x"0000",x"801D",x"B502",x"4280",x"B502",x"A00A", -- 0B60-0B6F 
  x"C000",x"A008",x"A00D",x"B502",x"0001",x"4287",x"A008",x"9003",x"B300",x"A00A",x"8009",x"B502",x"0001",x"4280",x"A009",x"0001", -- 0B70-0B7F 
  x"4280",x"4047",x"4000",x"A00E",x"B412",x"B300",x"B412",x"9001",x"A000",x"A003",x"FFC3",x"3468",x"000C",x"4784",x"B501",x"A00A", -- 0B80-0B8F 
  x"B501",x"A00F",x"9003",x"A000",x"FFFF",x"8001",x"0000",x"B434",x"B434",x"B501",x"4047",x"4000",x"A008",x"9009",x"B412",x"B300", -- 0B90-0B9F 
  x"3FFF",x"A008",x"B501",x"A00A",x"B412",x"4279",x"8004",x"B502",x"A009",x"0001",x"B412",x"A003",x"FFDE",x"3475",x"000B",x"4784", -- 0BA0-0BAF 
  x"2F23",x"A00A",x"B603",x"A009",x"4279",x"B603",x"A007",x"2F23",x"A009",x"B603",x"B412",x"0000",x"4864",x"B412",x"B300",x"2F23", -- 0BB0-0BBF 
  x"A00A",x"2F25",x"A00A",x"428E",x"A00B",x"9002",x"0369",x"43C2",x"A003",x"FFE3",x"3481",x"0010",x"4784",x"2F22",x"A009",x"2F21", -- 0BC0-0BCF 
  x"A009",x"2F21",x"4B8E",x"B502",x"42D9",x"2F22",x"4B8E",x"B502",x"42C6",x"A007",x"4279",x"4BB0",x"A003",x"FFEC",x"3492",x"0002", -- 0BD0-0BDF 
  x"4784",x"4BCD",x"4916",x"4B51",x"A003",x"FFF8",x"3495",x"0002",x"4784",x"A000",x"4BE1",x"A003",x"FFF9",x"3498",x"0002",x"4784", -- 0BE0-0BEF 
  x"4BCD",x"48CD",x"4B51",x"A003",x"FFF8",x"349B",x"0007",x"4776",x"2F11",x"A00A",x"0004",x"A007",x"46AB",x"A003",x"FFF6",x"34A3", -- 0BF0-0BFF 
  x"0005",x"4784",x"B501",x"A00D",x"9002",x"0000",x"43C2",x"B501",x"2F21",x"A009",x"2F21",x"4B8E",x"B434",x"B300",x"B502",x"A007", -- 0C00-0C0F 
  x"0001",x"4280",x"A00A",x"B412",x"0001",x"42A0",x"9018",x"0001",x"B502",x"A00F",x"A00B",x"9007",x"B412",x"B501",x"A007",x"B412", -- 0C10-0C1F 
  x"B501",x"4BE1",x"8FF5",x"B412",x"B300",x"B501",x"2F26",x"A009",x"B434",x"B502",x"4BF0",x"B434",x"B434",x"4BF0",x"8004",x"B300", -- 0C20-0C2F 
  x"0001",x"2F26",x"A009",x"4BCD",x"4A2C",x"4B51",x"42D9",x"4B51",x"42C6",x"2F26",x"A00A",x"0001",x"4280",x"9007",x"B412",x"2F26", -- 0C30-0C3F 
  x"A00A",x"4C02",x"B412",x"B300",x"B412",x"A003",x"FFB8",x"34A9",x"0004",x"4784",x"0000",x"42D9",x"431D",x"B501",x"9007",x"4327", -- 0C40-0C4F 
  x"4316",x"42C6",x"B300",x"FFFF",x"42D9",x"8001",x"B300",x"431D",x"B501",x"42F0",x"A00E",x"9007",x"4327",x"4316",x"42C6",x"B300", -- 0C50-0C5F 
  x"FFFF",x"42D9",x"8001",x"B300",x"431D",x"B501",x"42F0",x"A00E",x"9003",x"4327",x"4316",x"8001",x"B300",x"431D",x"4327",x"4316", -- 0C60-0C6F 
  x"B300",x"42C6",x"B300",x"A003",x"FFD2",x"34AE",x"0002",x"4784",x"2F21",x"A009",x"2F21",x"4B8E",x"B434",x"9003",x"34B1",x"0001", -- 0C70-0C7F 
  x"41EB",x"B502",x"A007",x"0001",x"4280",x"B501",x"A00A",x"4C4A",x"B412",x"0001",x"4280",x"B412",x"B502",x"900A",x"0001",x"4280", -- 0C80-0C8F 
  x"B501",x"A00A",x"4346",x"B412",x"0001",x"4280",x"B412",x"8FF4",x"B300",x"B300",x"0020",x"4316",x"A003",x"FFD7",x"34B3",x"0003", -- 0C90-0C9F 
  x"4784",x"B412",x"4C78",x"4C78",x"A003",x"FFF8",x"34B7",x"000B",x"4060",x"2F27",x"FFFB",x"34C3",x"0009",x"4060",x"2F28",x"FFFB", -- 0CA0-0CAF 
  x"34CD",x"000D",x"4784",x"2F23",x"A00A",x"A003",x"FFF9",x"34DB",x"000D",x"4784",x"2F23",x"A009",x"A003",x"FFF9",x"34E9",x"000B", -- 0CB0-0CBF 
  x"4784",x"2F28",x"A00A",x"2F27",x"A009",x"2F23",x"A00A",x"2F28",x"A009",x"A003",x"FFF3",x"34F5",x"0004",x"4784",x"2F24",x"A00A", -- 0CC0-0CCF 
  x"2F23",x"A009",x"4CC1",x"4CC1",x"A003",x"FFF5",x"34FA",x"0003",x"4784",x"B501",x"2F21",x"A009",x"2F21",x"4B8E",x"B501",x"2F21", -- 0CD0-0CDF 
  x"4280",x"B300",x"0001",x"901A",x"B502",x"2F23",x"A00A",x"4279",x"B412",x"484E",x"2F23",x"A00A",x"4279",x"B502",x"4279",x"2F23", -- 0CE0-0CEF 
  x"42BB",x"2F23",x"A00A",x"2F25",x"A00A",x"428E",x"A00B",x"9002",x"0369",x"43C2",x"4B51",x"B412",x"B300",x"8002",x"B200",x"B300", -- 0CF0-0CFF 
  x"A003",x"FFD4",x"34FE",x"0003",x"4784",x"B412",x"4CD9",x"B412",x"4CD9",x"A003",x"FFF7",x"3502",x"0002",x"4784",x"4CB3",x"B434", -- 0D00-0D0F 
  x"B434",x"4C02",x"B412",x"B300",x"B412",x"4CBA",x"4CD9",x"A003",x"FFF2",x"3505",x"0004",x"4784",x"4CB3",x"B434",x"B434",x"4C02", -- 0D10-0D1F 
  x"B300",x"B412",x"4CBA",x"4CD9",x"A003",x"FFF3",x"350A",x"0004",x"4784",x"4CB3",x"B434",x"B434",x"B501",x"9004",x"B412",x"B502", -- 0D20-0D2F 
  x"4D1C",x"8FFA",x"B300",x"B412",x"4CBA",x"4CD9",x"A003",x"FFEE",x"350F",x"0003",x"4784",x"4CB3",x"B434",x"B434",x"B603",x"4D29", -- 0D30-0D3F 
  x"B434",x"B502",x"4D0E",x"B434",x"B434",x"4D0E",x"B434",x"4CBA",x"4D05",x"A003",x"FFED",x"3513",x"0007",x"4784",x"4CB3",x"B434", -- 0D40-0D4F 
  x"B434",x"0007",x"43FC",x"4420",x"A009",x"4417",x"A009",x"0000",x"4420",x"A00A",x"9063",x"B501",x"4429",x"A009",x"0001",x"4444", -- 0D50-0D5F 
  x"A009",x"FFFF",x"444D",x"A009",x"4417",x"A00A",x"4429",x"A00A",x"A007",x"426D",x"002B",x"4287",x"9009",x"4429",x"A00A",x"4279", -- 0D60-0D6F 
  x"4429",x"A009",x"0000",x"444D",x"A009",x"8016",x"4417",x"A00A",x"4429",x"A00A",x"A007",x"426D",x"002D",x"4287",x"900D",x"4429", -- 0D70-0D7F 
  x"A00A",x"4279",x"4429",x"A009",x"0000",x"444D",x"A009",x"4444",x"A00A",x"A000",x"4444",x"A009",x"444D",x"A00A",x"9FD2",x"4429", -- 0D80-0D8F 
  x"A00A",x"4420",x"A00A",x"428E",x"9029",x"4417",x"A00A",x"4429",x"A00A",x"A007",x"426D",x"B501",x"9015",x"4542",x"A00B",x"9007", -- 0D90-0D9F 
  x"B300",x"4420",x"A00A",x"A000",x"4420",x"A009",x"800A",x"B412",x"2F08",x"A00A",x"4BF0",x"4BE1",x"4429",x"A00A",x"4279",x"4429", -- 0DA0-0DAF 
  x"A009",x"8005",x"B300",x"4429",x"A00A",x"4420",x"A009",x"4429",x"A00A",x"4420",x"A00A",x"428E",x"A00B",x"9FD7",x"4444",x"A00A", -- 0DB0-0DBF 
  x"A00F",x"9001",x"A000",x"4429",x"A00A",x"4420",x"A00A",x"4280",x"B501",x"9006",x"B300",x"4417",x"A00A",x"4429",x"A00A",x"A007", -- 0DC0-0DCF 
  x"440B",x"B434",x"4CBA",x"B412",x"4CD9",x"B412",x"A003",x"FF73",x"351B",x"0002",x"0022",x"41CA",x"4D4E",x"B300",x"A003",x"FFF8", -- 0DD0-0DDF 
  x"351E",x"0002",x"4784",x"4CB3",x"B434",x"B434",x"0004",x"43FC",x"B501",x"A00F",x"9002",x"0012",x"43C2",x"0002",x"4432",x"A009", -- 0DE0-0DEF 
  x"4429",x"A009",x"4420",x"A009",x"0001",x"4429",x"A00A",x"4432",x"A00A",x"49FB",x"4429",x"A009",x"9003",x"4420",x"A00A",x"4BF0", -- 0DF0-0DFF 
  x"4429",x"A00A",x"9008",x"4420",x"A00A",x"4420",x"A00A",x"4BF0",x"4420",x"A009",x"8FEA",x"440B",x"B412",x"4CBA",x"4CD9",x"A003", -- 0E00-0E0F 
  x"FFCF",x"3521",x"0002",x"4784",x"2F08",x"A00A",x"0010",x"4287",x"9002",x"4C78",x"802C",x"4CB3",x"B412",x"B501",x"A00F",x"9004", -- 0E10-0E1F 
  x"A000",x"3524",x"0001",x"41EB",x"B501",x"A00D",x"9005",x"3526",x"0002",x"41EB",x"B300",x"801A",x"FFFF",x"B412",x"B501",x"9004", -- 0E20-0E2F 
  x"2F08",x"A00A",x"4C02",x"8FFA",x"B300",x"B501",x"A00F",x"A00B",x"900A",x"0030",x"A007",x"B501",x"0039",x"42A0",x"9002",x"0007", -- 0E30-0E3F 
  x"A007",x"4316",x"8FF2",x"0020",x"4316",x"B300",x"4CBA",x"A003",x"FFC8",x"3529",x"0003",x"4784",x"B412",x"4E14",x"4E14",x"A003", -- 0E40-0E4F 
  x"FFF8",x"352D",x"0006",x"4784",x"3FFF",x"A008",x"B501",x"4279",x"B412",x"A00A",x"A003",x"FFF5",x"3534",x"0004",x"4784",x"489E", -- 0E50-0E5F 
  x"B501",x"4047",x"4000",x"428E",x"9003",x"B300",x"0000",x"800A",x"4E54",x"B412",x"B300",x"4047",x"4000",x"428E",x"9002",x"0000", -- 0E60-0E6F 
  x"8001",x"FFFF",x"A003",x"FFE8",x"3539",x"0001",x"4784",x"B502",x"4E5F",x"9011",x"B412",x"4E54",x"3FFF",x"A008",x"B434",x"B603", -- 0E70-0E7F 
  x"42A0",x"9005",x"B412",x"B300",x"A007",x"A00A",x"8003",x"B200",x"B300",x"0000",x"8003",x"9002",x"B300",x"0000",x"A003",x"FFE4", -- 0E80-0E8F 
  x"353B",x"0001",x"4784",x"B603",x"4E77",x"A003",x"FFF9",x"353D",x"0001",x"4784",x"B501",x"42D9",x"B434",x"B434",x"B502",x"4E5F", -- 0E90-0E9F 
  x"A00D",x"B502",x"A00D",x"A008",x"42C6",x"4E5F",x"A00D",x"A008",x"9002",x"B200",x"806F",x"B502",x"4E5F",x"A00D",x"9017",x"B501", -- 0EA0-0EAF 
  x"4279",x"4BB0",x"B434",x"B502",x"A009",x"4047",x"4000",x"B502",x"0001",x"4280",x"42BB",x"B501",x"42D9",x"A007",x"A009",x"42C6", -- 0EB0-0EBF 
  x"0001",x"4280",x"4047",x"4000",x"A007",x"8054",x"B502",x"4E54",x"3FFF",x"A008",x"B434",x"B603",x"42A0",x"9008",x"B412",x"B300", -- 0EC0-0ECF 
  x"B434",x"42D9",x"A007",x"A009",x"42C6",x"801B",x"B501",x"4279",x"4BB0",x"B412",x"42D9",x"B501",x"42D9",x"B412",x"484E",x"B300", -- 0ED0-0EDF 
  x"42C6",x"4047",x"4000",x"B502",x"0001",x"4280",x"42BB",x"B412",x"B502",x"42C6",x"A007",x"A009",x"0001",x"4280",x"4047",x"4000", -- 0EE0-0EEF 
  x"A007",x"4E54",x"3FFF",x"A008",x"B603",x"A007",x"0001",x"4280",x"A00A",x"A00D",x"B502",x"0001",x"42A0",x"A008",x"9003",x"0001", -- 0EF0-0EFF 
  x"4280",x"8FF2",x"B502",x"A00A",x"4E5F",x"A00D",x"B502",x"0001",x"4287",x"A008",x"9003",x"B300",x"A00A",x"800C",x"B412",x"0001", -- 0F00-0F0F 
  x"4280",x"B412",x"4047",x"4000",x"A007",x"B502",x"A009",x"4047",x"4000",x"A007",x"A003",x"FF7B",x"353F",x"0002",x"4784",x"B501", -- 0F10-0F1F 
  x"4E5F",x"9017",x"3542",x"0002",x"41EB",x"4E54",x"3FFF",x"A008",x"B502",x"A007",x"B412",x"B603",x"42A0",x"9006",x"B501",x"A00A", -- 0F20-0F2F 
  x"4F1F",x"0001",x"A007",x"8FF7",x"B200",x"3545",x"0002",x"41EB",x"8001",x"4E14",x"A003",x"FFE0",x"3548",x"0006",x"4060",x"2F29", -- 0F30-0F3F 
  x"FFFB",x"354F",x"0001",x"4784",x"2F29",x"A00A",x"2801",x"A00A",x"2F29",x"A009",x"A003",x"FFF5",x"3551",x"0001",x"4784",x"0000", -- 0F40-0F4F 
  x"2801",x"A00A",x"0001",x"4280",x"2F29",x"A00A",x"4280",x"900A",x"2801",x"A00A",x"0002",x"4280",x"2F29",x"A00A",x"4280",x"B434", -- 0F50-0F5F 
  x"4E9A",x"8FEE",x"B412",x"2F29",x"A009",x"A003",x"FFE5",x"3553",x"0005",x"4784",x"B501",x"4E5F",x"901C",x"B501",x"42D9",x"4E54", -- 0F60-0F6F 
  x"3FFF",x"A008",x"B412",x"B502",x"A007",x"FFFF",x"A007",x"B412",x"B501",x"900C",x"B412",x"B501",x"A00A",x"4F6A",x"B502",x"A009", -- 0F70-0F7F 
  x"FFFF",x"A007",x"B412",x"FFFF",x"A007",x"8FF2",x"B200",x"42C6",x"8001",x"4CD9",x"A003",x"FFDB",x"3559",x"0007",x"4784",x"B501", -- 0F80-0F8F 
  x"4E5F",x"902A",x"4E54",x"3FFF",x"A008",x"B501",x"9023",x"B412",x"436D",x"B502",x"4360",x"B501",x"4360",x"B501",x"A00A",x"B501", -- 0F90-0F9F 
  x"4360",x"B501",x"489E",x"4047",x"4000",x"428E",x"9005",x"FFFF",x"4360",x"FFFF",x"4360",x"8005",x"B501",x"489E",x"4E54",x"4360", -- 0FA0-0FAF 
  x"4360",x"B501",x"4F1F",x"4F8F",x"0001",x"A007",x"B412",x"FFFF",x"A007",x"8FDB",x"B200",x"8001",x"B300",x"A003",x"FFCD",x"3561", -- 0FB0-0FBF 
  x"000B",x"4784",x"0008",x"43FC",x"4CB3",x"4417",x"A009",x"4420",x"A009",x"0001",x"4420",x"A00A",x"4429",x"A009",x"FFFF",x"4429", -- 0FC0-0FCF 
  x"42BB",x"4456",x"A009",x"0000",x"4444",x"A009",x"0000",x"444D",x"A009",x"B501",x"4429",x"A00A",x"4E77",x"4429",x"A00A",x"4E77", -- 0FD0-0FDF 
  x"4420",x"A00A",x"4432",x"A009",x"FFFF",x"4432",x"42BB",x"B502",x"4432",x"A00A",x"4E77",x"4429",x"A00A",x"4E77",x"4444",x"A00A", -- 0FE0-0FEF 
  x"4432",x"A00A",x"B434",x"4E9A",x"4444",x"A009",x"B502",x"4429",x"A00A",x"4E77",x"4432",x"A00A",x"4E77",x"444D",x"A00A",x"4432", -- 0FF0-0FFF 
  x"A00A",x"B434",x"4E9A",x"444D",x"A009",x"4432",x"A00A",x"A00D",x"9FDB",x"4444",x"A00A",x"4429",x"A00A",x"4E77",x"4456",x"A00A", -- 1000-100F 
  x"4BE1",x"4444",x"A00A",x"4429",x"A00A",x"B434",x"4E9A",x"4444",x"A009",x"444D",x"A00A",x"4429",x"A00A",x"4E77",x"4456",x"A00A", -- 1010-101F 
  x"4BE9",x"444D",x"A00A",x"4429",x"A00A",x"B434",x"4E9A",x"444D",x"A009",x"4420",x"A00A",x"4432",x"A009",x"FFFF",x"4432",x"42BB", -- 1020-102F 
  x"B502",x"4432",x"A00A",x"4E77",x"4420",x"A00A",x"443B",x"A009",x"FFFF",x"443B",x"42BB",x"4CB3",x"B434",x"B434",x"B412",x"B502", -- 1030-103F 
  x"443B",x"A00A",x"4E77",x"B502",x"4BF0",x"4444",x"A00A",x"4432",x"A00A",x"4E77",x"444D",x"A00A",x"443B",x"A00A",x"4E77",x"4BF0", -- 1040-104F 
  x"4BE9",x"4456",x"A00A",x"4D0E",x"B43C",x"B412",x"4CBA",x"B412",x"4CD9",x"B412",x"443B",x"A00A",x"B434",x"4E9A",x"443B",x"A00A", -- 1050-105F 
  x"A00D",x"9FD6",x"B434",x"4432",x"A00A",x"B434",x"4E9A",x"B412",x"4432",x"A00A",x"A00D",x"9FC1",x"4CD9",x"4417",x"A00A",x"4CBA", -- 1060-106F 
  x"B412",x"4F6A",x"B412",x"4CD9",x"4429",x"A00A",x"A00D",x"9F56",x"440B",x"A003",x"FF44",x"356D",x"0011",x"4784",x"0003",x"43FC", -- 1070-107F 
  x"4417",x"A009",x"0000",x"4417",x"A00A",x"4420",x"A009",x"4420",x"A00A",x"B501",x"9023",x"0001",x"4280",x"4420",x"A009",x"4420", -- 1080-108F 
  x"A00A",x"4E93",x"4417",x"A00A",x"4429",x"A009",x"4429",x"A00A",x"B501",x"9011",x"0001",x"4280",x"4429",x"A009",x"4429",x"A00A", -- 1090-109F 
  x"4420",x"A00A",x"0001",x"A007",x"4429",x"A00A",x"0001",x"A007",x"4DE3",x"4E9A",x"8FEB",x"B300",x"4E9A",x"8FD9",x"B300",x"440B", -- 10A0-10AF 
  x"A003",x"FFC9",x"357F",x"0005",x"4784",x"2F11",x"A00A",x"B501",x"4279",x"A00A",x"B502",x"0002",x"A007",x"A00A",x"4335",x"0020", -- 10B0-10BF 
  x"4316",x"B501",x"A00A",x"9004",x"B501",x"A00A",x"A007",x"8FEF",x"B300",x"A003",x"FFE7",x"3585",x"0005",x"4784",x"2F11",x"A00A", -- 10C0-10CF 
  x"B501",x"4360",x"B501",x"4279",x"A00A",x"B502",x"0002",x"A007",x"A00A",x"4335",x"0020",x"4316",x"B501",x"A00A",x"9004",x"B501", -- 10D0-10DF 
  x"A00A",x"A007",x"8FED",x"B300",x"A003",x"FFE5",x"358B",x"0006",x"4060",x"A003",x"FFFB",x"3592",x"0008",x"4784",x"43E6",x"0020", -- 10E0-10EF 
  x"45E8",x"4662",x"B501",x"9012",x"46A2",x"B300",x"4279",x"41F1",x"B412",x"2F0F",x"A009",x"B501",x"46AB",x"4047",x"A003",x"42F9", -- 10F0-10FF 
  x"2F0F",x"A009",x"0001",x"2F10",x"A009",x"8003",x"B200",x"0003",x"43C2",x"A003",x"FFE0",x"359B",x"0006",x"4784",x"0020",x"45E8", -- 1100-110F 
  x"4662",x"900E",x"2F0F",x"A009",x"41F1",x"B501",x"A00A",x"A007",x"2F11",x"A009",x"41F1",x"4279",x"A00A",x"2F13",x"A009",x"8004", -- 1110-111F 
  x"B300",x"35A2",x"000F",x"41EB",x"A003",x"FFE5",x"35B2",x"000A",x"4784",x"436D",x"B501",x"0000",x"4287",x"9003",x"35BD",x"0013", -- 1120-112F 
  x"41EB",x"B501",x"0003",x"4287",x"9003",x"35D1",x"0014",x"41EB",x"B501",x"0006",x"4287",x"9003",x"35E6",x"0014",x"41EB",x"B501", -- 1130-113F 
  x"0009",x"4287",x"9003",x"35FB",x"0030",x"41EB",x"B501",x"0012",x"4287",x"9003",x"362C",x"0012",x"41EB",x"B501",x"0369",x"4287", -- 1140-114F 
  x"9003",x"363F",x"0013",x"41EB",x"B501",x"1234",x"4287",x"9003",x"3653",x"004C",x"41EB",x"A003",x"FFC9",x"36A0",x"0005",x"4784", -- 1150-115F 
  x"47A4",x"41F1",x"0003",x"4280",x"B501",x"4360",x"A00A",x"4279",x"B501",x"4360",x"A00A",x"B501",x"4360",x"0040",x"4280",x"41F1", -- 1160-116F 
  x"B412",x"0007",x"A008",x"2F18",x"A007",x"A009",x"A003",x"FFE5",x"36A6",x"0002",x"4784",x"0007",x"4316",x"36A9",x"0008",x"41EB", -- 1170-117F 
  x"A003",x"FFF6",x"36B2",x"0002",x"4784",x"0007",x"4316",x"36B5",x"0004",x"41EB",x"4716",x"A003",x"FFF5",x"36BA",x"0002",x"4784", -- 1180-118F 
  x"36BD",x"0029",x"41EB",x"436D",x"FA00",x"0100",x"44D6",x"46C9",x"36E7",x"0002",x"41EB",x"A003",x"FFF0",x"36EA",x"0005",x"4784", -- 1190-119F 
  x"2F09",x"A00A",x"0100",x"44D6",x"A003",x"FFF7",x"36F0",x"0007",x"4776",x"003C",x"4316",x"36F8",x"0004",x"41EB",x"436D",x"51A0", -- 11A0-11AF 
  x"36FD",x"0007",x"41E5",x"462E",x"9FF9",x"003C",x"4316",x"3705",x"0003",x"41EB",x"A003",x"FFEA",x"3709",x"0003",x"4784",x"0010", -- 11B0-11BF 
  x"2F08",x"A009",x"A003",x"FFF8",x"370D",x"0007",x"4784",x"000A",x"2F08",x"A009",x"A003",x"FFF8",x"3715",x"0005",x"4784",x"B501", -- 11C0-11CF 
  x"3FFF",x"42A0",x"B502",x"C000",x"428E",x"A00E",x"9002",x"1234",x"43C2",x"42F9",x"A003",x"51CF",x"A003",x"4D4E",x"A003",x"FFEC", -- 11D0-11DF 
  x"371B",x"0002",x"4784",x"4360",x"A003",x"FFFA",x"371E",x"0002",x"4784",x"A007",x"A003",x"FFFA",x"3721",x"0002",x"4784",x"4280", -- 11E0-11EF 
  x"A003",x"FFFA",x"3724",x"0002",x"4784",x"42A7",x"A003",x"FFFA",x"3727",x"0002",x"4784",x"4A1D",x"A003",x"FFFA",x"372A",x"0005", -- 11F0-11FF 
  x"4784",x"49FB",x"A003",x"FFFA",x"3730",x"0004",x"4784",x"4A25",x"A003",x"FFFA",x"3735",x"0001",x"4784",x"4F1F",x"A003",x"FFFA", -- 1200-120F 
  x"3737",x"0001",x"4784",x"4BE1",x"A003",x"FFFA",x"3739",x"0001",x"4784",x"4BE9",x"A003",x"FFFA",x"373B",x"0001",x"4784",x"4BF0", -- 1210-121F 
  x"A003",x"FFFA",x"373D",x"0001",x"4784",x"4D0E",x"A003",x"FFFA",x"373F",x"0004",x"4784",x"4C02",x"47A4",x"47A4",x"4A25",x"4D1C", -- 1220-122F 
  x"A003",x"FFF6",x"3744",x"0003",x"4784",x"4D29",x"A003",x"FFFA",x"3748",x"0002",x"4784",x"4D3B",x"A003",x"FFFA",x"374B",x"0001", -- 1230-123F 
  x"4784",x"4DE3",x"A003",x"FFFA",x"374D",x"0001",x"4784",x"A00A",x"520D",x"A003",x"A003",x"FFFA",x"374D",x"0001",x"478C",x"A00A", -- 1240-124F 
</DUMPZ></ok>
BZEIG @ BANF @ -1 DUMPZ  ( generiert byteRAM für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"28",x"20",x"7B",x"20",x"7D",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"20",x"28",x"4C", -- 3000-300F 
  x"49",x"54",x"2C",x"29",x"20",x"4C",x"49",x"54",x"2C",x"20",x"28",x"43",x"4F",x"4E",x"53",x"54", -- 3010-301F 
  x"41",x"4E",x"54",x"3A",x"29",x"20",x"43",x"4F",x"4E",x"53",x"54",x"41",x"4E",x"54",x"20",x"4B", -- 3020-302F 
  x"45",x"59",x"41",x"44",x"52",x"20",x"53",x"50",x"20",x"52",x"50",x"20",x"50",x"43",x"20",x"58", -- 3030-303F 
  x"42",x"49",x"54",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"42",x"49",x"54",x"20",x"52",x"50", -- 3040-304F 
  x"30",x"20",x"49",x"52",x"41",x"4D",x"41",x"44",x"52",x"20",x"4A",x"52",x"41",x"4D",x"41",x"44", -- 3050-305F 
  x"52",x"20",x"58",x"4F",x"46",x"46",x"20",x"43",x"52",x"42",x"5A",x"45",x"49",x"47",x"20",x"43", -- 3060-306F 
  x"52",x"44",x"50",x"20",x"42",x"41",x"53",x"45",x"20",x"54",x"49",x"42",x"20",x"49",x"4E",x"31", -- 3070-307F 
  x"20",x"49",x"4E",x"32",x"20",x"49",x"4E",x"33",x"20",x"49",x"4E",x"34",x"20",x"45",x"52",x"52", -- 3080-308F 
  x"4F",x"52",x"4E",x"52",x"20",x"44",x"50",x"20",x"53",x"54",x"41",x"54",x"20",x"4C",x"46",x"41", -- 3090-309F 
  x"20",x"42",x"41",x"4E",x"46",x"20",x"42",x"5A",x"45",x"49",x"47",x"20",x"44",x"50",x"4D",x"45", -- 30A0-30AF 
  x"52",x"4B",x"20",x"43",x"53",x"50",x"20",x"44",x"55",x"42",x"49",x"54",x"20",x"4C",x"4F",x"43", -- 30B0-30BF 
  x"41",x"4C",x"41",x"44",x"52",x"45",x"53",x"53",x"45",x"20",x"56",x"45",x"52",x"53",x"49",x"4F", -- 30C0-30CF 
  x"4E",x"20",x"52",x"45",x"54",x"55",x"52",x"4E",x"20",x"28",x"4D",x"43",x"4F",x"44",x"45",x"3A", -- 30D0-30DF 
  x"29",x"20",x"4D",x"43",x"4F",x"44",x"45",x"20",x"4D",x"49",x"4E",x"55",x"53",x"20",x"55",x"2B", -- 30E0-30EF 
  x"20",x"55",x"2A",x"20",x"30",x"3D",x"20",x"30",x"4C",x"54",x"20",x"45",x"4D",x"49",x"54",x"43", -- 30F0-30FF 
  x"4F",x"44",x"45",x"20",x"4E",x"4F",x"54",x"20",x"41",x"4E",x"44",x"20",x"4F",x"52",x"20",x"2B", -- 3100-310F 
  x"20",x"21",x"20",x"40",x"20",x"53",x"57",x"41",x"50",x"20",x"4F",x"56",x"45",x"52",x"20",x"44", -- 3110-311F 
  x"55",x"50",x"20",x"52",x"4F",x"54",x"20",x"44",x"52",x"4F",x"50",x"20",x"32",x"53",x"57",x"41", -- 3120-312F 
  x"50",x"20",x"32",x"4F",x"56",x"45",x"52",x"20",x"32",x"44",x"55",x"50",x"20",x"32",x"44",x"52", -- 3130-313F 
  x"4F",x"50",x"20",x"4E",x"4F",x"4F",x"50",x"20",x"42",x"2C",x"20",x"5A",x"2C",x"20",x"28",x"57", -- 3140-314F 
  x"4F",x"52",x"44",x"3A",x"29",x"20",x"57",x"4F",x"52",x"44",x"3A",x"20",x"22",x"20",x"2E",x"22", -- 3150-315F 
  x"20",x"48",x"45",x"52",x"45",x"20",x"4A",x"52",x"42",x"49",x"54",x"20",x"4A",x"52",x"30",x"42", -- 3160-316F 
  x"49",x"54",x"20",x"58",x"53",x"45",x"54",x"42",x"54",x"20",x"41",x"4C",x"4C",x"4F",x"54",x"20", -- 3170-317F 
  x"42",x"52",x"41",x"4E",x"43",x"48",x"2C",x"20",x"30",x"42",x"52",x"41",x"4E",x"43",x"48",x"2C", -- 3180-318F 
  x"20",x"42",x"45",x"47",x"49",x"4E",x"20",x"41",x"47",x"41",x"49",x"4E",x"20",x"55",x"4E",x"54", -- 3190-319F 
  x"49",x"4C",x"20",x"49",x"46",x"20",x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"45",x"4C",x"53", -- 31A0-31AF 
  x"45",x"20",x"57",x"48",x"49",x"4C",x"45",x"20",x"52",x"45",x"50",x"45",x"41",x"54",x"20",x"43", -- 31B0-31BF 
  x"40",x"20",x"43",x"21",x"20",x"31",x"2B",x"20",x"2D",x"20",x"3D",x"20",x"4C",x"54",x"20",x"3E", -- 31C0-31CF 
  x"20",x"2A",x"20",x"42",x"59",x"45",x"20",x"42",x"59",x"45",x"20",x"20",x"2B",x"21",x"20",x"52", -- 31D0-31DF 
  x"3E",x"20",x"3E",x"52",x"20",x"52",x"20",x"2C",x"20",x"45",x"58",x"45",x"43",x"55",x"54",x"45", -- 31E0-31EF 
  x"20",x"4B",x"45",x"59",x"20",x"45",x"4D",x"49",x"54",x"20",x"53",x"48",x"4C",x"31",x"36",x"20", -- 31F0-31FF 
  x"44",x"49",x"47",x"20",x"54",x"59",x"50",x"45",x"20",x"48",x"47",x"2E",x"20",x"48",x"2E",x"20", -- 3200-320F 
  x"2E",x"20",x"3F",x"20",x"43",x"52",x"20",x"66",x"6C",x"3E",x"20",x"2F",x"66",x"6C",x"3E",x"20", -- 3210-321F 
  x"66",x"72",x"3E",x"20",x"2F",x"66",x"72",x"3E",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54", -- 3220-322F 
  x"45",x"58",x"54",x"20",x"44",x"49",x"53",x"41",x"42",x"4C",x"45",x"20",x"77",x"65",x"69",x"74", -- 3230-323F 
  x"65",x"72",x"20",x"6E",x"61",x"63",x"68",x"20",x"54",x"61",x"73",x"74",x"65",x"20",x"45",x"53", -- 3240-324F 
  x"43",x"41",x"50",x"45",x"20",x"20",x"45",x"52",x"52",x"4F",x"52",x"20",x"3F",x"3F",x"3F",x"20", -- 3250-325F 
  x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"45",x"52",x"52",x"4F",x"52", -- 3260-326F 
  x"20",x"2D",x"20",x"46",x"65",x"68",x"6C",x"65",x"72",x"20",x"4E",x"75",x"6D",x"6D",x"65",x"72", -- 3270-327F 
  x"20",x"20",x"43",x"53",x"50",x"21",x"20",x"43",x"53",x"50",x"3F",x"20",x"4C",x"4F",x"43",x"41", -- 3280-328F 
  x"4C",x"20",x"45",x"4E",x"44",x"5F",x"4C",x"4F",x"43",x"41",x"4C",x"20",x"4C",x"30",x"20",x"4C", -- 3290-329F 
  x"31",x"20",x"4C",x"32",x"20",x"4C",x"33",x"20",x"4C",x"34",x"20",x"4C",x"35",x"20",x"4C",x"36", -- 32A0-32AF 
  x"20",x"4C",x"37",x"20",x"27",x"20",x"49",x"4E",x"43",x"52",x"34",x"20",x"4B",x"45",x"59",x"5F", -- 32B0-32BF 
  x"49",x"4E",x"54",x"20",x"4B",x"45",x"59",x"43",x"4F",x"44",x"45",x"32",x"20",x"45",x"58",x"50", -- 32C0-32CF 
  x"45",x"43",x"54",x"20",x"44",x"49",x"47",x"49",x"54",x"20",x"4E",x"55",x"4D",x"42",x"45",x"52", -- 32D0-32DF 
  x"20",x"57",x"4F",x"52",x"44",x"20",x"5A",x"3D",x"20",x"46",x"49",x"4E",x"44",x"20",x"4C",x"43", -- 32E0-32EF 
  x"46",x"41",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"2C",x"20",x"43",x"52",x"45",x"41", -- 32F0-32FF 
  x"54",x"45",x"20",x"49",x"4E",x"54",x"45",x"52",x"50",x"52",x"45",x"54",x"20",x"51",x"55",x"49", -- 3300-330F 
  x"54",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"6F",x"6B",x"3E",x"20",x"2F",x"6F", -- 3310-331F 
  x"6B",x"3E",x"20",x"6F",x"6B",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"46",x"4F",x"52",x"54", -- 3320-332F 
  x"59",x"2D",x"46",x"4F",x"52",x"54",x"48",x"20",x"53",x"4D",x"55",x"44",x"47",x"45",x"20",x"28", -- 3330-333F 
  x"49",x"4D",x"4D",x"45",x"44",x"49",x"41",x"54",x"45",x"3A",x"29",x"20",x"28",x"43",x"4F",x"4D", -- 3340-334F 
  x"50",x"49",x"4C",x"45",x"3A",x"29",x"20",x"28",x"3A",x"29",x"20",x"49",x"4D",x"4D",x"45",x"44", -- 3350-335F 
  x"49",x"41",x"54",x"45",x"3A",x"20",x"43",x"4F",x"4D",x"50",x"49",x"4C",x"45",x"3A",x"20",x"3A", -- 3360-336F 
  x"20",x"3B",x"20",x"4C",x"47",x"2E",x"20",x"4E",x"47",x"2E",x"20",x"78",x"20",x"2C",x"20",x"44", -- 3370-337F 
  x"55",x"4D",x"50",x"5A",x"20",x"27",x"20",x"53",x"54",x"41",x"52",x"54",x"20",x"20",x"44",x"55", -- 3380-338F 
  x"4D",x"50",x"5A",x"3E",x"20",x"20",x"20",x"20",x"20",x"2D",x"2D",x"20",x"20",x"2D",x"20",x"2F", -- 3390-339F 
  x"44",x"55",x"4D",x"50",x"5A",x"3E",x"20",x"52",x"41",x"4D",x"50",x"31",x"20",x"56",x"41",x"52", -- 33A0-33AF 
  x"49",x"41",x"42",x"4C",x"45",x"20",x"4D",x"4F",x"56",x"45",x"20",x"46",x"49",x"4C",x"4C",x"20", -- 33B0-33BF 
  x"44",x"55",x"4D",x"50",x"20",x"4D",x"41",x"58",x"20",x"4D",x"49",x"4E",x"20",x"41",x"42",x"53", -- 33C0-33CF 
  x"20",x"4D",x"55",x"4C",x"54",x"5F",x"49",x"20",x"4D",x"55",x"4C",x"54",x"5F",x"49",x"49",x"20", -- 33D0-33DF 
  x"53",x"55",x"50",x"45",x"52",x"4D",x"55",x"4C",x"54",x"20",x"41",x"20",x"42",x"20",x"43",x"20", -- 33E0-33EF 
  x"53",x"4D",x"55",x"4C",x"20",x"41",x"44",x"44",x"49",x"45",x"52",x"20",x"44",x"49",x"33",x"32", -- 33F0-33FF 
  x"20",x"44",x"49",x"56",x"33",x"32",x"20",x"2F",x"4D",x"4F",x"44",x"20",x"2F",x"4D",x"4F",x"44", -- 3400-340F 
  x"20",x"2F",x"20",x"4D",x"4F",x"44",x"20",x"53",x"44",x"49",x"56",x"20",x"4F",x"50",x"45",x"52", -- 3410-341F 
  x"41",x"4E",x"44",x"31",x"20",x"4F",x"50",x"45",x"52",x"41",x"4E",x"44",x"32",x"20",x"45",x"52", -- 3420-342F 
  x"47",x"45",x"42",x"4E",x"49",x"53",x"20",x"5A",x"41",x"48",x"4C",x"45",x"4E",x"53",x"50",x"45", -- 3430-343F 
  x"49",x"43",x"48",x"45",x"52",x"20",x"53",x"50",x"45",x"49",x"43",x"48",x"45",x"52",x"45",x"4E", -- 3440-344F 
  x"44",x"45",x"20",x"53",x"43",x"48",x"49",x"45",x"42",x"20",x"53",x"4C",x"58",x"2D",x"3E",x"45", -- 3450-345F 
  x"52",x"47",x"45",x"42",x"4E",x"49",x"53",x"20",x"4F",x"50",x"45",x"52",x"41",x"4E",x"44",x"2D", -- 3460-346F 
  x"3E",x"53",x"4C",x"58",x"20",x"53",x"50",x"45",x"49",x"43",x"48",x"45",x"52",x"48",x"4F",x"4C", -- 3470-347F 
  x"20",x"32",x"4F",x"50",x"45",x"52",x"41",x"4E",x"44",x"45",x"4E",x"2D",x"3E",x"32",x"53",x"4C", -- 3480-348F 
  x"58",x"20",x"4E",x"2B",x"20",x"4E",x"2D",x"20",x"4E",x"2A",x"20",x"52",x"45",x"43",x"55",x"52", -- 3490-349F 
  x"53",x"45",x"20",x"4E",x"2F",x"4D",x"4F",x"44",x"20",x"48",x"47",x"30",x"2E",x"20",x"4E",x"2E", -- 34A0-34AF 
  x"20",x"2D",x"20",x"4E",x"42",x"2E",x"20",x"42",x"4C",x"4F",x"43",x"4B",x"41",x"4E",x"46",x"41", -- 34B0-34BF 
  x"4E",x"47",x"20",x"42",x"4C",x"4F",x"43",x"4B",x"45",x"4E",x"44",x"45",x"20",x"4E",x"45",x"42", -- 34C0-34CF 
  x"45",x"4E",x"52",x"45",x"43",x"48",x"4E",x"55",x"4E",x"47",x"20",x"48",x"41",x"55",x"50",x"54", -- 34D0-34DF 
  x"52",x"45",x"43",x"48",x"4E",x"55",x"4E",x"47",x"20",x"52",x"45",x"43",x"48",x"45",x"4E",x"42", -- 34E0-34EF 
  x"4C",x"4F",x"43",x"4B",x"20",x"49",x"4E",x"49",x"54",x"20",x"41",x"2B",x"30",x"20",x"42",x"2B", -- 34F0-34FF 
  x"30",x"20",x"4E",x"2F",x"20",x"4E",x"4D",x"4F",x"44",x"20",x"4E",x"47",x"47",x"54",x"20",x"4E", -- 3500-350F 
  x"42",x"4B",x"20",x"4E",x"4E",x"55",x"4D",x"42",x"45",x"52",x"20",x"4E",x"22",x"20",x"4E",x"5E", -- 3510-351F 
  x"20",x"4E",x"2E",x"20",x"2D",x"20",x"30",x"20",x"20",x"4E",x"42",x"2E",x"20",x"5A",x"45",x"52", -- 3520-352F 
  x"4C",x"45",x"47",x"20",x"4F",x"42",x"4A",x"3F",x"20",x"4C",x"20",x"47",x"20",x"48",x"20",x"4F", -- 3530-353F 
  x"2E",x"20",x"5B",x"20",x"20",x"5D",x"20",x"20",x"53",x"50",x"4D",x"45",x"52",x"4B",x"20",x"5B", -- 3540-354F 
  x"20",x"5D",x"20",x"4F",x"42",x"4A",x"2B",x"30",x"20",x"4F",x"42",x"4A",x"44",x"55",x"4D",x"50", -- 3550-355F 
  x"20",x"49",x"4E",x"56",x"45",x"52",x"54",x"49",x"45",x"52",x"45",x"4E",x"20",x"56",x"41",x"4E", -- 3560-356F 
  x"44",x"45",x"52",x"4D",x"4F",x"4E",x"44",x"45",x"4D",x"41",x"54",x"52",x"49",x"58",x"20",x"56", -- 3570-357F 
  x"4C",x"49",x"53",x"54",x"20",x"57",x"4C",x"49",x"53",x"54",x"20",x"52",x"45",x"54",x"55",x"52", -- 3580-358F 
  x"4E",x"20",x"52",x"45",x"50",x"4C",x"41",x"43",x"45",x"3A",x"20",x"46",x"4F",x"52",x"47",x"45", -- 3590-359F 
  x"54",x"20",x"6E",x"69",x"63",x"68",x"74",x"20",x"67",x"65",x"66",x"75",x"6E",x"64",x"65",x"6E", -- 35A0-35AF 
  x"20",x"20",x"46",x"45",x"48",x"4C",x"45",x"52",x"54",x"45",x"58",x"54",x"20",x"44",x"69",x"76", -- 35B0-35BF 
  x"69",x"73",x"69",x"6F",x"6E",x"20",x"64",x"75",x"72",x"63",x"68",x"20",x"4E",x"75",x"6C",x"6C", -- 35C0-35CF 
  x"20",x"57",x"6F",x"72",x"74",x"20",x"6E",x"69",x"63",x"68",x"74",x"20",x"64",x"65",x"66",x"69", -- 35D0-35DF 
  x"6E",x"69",x"65",x"72",x"74",x"20",x"45",x"69",x"6E",x"67",x"61",x"62",x"65",x"7A",x"65",x"69", -- 35E0-35EF 
  x"6C",x"65",x"20",x"7A",x"75",x"20",x"6C",x"61",x"6E",x"67",x"20",x"53",x"74",x"72",x"75",x"6B", -- 35F0-35FF 
  x"74",x"75",x"72",x"66",x"65",x"68",x"6C",x"65",x"72",x"20",x"69",x"6E",x"20",x"49",x"46",x"20", -- 3600-360F 
  x"45",x"4E",x"44",x"5F",x"49",x"46",x"20",x"42",x"45",x"47",x"49",x"4E",x"20",x"55",x"4E",x"54", -- 3610-361F 
  x"49",x"4C",x"20",x"44",x"4F",x"20",x"4C",x"4F",x"4F",x"50",x"20",x"20",x"6E",x"65",x"67",x"61", -- 3620-362F 
  x"74",x"69",x"76",x"65",x"72",x"20",x"45",x"78",x"70",x"6F",x"6E",x"65",x"6E",x"74",x"20",x"5A", -- 3630-363F 
  x"61",x"68",x"6C",x"65",x"6E",x"73",x"70",x"65",x"69",x"63",x"68",x"65",x"72",x"20",x"76",x"6F", -- 3640-364F 
  x"6C",x"6C",x"20",x"67",x"72",x"6F",x"C3",x"9F",x"65",x"20",x"67",x"61",x"6E",x"7A",x"65",x"20", -- 3650-365F 
  x"5A",x"61",x"68",x"6C",x"65",x"6E",x"20",x"6B",x"6F",x"6D",x"70",x"69",x"6C",x"69",x"65",x"72", -- 3660-366F 
  x"65",x"6E",x"20",x"67",x"65",x"68",x"74",x"20",x"6D",x"6F",x"6D",x"65",x"6E",x"74",x"61",x"6E", -- 3670-367F 
  x"20",x"6E",x"69",x"63",x"68",x"74",x"2C",x"20",x"73",x"69",x"65",x"68",x"65",x"20",x"54",x"45", -- 3680-368F 
  x"53",x"54",x"46",x"55",x"45",x"52",x"4E",x"45",x"55",x"45",x"53",x"2E",x"54",x"58",x"54",x"20", -- 3690-369F 
  x"53",x"54",x"52",x"47",x"3A",x"20",x"5E",x"47",x"20",x"2F",x"31",x"78",x"50",x"49",x"45",x"50", -- 36A0-36AF 
  x"2F",x"20",x"5E",x"46",x"20",x"51",x"55",x"49",x"54",x"20",x"5E",x"41",x"20",x"41",x"6E",x"67", -- 36B0-36BF 
  x"65",x"68",x"61",x"6C",x"74",x"65",x"6E",x"20",x"66",x"C3",x"BC",x"72",x"20",x"67",x"65",x"6E", -- 36C0-36CF 
  x"61",x"75",x"20",x"65",x"69",x"6E",x"65",x"20",x"45",x"69",x"6E",x"67",x"61",x"62",x"65",x"7A", -- 36D0-36DF 
  x"65",x"69",x"6C",x"65",x"3A",x"20",x"20",x"6F",x"6B",x"20",x"51",x"55",x"45",x"52",x"59",x"20", -- 36E0-36EF 
  x"28",x"2A",x"52",x"45",x"4D",x"2A",x"29",x"20",x"2F",x"6F",x"6B",x"3E",x"20",x"28",x"2A",x"45", -- 36F0-36FF 
  x"4E",x"44",x"2A",x"29",x"20",x"6F",x"6B",x"3E",x"20",x"48",x"45",x"58",x"20",x"44",x"45",x"43", -- 3700-370F 
  x"49",x"4D",x"41",x"4C",x"20",x"4E",x"4C",x"49",x"54",x"2C",x"20",x"4D",x"2E",x"20",x"4D",x"2B", -- 3710-371F 
  x"20",x"4D",x"2D",x"20",x"4D",x"2A",x"20",x"4D",x"2F",x"20",x"4D",x"2F",x"4D",x"4F",x"44",x"20", -- 3720-372F 
  x"4D",x"4D",x"4F",x"44",x"20",x"2E",x"20",x"2B",x"20",x"2D",x"20",x"2A",x"20",x"2F",x"20",x"2F", -- 3730-373F 
  x"4D",x"4F",x"44",x"20",x"47",x"47",x"54",x"20",x"42",x"4B",x"20",x"5E",x"20",x"3F",x"20",x"4D", -- 3740-374F 
</DUMPZ></ok>
3000 2C00 0 DUMPZ        ( generiert stapR   für P20_FFP.vhd Step_11 <ok>
<DUMPZ>
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C00-2C0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C10-2C1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C20-2C2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C30-2C3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C40-2C4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C50-2C5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C60-2C6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C70-2C7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C80-2C8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2C90-2C9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CA0-2CAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CB0-2CBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CC0-2CCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CD0-2CDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CE0-2CEF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2CF0-2CFF 
  x"0000",x"0000",x"0000",x"0000",x"0055",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D00-2D0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D10-2D1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D20-2D2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D30-2D3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D40-2D4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D50-2D5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D60-2D6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D70-2D7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D80-2D8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2D90-2D9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DA0-2DAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DB0-2DBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DC0-2DCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DD0-2DDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DE0-2DEF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2DF0-2DFF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E00-2E0F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E10-2E1F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E20-2E2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E30-2E3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E40-2E4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E50-2E5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E60-2E6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E70-2E7F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E80-2E8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2E90-2E9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EA0-2EAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EB0-2EBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2EC0-2ECF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2ED0-2EDF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0008", -- 2EE0-2EEF 
  x"0008",x"0000",x"0001",x"2F22",x"0000",x"0001",x"2F23",x"1410",x"0008",x"3B0A",x"0001",x"0001",x"3B45",x"00BB",x"0001",x"FFFF", -- 2EF0-2EFF 
  x"0000",x"0000",x"3000",x"3D49",x"3D49",x"FFFF",x"374F",x"124A",x"0010",x"3B00",x"3B00",x"3B0C",x"3B12",x"3B45",x"0000",x"124A", -- 2F00-2F0F 
  x"0000",x"1243",x"3000",x"374F",x"0020",x"0065",x"0000",x"2F00",x"0000",x"1190",x"0000",x"0000",x"0000",x"0000",x"1185",x"117B", -- 2F10-2F1F 
  x"2F2A",x"0000",x"0000",x"140C",x"1400",x"2000",x"0001",x"1400",x"1400",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F20-2F2F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F30-2F3F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F40-2F4F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F50-2F5F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F60-2F6F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F70-2F7F 
  x"2F00",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F80-2F8F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2F90-2F9F 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FA0-2FAF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FB0-2FBF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000", -- 2FC0-2FCF 
  x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0000",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301",x"0301", -- 2FD0-2FDF 
  x"0301",x"0301",x"0301",x"0301",x"0446",x"02D5",x"02CD",x"004B",x"02CD",x"02CD",x"02CD",x"02CD",x"02CD",x"0655",x"02CD",x"004B", -- 2FE0-2FEF 
  x"02CD",x"02CD",x"02CD",x"004B",x"0318",x"033F",x"01EC",x"0288",x"080C",x"FFFF",x"06F1",x"3B05",x"3B06",x"3B00",x"3B00",x"073B", -- 2FF0-2FFF 
</DUMPZ></ok>
</sekt> 
 <ok></ok>
<sekt inhalt="noch ein wenig DEMO"> 
111111111111111 DUP * . <ok>123456789ABCDEFEDCBA987654321 </ok>
 <ok></ok>
( jetzt eine Matrix invertieren ) <ok></ok>
 <ok></ok>
DECIMAL <ok></ok>
 <ok></ok>
[ [ 1 1 ^ 1 2 ^ 1 3 ^ 1 1 ^ ] <ok></ok>
  [ 2 1 ^ 2 2 ^ 2 3 ^ 2 4 ^ ] <ok></ok>
  [ 3 1 ^ 3 2 ^ 3 3 ^ 3 4 ^ ] <ok></ok>
  [ 4 1 ^ 4 2 ^ 4 3 ^ 4 4 ^ ] <ok></ok>
  ]  <ok></ok>
DUP . <ok>[ [ 1 1 1 1 ] [ 2 4 8 16 ] [ 3 9 27 81 ] [ 4 16 64 256 ] ] </ok>
4 INVERTIEREN ( mat dim --> invmat nenner ) <ok></ok>
OVER . <ok>[ [ 1152 -864 384 -72 ] [ -1248 1368 -672 132 ] [ 432 -576 336 -72 ] [ -48 72 -48 12 ] ] </ok>
DUP . <ok>288 </ok>
( Ergebnis sollte sein: OVER .      ) <ok></ok>
(      [ [ 1152 -864 384 -72 ]      ) <ok></ok>
(        [ -1248 1368 -672 132 ]    ) <ok></ok>
(        [ 432 -576 336 -72 ]       ) <ok></ok>
(        [ -48 72 -48 12 ] ] ok     ) <ok></ok>
( und gemeinsamer Nenner: DUP . 288 ) <ok></ok>
( neu nach dem Kürzen:        ) <ok></ok>
(      [ [ 96 -72 32 -6 ]     ) <ok></ok>
(        [ -104 114 -56 11 ]  ) <ok></ok>
(        [ 36 -48 28 -6 ]     ) <ok></ok>
(        [ -4 6 -4 1 ] ]      ) <ok></ok>
( und gemeinsamer Nenner: 24  ) <ok></ok>
</sekt> 
</FFINIT2> 
</INIT> 
