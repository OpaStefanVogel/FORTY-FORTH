HEX ( ist noch als einzigstes zur√ºckzustellen zum Programmieren )
0 0 JK-PROC HERE .

: AB " DUP . " 1 ABSCHICKEN ;
: AC ' OBJ_STRUCT_COPY 0 1 ABSCHICKEN ;
: ERG HEX ERGEBNIS ? DECIMAL ;
DECIMAL ERG
( A
0 0 [ [ 1  1 ] [  3  27 ] ] AB ERG       
0 1 [ [ 1  1 ] [  9  81 ] ] AC ERG
1 0 [ [ 2  8 ] [  4  64 ] ] AC ERG 
1 1 [ [ 4 16 ] [ 16 256 ] ] AC ERG 
: AB " DUP . " 1 ABSCHICKEN ;
: AC ' OBJ_STRUCT_COPY 0 1 ABSCHICKEN ;
DECIMAL
( A
0 0 [ [ 1  1 ] [  3  27 ] ] AB     
0 1 [ [ 1  1 ] [  9  81 ] ] AC
1 0 [ [ 2  8 ] [  4  64 ] ] AC
1 1 [ [ 4 16 ] [ 16 256 ] ] AC
( gx
0 0 1 AB
0 1 1 AB
1 0 1 AB
1 1 1 AB
( x
0 0 1 AB
0 1 1 AB
1 0 1 AB
1 1 1 AB
( Y
0 0 [ 2 3 ] AC
0 1 [ 2 3 ] AC
1 0 [ 2 4 ] AC
1 1 [ 2 4 ] AC
( Z
0 0 [ 0 1 ] " [A*x-Y*Z]/gx OVER . DUP ." 1 ABSCHICKEN
0 1 [ 1 1 ] " [A*x-Y*Z]/gx OVER . DUP ." 1 ABSCHICKEN
1 0 [ 0 1 ] " [A*x-Y*Z]/gx OVER . DUP ." 1 ABSCHICKEN  
1 1 [ 1 1 ] " [A*x-Y*Z]/gx OVER . DUP ." 1 ABSCHICKEN

0 1 [ 1 1 ] AB
[ [ 1  1 ] [  9  81 ] ] 1 1 [ 2 3 ] [ 1 1 ] [A*x-Y*Z]/gx
------------Rester:
DECIMAL
[ [ 1   1   1    1 ]
  [ 2   4   8   16 ]
  [ 3   9  27   81 ]
  [ 4  16  64  256 ] ] 1 SP ?
1 [ 2 2 3 4 ] [ 0 1 1 1 ] [A*x-Y*Z]/gx OVER . DUP . SP ?
2 [ -1 3 6 12 ] [ 2 1 6 14 ] [A*x-Y*Z]/gx OVER . DUP . SP ?
12 [ 4 -6 14 48 ] [ -6 6 10 72 ] [A*x-Y*Z]/gx OVER . DUP . SP ?
288 [ -72 132 -72 300 ] [ 48 -72 48 276 ] [A*x-Y*Z]/gx OVER . DUP . SP ?
HEX ERGEBNIS ?

ergibt
1 [ 2 2 3 4 ] [ 0 1 1 1 ] [A*x-Y*Z]/gx OVER . DUP . SP ? [ [ 1 -1 -1 -1 ] [ 2 2 6 14 ] [ 3 6 24 78 ] [ 4 12 60 252 ] ] 1 140 ok
2 [ -1 3 6 12 ] [ 2 1 6 14 ] [A*x-Y*Z]/gx OVER . DUP . SP ? [ [ 4 -1 4 12 ] [ -2 1 -6 -14 ] [ -6 6 12 72 ] [ -16 12 48 336 ] ] 2 140 ok
12 [ 4 -6 14 48 ] [ -6 6 10 72 ] [A*x-Y*Z]/gx OVER . DUP . SP ? [ [ 36 -18 4 -72 ] [ -30 24 -6 132 ] [ 6 -6 2 -72 ] [ 48 -72 48 288 ] ] 12 140 ok
288 [ -72 132 -72 300 ] [ 48 -72 48 276 ] [A*x-Y*Z]/gx OVER . DUP . SP ? [ [ 1152 -864 384 -72 ] [ -1248 1368 -672 132 ] [ 432 -576 336 -72 ] [ -48 72 -48 12 ] ] 288 140 ok
