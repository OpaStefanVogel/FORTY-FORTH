( EXXI reaktivieren, muss dann aus den "nicht mehr verwendeten" noch raus...
: 2@ ( adr --> a b )
  DUP 1+ @ SWAP @ ;
: 2! ( a b adr --> )
  SWAP OVER ! 1+ ! ;
: 2? 2@ B. ;

XBIT VARIABLE RAMP3 ( RAMP3 TIB RAMP1
: RAMBUF ( /name/  n --> )
  MINUS RAMP3 +! RAMP3 @ CONSTANT ; ( oo INDVAR muss da her )


20 RAMBUF TLISTE
TLISTE VARIABLE TLISTENZEIGER
: TLISTY 
  TLISTE BEGIN TLISTENZEIGER @ OVER > WHILE 
    DUP @ CR DUP M. 3 M- 2@ SWAP TYPE 
    1+ REPEAT DROP ;

0 VARIABLE REMOPFA
0 VARIABLE STATMERK
0 VARIABLE EXXIUHR
: EXXI
  ( UHRL @ >R
  STAT @ STATMERK ! 0 STAT ! ( eigentlich >R )
  TLISTE
  BEGIN DUP TLISTENZEIGER @ LT WHILE
    DUP >R @ EXECUTE R> 1+ REPEAT DROP
  STATMERK @ STAT ! 
  ( UHRL @ R> M- EXXIUHR ! 
  ;

( EXXI in KEY einbauen
04 ' EXXI MLIT ' KEY ! ( KEY war vorher : KEY BEGIN NOOP ... REPEAT ;

: ENTFERNE 
  20 WORD FIND LCFA DROP 1+
  ( DUP 0= IF 3 ERROR END_IF )
  0 REMOPFA !
  TLISTE BEGIN TLISTENZEIGER @ OVER > WHILE
    2DUP @ = IF
      1 REMOPFA !
      -1 TLISTENZEIGER +!
      END_IF
    REMOPFA @ IF
      DUP 1+ @ OVER !
      END_IF
    1+ REPEAT DROP
  REMOPFA !
  ;
  
: BEFESTIGE ENTFERNE
  REMOPFA @ TLISTENZEIGER @ !
  1 TLISTENZEIGER +! 
  ;

( zum Ausprobieren:
( 0 VARIABLE EMAIL_DA
( : ZUCK EMAIL_DA @ 2D04 ! ;
(
( BEFESTIGE ZUCK TLISTY
( -1 EMAIL_DA !
( 0 EMAIL_DA !
( ENTFERNE ZUCK


1800 ERGEBNIS !


( jetzt los mit LINKS-RECHTS-OBEN-UNTEN
1FF0 10 0 FILL
1FFF CONSTANT LINKS-ANGEKOMMEN
1FFF CONSTANT RECHTS-ABGESCHICKT
1FFE CONSTANT LINKS-ABGESCHICKT
1FFE CONSTANT RECHTS-ANGEKOMMEN
1FF0 CONSTANT RECHTS-BYTES
1FE0 CONSTANT UNTEN-BYTES
-1 VARIABLE IAM1X
-1 VARIABLE IAM1Y	
-1 VARIABLE IAM2X
-1 VARIABLE IAM2Y

: ABSCHICKEN ( x y n op adr --> )
  CR ." abgeschickt nach " . ." mit " 2DROP SWAP . . ;

1 2 0 0 RECHTS-BYTES ABSCHICKEN


: XY-PROC ( x y --> )
  CR ." XY "
  DUP IAM2Y @ LT IF -1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y ! END_IF
  OVER IAM1X @ = NOT OVER IAM2Y @ = NOT AND IF 
    IAM1X @ -1 = IF OVER IAM1X ! DUP IAM1Y ! 
      ELSE OVER IAM2X ! DUP IAM2Y ! END_IF
    CR IAM1X ? IAM1Y ? IAM2X ? IAM2Y ?
    2DUP 0 0 RECHTS-BYTES ABSCHICKEN
    2DUP 0 0 UNTEN-BYTES ABSCHICKEN
    END_IF
  2DROP ;

-1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y !
0 0 XY-PROC
0 0 XY-PROC
0 0 XY-PROC
0 0 XY-PROC
5 5 XY-PROC
5 5 XY-PROC
5 5 XY-PROC
5 5 XY-PROC
0 0 XY-PROC
0 0 XY-PROC
0 0 XY-PROC
0 0 XY-PROC
5 5 XY-PROC
5 5 XY-PROC
5 5 XY-PROC
5 5 XY-PROC


       


