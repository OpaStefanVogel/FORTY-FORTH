( EXXI reaktivieren, muss dann aus den "nicht mehr verwendeten" noch raus...
: 2@ ( adr --> a b )
  DUP 1+ @ SWAP @ ;
: 2! ( a b adr --> )
  SWAP OVER ! 1+ ! ;
: 2? 2@ B. ;

XBIT VARIABLE RAMP3 ( RAMP3 TIB RAMP1
: RAMBUF ( /name/  n --> )
  MINUS RAMP3 +! RAMP3 @ CONSTANT ; ( oo INDVAR muss da her )


20 RAMBUF TLISTE
TLISTE VARIABLE TLISTENZEIGER
: TLISTY 
  TLISTE BEGIN TLISTENZEIGER @ OVER > WHILE 
    DUP @ CR DUP M. 3 M- 2@ SWAP TYPE 
    1+ REPEAT DROP ;

0 VARIABLE REMOPFA
0 VARIABLE STATMERK
0 VARIABLE EXXIUHR
: EXXI
  ( UHRL @ >R
  STAT @ STATMERK ! 0 STAT ! ( eigentlich >R )
  TLISTE
  BEGIN DUP TLISTENZEIGER @ LT WHILE
    DUP >R @ EXECUTE R> 1+ REPEAT DROP
  STATMERK @ STAT ! 
  ( UHRL @ R> M- EXXIUHR ! 
  ;

( EXXI in KEY einbauen
04 ' EXXI MLIT ' KEY ! ( KEY war vorher : KEY BEGIN NOOP ... REPEAT ;

: ENTFERNE 
  20 WORD FIND LCFA DROP 1+
  ( DUP 0= IF 3 ERROR END_IF )
  0 REMOPFA !
  TLISTE BEGIN TLISTENZEIGER @ OVER > WHILE
    2DUP @ = IF
      1 REMOPFA !
      -1 TLISTENZEIGER +!
      END_IF
    REMOPFA @ IF
      DUP 1+ @ OVER !
      END_IF
    1+ REPEAT DROP
  REMOPFA !
  ;
  
: BEFESTIGE ENTFERNE
  REMOPFA @ TLISTENZEIGER @ !
  1 TLISTENZEIGER +! 
  ;

( zum Ausprobieren:
( 0 VARIABLE EMAIL_DA
( : ZUCK EMAIL_DA @ 2D04 ! ;
(
( BEFESTIGE ZUCK TLISTY
( -1 EMAIL_DA !
( 0 EMAIL_DA !
( ENTFERNE ZUCK


1800 ERGEBNIS !


( jetzt los mit LINKS-RECHTS-OBEN-UNTEN
1FF0 10 0 FILL
2804 CONSTANT LINKS-ABGESCHICKT
2804 CONSTANT RECHTS-ABGESCHICKT
2805 CONSTANT LINKS-ANGEKOMMEN
2805 CONSTANT RECHTS-ANGEKOMMEN
2806 CONSTANT OBEN-ABGESCHICKT
2806 CONSTANT UNTEN-ABGESCHICKT
2807 CONSTANT OBEN-ANGEKOMMEN
2807 CONSTANT UNTEN-ANGEKOMMEN
2000 CONSTANT RECHTS-BYTES
2400 CONSTANT UNTEN-BYTES
2000 CONSTANT LINKS-BYTES
2400 CONSTANT OBEN-BYTES
-1 VARIABLE IAM1X
-1 VARIABLE IAM1Y	
-1 VARIABLE IAM2X
-1 VARIABLE IAM2Y
0 VARIABLE LINKS-MERK
0 VARIABLE OBEN-MERK
0 VARIABLE RECHTS-MERK
0 VARIABLE UNTEN-MERK

: ABSCHICKEN ( x y n op adr --> )
  CR ." abgeschickt nach " . ." mit " 2DROP SWAP . . ;
: R-ABSCHICKEN ( x y n op --> )
  BEGIN RECHTS-ANGEKOMMEN @ RECHTS-MERK @ = UNTIL
  RECHTS-BYTES @
  SWAP OVER ! 1+ SWAP >R SWAP >R
  SWAP OVER ! 1+ R> OVER ! 1+ R> SWAP !
  RECHTS-ANGEKOMMEN @ NOT 1 AND RECHTS-MERK !
  RECHTS-ANGEKOMMEN @ NOT RECHTS-ABGESCHICKT !
  CR ." r-abgeschickt"
  ;
: U-ABSCHICKEN ( x y n op --> )
  BEGIN UNTEN-ANGEKOMMEN @ UNTEN-MERK @ = UNTIL
  UNTEN-BYTES @
  SWAP OVER ! 1+ SWAP >R SWAP >R
  SWAP OVER ! 1+ R> OVER ! 1+ R> SWAP !
  UNTEN-ANGEKOMMEN @ NOT 1 AND UNTEN-MERK !
  UNTEN-ANGEKOMMEN @ NOT UNTEN-ABGESCHICKT !
  CR ." u-abgeschickt"
  ;

1 2 0 0 R-ABSCHICKEN
RECHTS-BYTES 8 DUMP RECHTS-ABGESCHICKT ? RECHTS-ANGEKOMMEN ?
RECHTS-ANGEKOMMEN @ RECHTS-ABGESCHICKT !
5 6 1 9 U-ABSCHICKEN
UNTEN-BYTES 8 DUMP UNTEN-ABGESCHICKT ? UNTEN-ANGEKOMMEN ?
UNTEN-ANGEKOMMEN @ UNTEN-ABGESCHICKT !

: XY-PROC ( x y --> )
  CR ." XY " OVER . DUP .
  OVER IAM2X @ LT OVER IAM2Y @ LT AND IF -1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y ! END_IF
  OVER IAM1X @ = NOT IAM2X @ -1 = AND IF 
    IAM1X @ -1 = IF OVER IAM1X ! ELSE OVER IAM2X ! END_IF
    CR IAM1X ? IAM1Y ? IAM2X ? IAM2Y ?
    2DUP 0 0 U-ABSCHICKEN
    END_IF
  DUP IAM1Y @ = NOT IAM2Y @ -1 = AND IF 
    IAM1Y @ -1 = IF DUP IAM1Y ! ELSE DUP IAM2Y ! END_IF
    CR IAM1X ? IAM1Y ? IAM2X ? IAM2Y ?
    2DUP 0 0 R-ABSCHICKEN
    END_IF
  2DROP ;

-1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y ! 
OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
5 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
5 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 3 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 3 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
5 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
5 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 3 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0 3 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
0A 0 XY-PROC OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !


( empfangene Bytes jetzt auswerten

: L-AUSLES
  LINKS-MERK @ LINKS-ABGESCHICKT @ = NOT IF
    LINKS-BYTES @ 0= IF 
      LINKS-BYTES @ 1+ DUP @ SWAP 1+ @ 1+ 
      LINKS-ABGESCHICKT @ LINKS-MERK !
      LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
      XY-PROC END_IF
    END_IF
  ;

: O-AUSLES
  OBEN-MERK @ OBEN-ABGESCHICKT @ = NOT IF
    OBEN-BYTES @ 0= IF 
      OBEN-BYTES @ 1+ DUP @ 1+ SWAP 1+ @ 
      OBEN-ABGESCHICKT @ OBEN-MERK !
      OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN !
      XY-PROC END_IF
    END_IF
  ;
 
-1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y ! 
OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
0 0 XY-PROC
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
 
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?

-1 IAM1X ! -1 IAM1Y ! -1 IAM2X ! -1 IAM2Y ! 
OBEN-ABGESCHICKT @ OBEN-MERK ! 
OBEN-ABGESCHICKT @ OBEN-ANGEKOMMEN ! 
LINKS-ABGESCHICKT @ LINKS-MERK !
LINKS-ABGESCHICKT @ LINKS-ANGEKOMMEN !
UNTEN-ANGEKOMMEN @ UNTEN-MERK ! 
RECHTS-ANGEKOMMEN @ RECHTS-MERK !
LINKS-ABGESCHICKT ? LINKS-MERK ? OBEN-ABGESCHICKT ? OBEN-MERK ? RECHTS-ANGEKOMMEN ? RECHTS-MERK ? UNTEN-ANGEKOMMEN ? UNTEN-MERK ?
0 0 XY-PROC
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
L-AUSLES
LINKS-ABGESCHICKT ? LINKS-ANGEKOMMEN ?
 
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?
O-AUSLES
OBEN-ABGESCHICKT ? OBEN-ANGEKOMMEN ?



BEFESTIGE L-AUSLES
BEFESTIGE O-AUSLES

0 0 XY-PROC
OBEN-ABGESCHICKT ? OBEN-MERK ?

1 2804 ! 2804 4 DUMP
1 2805 ! 2804 4 DUMP
1 2806 ! 2804 4 DUMP
1 2807 ! 2804 4 DUMP
0 2804 ! 2804 4 DUMP
0 2805 ! 2804 4 DUMP
0 2806 ! 2804 4 DUMP
0 2807 ! 2804 4 DUMP
