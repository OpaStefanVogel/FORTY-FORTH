<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="R00.xsl" ?>
<los><step>Step 10</step>Nutzereingabe

Variablen:
KEY_BYTE        = enthält das vom Nutzer eingegebene Byte
KEY_ABGESCHICKT = wurde invertiert, als KEY_BYTE abgeschickt,
KEY_ANGEKOMMEN  = wird invertiert, wenn KEY_BYTE ausgewertet und das Programm bereit zum Empfang des nächsten Bytes ist.

Invertieren von KEY_ABGESCHICKT bewirkt im darauffolgenden Takt eine Unterbrechung des laufenden Programms und Aufruf von Unterprogramm ab Adresse 0016 (Interrupt). Dort wird KEY_BYTE gelesen und im Eingabepuffer zwischengespeichert sowie zuletzt KEY_ANGEKOMMEN invertiert, anschließend das unterbrochene Programm fortgesetzt. Also muss generell beim Programmieren berücksichtigt werden, jederzeit an jeder Stelle kann eine solche Unterbrechung erfolgen.

Verwendete FORTH-Worte:
KEY  ( --> n ) wartet auf Nutzereingabe eines Zeichens und übergibt es als n auf dem Stapel.
*    ( a b --> a*b ) Multiplikation
.    ( n --> ) gibt n als Zeichenkette ins Terminal aus.
 
Beispiel: <i>Rechne 56*89</i> 

<term>git checkout Step_10
git diff <diff>Step_9...Step_10</diff></term>
<tterm>close_sim -force -quiet
launch_simulation
run 3 ms</tterm>Der jetzige FORTH-Interpreter rechnet allerdings nur 16 Bit hexadezimal, das soll für den Moment auch reichen. Ergebnis:

<ffterm>FORTY-FORTH

ok
<u>56 89 * .</u> 2E06 ok
</ffterm>

Die Nutzereingabe <u>56 89 * .</u> ist farblich unterschiedlich dargestellt gegenüber der Programmausgabe. Die Nutzereingabe wurde mit Enter=0A abgeschlossen (nicht dargestellt). Sie erscheint ab 100000 ns in KEY_BYTE. Das Ergebnis wird beginnend ab 2378760 ns in EMIT_BYTE ausgegeben.  

<weiter /><a href="Spartan3.xml">Installation Spartan3 Board</a>
</los>
