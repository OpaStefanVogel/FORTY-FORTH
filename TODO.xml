ok am Anfang doch gleich vivado ohne -mode tcl
ok noch diff-Verweis zu GitHub machen ok, perfekt als <diff></diff>
.. FLOAT die Stapeldiagramme
ok den epiphany - Fehler ok war eigener Fehler
o. ja und natürlich unbedingt Kleinerzeichen in &x...; oder ganz raus
.. Ergebnis auch noch als Tabelle mit xml
.. nach P11 dann Vivado ausdrehen
o. eventuell PC, PD als Signal, ist weniger % aber läuft schlecht, such warum
nö oder RP mit als Variable nö, deutlich mehr %
ok alle CONV_UNSIGNED wieder in STD_LOGIC_VECTOR machen ok ist schon
nö ob 0-0FFF oder 1FFF, ebenso E000-EFFF oder FFFF nö eventuell bei P21
nö write-first oder UNCHANGED...nö, dann macht ISE 109%
ok vorherige Simulation bereits in Tcl-Console beenden ok
.. stapR und stapRAM besser unterscheiden
ok SP mod 4 mal versuchen
.. auch die librarys mal neu sondieren was nötig und was richtig
.. Verweis auf Zoomtasten
nö P01_top kann vorerst raus, 2D04 mit in testbench nö
ok SP_SIM kann wieder unter PD_SIM in den Ports
ok mach läuft wieder: Vergleiche nochmal mit S3:
   ok XON XOFF über EMIT OK
   ok paar NOOP's sind zusätzlich drin ok gar nicht erst übernommen
   ok das neue R&lt;... muss ich wohl aus S3 holen ok ja ist drin ok
   ok das war das wesentliche aus diff ok
ok Step ? noch füllen, ok ist jetzt Step 1
ok S3 Step_1 läuft, aber nochmal den Wechsel bis Step_10 überlegen.  ok
ok KEY_EMPFANGEN noch beschalten ok jetzt mit 0 D000 !
.. den benötigten Langsamtakt einfach an KEY(0) anschalten eventuell???
.. "neue vhdl-Variablen" in P05
nö Terminal: ganz raus und alles mit in Tcl-Console rein. nö geht danach nicht weiter
.. noch ein R00 mit nur I-O-Check oder auch nicht.
ok EMIT durchgängig in EMIT_BYTE umbenennen, nicht nur R10, ok
.. R09 SP runter auch in P20.vhd
nö doch das .wcfg File mit rein in Step_1 bis 10? nö, aber habe es geschafft. geht ok
ok xmlns= nochmal versuchen ok geht echt nur mit /xsl:attribute/
ok jetzt hab ich doch noch die compare-Funktion gefunden. Rein damit.
ok R00.DTD noch mit ok
ok Spartan3 startet mit je einem ? bei EMIT und KEY... ok super beide weg
   ok bei TXT mit TXT:='1' initialisieren
   ok bei RXD mit xcount:="FFFF0000" starten, wartet paar ms beim Start
ok R00.xsl mit Haltbarkeitsdatum versehen ok wunderbar, 2xmeta reicht
ok in RXD noch STRG umsetzen auf nach dbInput, aber wie? aha mit STRG_2
   ok dabei etliche Variablen in Signale umgeschrieben, 
   ok verbraucht weniger ok
.. na vielleicht doch ein kleiner Minifehler bei /section//div/ statt /span/
ok FFPINIT1.TXT und 2 gehören in master mit rein ok
ok alle .xml auch so anordnen, dass sie ohne xslt lesbar sind. ok
ok auch noch einen Weiterhupf ok svg-Kreis
.. README.md dann auch mit vorrichten
ok das .ucf File auch noch weng zurechtmachen. ok
ok colorisierte Ausgabe --- in FFINIT2.TXT mit reinmach erstmal ok
.. na inzwischen kann auch das pre-wrap allmählich ganz raus
nö ProgRAM aus P20.vhd herausziehen damit unterschiedlich machbar??? nö lieber nicht
ok aber in DUMPZ < NOT statt = damit HERE 0 0 DUMPZ zu machen geht ok
.. was auch nicht geht, letztes <p> in R10 vor <Terminal_1> hinsetzen
ok Spartan3_Step_9 hat KEY drin, soll raus ok
ok dann wohl doch alle + * . in M+ M* M. umbenennen ok zumindestens vorübergehend
.. da in R00.DTD das ANY für valide nicht ausreicht, muss ich doch noch weng füllen.
ok bei SMUL und so díe DO LOOP noch in BEGIN UNTIL umschreiben, oje
   da lieber doch ein schnelles DO LOOP, ich hab ja schon RAMB
   ok habs geschafft, das ist die Wucht
nö das 1. TEST wieder nur als Variante und gleich mit FF starten nö
.. logfile auch mit xml!!!
ok das fertige FFINIT1SMUL1+FFINIT2 muss sich auch recompilieren lassen
   das ist momentan noch eine knifflige Einschränkung, wie machen?
   ok auch wenn DEZ eingestellt geht alle schief
.. aber nochmal gründlich durchgucken
.. Bahn ist frei für massives Umstapeln in SDIV und so.
.. ganz interessant wäre auch design summary mit zu Step_1 bis 11.
ok davor NEBENRECHNUNG noch
ok weiter dann mit MATRIX INVERTIEREN ok 
ok aber noch nicht mit O. ok jetzt doch
ok aber diesmal ohne Bruchrechnen!
ok auch mal die 25 MHz wieder anmach, wär nicht schlecht. ok perfekt
ok N" 4000" geht nicht richtig??? ok inzwischen doch
ok copy-of in ptable ist wohl nicht ganz korrekt... ok ist behoben
.. ganz ohne Variablen?
.. wenigstens die ab 0040 noch extra, damit readonly wieder mal geht
.. als nächstes mal SLX-ERGEBNIS, da war wo noch was,
   ok im Moment sowieso ERROR - Fehler Nummer 7658, da kann nix schiefgehen.
   .. SPEICHERFREI über SPEICHERENDE hinaus noch, das hatte ich doch schon
.. Step_0 nur für Spartan3 und nicht vivado!!! Das ist es.
.. noch was geht noch nicht wie es sollte: : DX 11111 ;
ok KEY_INT zeigt noch auf Adresse 0008 statt neu 0018 ok jetzt 0018
.. /usr/share/doc/git-core/contrib/workdir/git-new-workdir FORTY-FORTH_gh-pages/ FORTY-FORTH_master
   wenn im zweiten Verzeichnis gleicher branch, 
   dann erfolgt keine automatische Aktualisierung!!! 
   nur branch weiter und dafür macht Index alles zurück
   deshalb vollkommen anderen branch versuchen
.. so, wenn jetzt "<" reinkommt, was muss da alles mit gleich geschehen
   ok jede Menge < wegen < 0< und <name> <text> umschreiben in LT 0LT ok
   ok automatisch jede Restzeile beginnend mit &lt; als Kommentar überlesen???
      oder echt jedes Wort ab < bis > überlesen???
      oder < als Zeilenende nehmen??? ja das
   .. wenn alles drin das neue INVERTIEREN hinzupacken ohne DO LOOP
   .. und neues R11 dazu mit Vandermonde
   .. dann auch Log-File endlich

Script hierzu von FFINIT1.TXT zu FFINIT1NEU.TXT:

7aa6afde6f2ca
cp FFINIT1.TXT /dev/ttyAMA0
echo ': LT < ; : 0LT 0< ; ' >/dev/ttyAMA0 # macht aus < 0< neu \ und 0\
echo 'HERE 100 + DPMERK ! E800 BANF !' >/dev/ttyAMA0
cp FFINIT1NEU.TXT /dev/ttyAMA0
cp FFINIT1NEU.TXT /dev/ttyAMA0
echo '058 DPMERK ! E000 BANF !' >/dev/ttyAMA0
cp FFINIT1NEU.TXT /dev/ttyAMA0
cp FFINIT1NEU.TXT /dev/ttyAMA0
( screen ^A H Logfile starten
echo "HERE 0 0 DUMPZ" >/dev/ttyAMA0          # generiert ProgRAM Step_10
echo "BZEIG @ BANF @ -1 DUMPZ" >/dev/ttyAMA0 # generiert ByteRAM Step_10
( screen ^A H Logfile beenden
